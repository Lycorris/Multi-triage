11413,"Role-Based authorization not working in asp.net core 2.1### Describe the bug\r\nI followed the instruction on documentation and online about the role authorization, but the authorize since doesn't work even after I add the role type to my database. It always lets the user access the resources no matter what the user role is. I don't see why and have not idea what I am missing in my startup. Any helps will be appreciated.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core '2.1'\r\n2. Run this code '....'\r\n3. With these arguments '....'\r\n4. See error\r\n\r\n### Expected behavior\r\nIt should reject the user request to the API, but it doesn't.\r\n\r\n### My startup.cs\r\n\r\n\r\n\r\n### Additional context\r\nThanks, guys. I will update more information later.\r\n",Needs: Author Feedback|area-auth,HaoK,"### Describe the bug\r\nI followed the instruction on documentation and online about the role authorization, but the authorize since doesn't work even after I add the role type to my database. It always lets the user access the resources no matter what the user role is. I don't see why and have not idea what I am missing in my startup. Any helps will be appreciated.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core '2.1'\r\n2. Run this code '....'\r\n3. With these arguments '....'\r\n4. See error\r\n\r\n### Expected behavior\r\nIt should reject the user request to the API, but it doesn't.\r\n\r\n### My startup.cs\r\n\r\n```csharp\r\n    public class Startup\r\n    {\r\n        public Startup(IConfiguration configuration)\r\n        {\r\n            Configuration = configuration;\r\n        }\r\n\r\n        public IConfiguration Configuration { get; }\r\n\r\n        // This method gets called by the runtime. Use this method to add services to the container.\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.Configure<CookiePolicyOptions>(options =>\r\n            {\r\n                // This lambda determines whether user consent for non-essential cookies is needed for a given request.\r\n                options.CheckConsentNeeded = context => true;\r\n                options.MinimumSameSitePolicy = SameSiteMode.None;\r\n            });\r\n\r\n            services.AddDbContext<ApplicationDbContext>(options =>\r\n                 options.UseMySql(Configuration.GetConnectionString(""DefaultConnection"")));\r\n            //role service\r\n            services.AddIdentity<IdentityUser, IdentityRole>()\r\n                .AddRoles<IdentityRole>()\r\n                .AddEntityFrameworkStores<ApplicationDbContext>()\r\n                .AddDefaultTokenProviders();\r\n\r\n            services.AddTransient<IEmailSender, AuthMessageSender>();\r\n            //Disable the Password Hash \r\n            services.AddScoped<IPasswordHasher<IdentityUser>, MyPasswordHasher>();\r\n\r\n            var migrationsAssembly = typeof(Startup).GetTypeInfo().Assembly.GetName().Name;\r\n            //using the aspnetIdentity, the server will read the userdata via identity API\r\n\r\n            services.AddIdentityServer()\r\n                  .AddDeveloperSigningCredential()\r\n                  .AddConfigurationStore(options =>\r\n                  {\r\n                      options.ConfigureDbContext = builder =>\r\n                       builder.UseMySql(Configuration.GetConnectionString(""DefaultConnection""),\r\n                       sql => sql.MigrationsAssembly(migrationsAssembly));\r\n                  })\r\n                  .AddOperationalStore(options =>\r\n                   {\r\n                       options.ConfigureDbContext = builder =>\r\n                           builder.UseMySql(Configuration.GetConnectionString(""DefaultConnection""),\r\n                           sql => sql.MigrationsAssembly(migrationsAssembly));\r\n\r\n                       // this enables automatic token cleanup. this is optional.\r\n                       options.EnableTokenCleanup = false;\r\n                       options.TokenCleanupInterval = 30;\r\n                   })\r\n                    .AddAspNetIdentity<IdentityUser>();\r\n     \r\n\r\n\r\n            services.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_1);\r\n        }\r\n\r\n        private void AddAspNetIdentity<T>()\r\n        {\r\n            throw new NotImplementedException();\r\n        }\r\n\r\n        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.\r\n        public void Configure(IApplicationBuilder app, IHostingEnvironment env, IServiceProvider serviceProvider)\r\n        {\r\n            if (env.IsDevelopment())\r\n            {\r\n                //InitDatabase(app);\r\n                app.UseDeveloperExceptionPage();\r\n                app.UseDatabaseErrorPage();\r\n            }\r\n            else\r\n            {\r\n                app.UseExceptionHandler(""/Home/Error"");\r\n                app.UseHsts();\r\n            }\r\n            app.UseAuthentication();\r\n            app.UseHttpsRedirection();\r\n            app.UseStaticFiles();\r\n            app.UseCookiePolicy();\r\n            app.UseIdentityServer();\r\n           \r\n            \r\n            app.UseMvc(routes =>\r\n            {\r\n                routes.MapRoute(\r\n                    name: ""default"",\r\n                    template: ""{controller=Home}/{action=Index}/{id?}"");\r\n            });\r\n            //CreateRoles(serviceProvider).Wait();\r\n            \r\n        }\r\n\r\n        /// <summary>\r\n        ///\r\n        /// </summary>\r\n        /// <param name=""serviceProvider""></param>\r\n        /// <returns></returns>\r\n        private async Task CreateRoles(IServiceProvider serviceProvider)\r\n        {\r\n            var RoleManager = serviceProvider.GetRequiredService<RoleManager<IdentityRole>>();\r\n            var UserManager = serviceProvider.GetRequiredService<UserManager<IdentityUser>>();\r\n            IdentityResult roleResult;\r\n            string[] roleNames = { ""Admin"", ""User"" };\r\n            foreach (var roleName in roleNames)\r\n            {\r\n                var roleExist = await RoleManager.RoleExistsAsync(roleName);\r\n                if (!roleExist)\r\n                {\r\n                    roleResult = await RoleManager.CreateAsync(new IdentityRole(roleName));\r\n                }\r\n            }\r\n            await AddRoles(""pineappleman520@gmail.com"", ""Admin"", serviceProvider);\r\n            await AddRoles(""1111@qq.com"", ""User"", serviceProvider);\r\n            await AddRoles(""985@qq.com"", ""User"", serviceProvider);\r\n            await AddRoles(""dannike19980521@gmail.com"", ""User"", serviceProvider);\r\n            await AddRoles(""dxk5418@psu.edu"", ""User"", serviceProvider);\r\n\r\n        }\r\n        private async Task AddRoles(string Email,string Role ,IServiceProvider serviceProvider)\r\n        {\r\n            var UserManager = serviceProvider.GetRequiredService<UserManager<IdentityUser>>();\r\n            IdentityUser user = await UserManager.FindByNameAsync(Email);\r\n            await UserManager.AddToRoleAsync(user, Role);\r\n        }\r\n\r\n\r\n### The API I want to protect\r\n[Authorize(Roles = ""Admin"")]\r\n        public IActionResult About()\r\n        {\r\n            ViewData[""Message""] = ""Your application description page."";\r\n\r\n            return View();\r\n        }\r\n```\r\n\r\n### Additional context\r\nThanks, guys. I will update more information later.\r\n","csharp\r\n    public class Startup\r\n    {\r\n        public Startup(IConfiguration configuration)\r\n        {\r\n            Configuration = configuration;\r\n        }\r\n\r\n        public IConfiguration Configuration { get; }\r\n\r\n        // This method gets called by the runtime. Use this method to add services to the container.\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.Configure<CookiePolicyOptions>(options =>\r\n            {\r\n                // This lambda determines whether user consent for non-essential cookies is needed for a given request.\r\n                options.CheckConsentNeeded = context => true;\r\n                options.MinimumSameSitePolicy = SameSiteMode.None;\r\n            });\r\n\r\n            services.AddDbContext<ApplicationDbContext>(options =>\r\n                 options.UseMySql(Configuration.GetConnectionString(""DefaultConnection"")));\r\n            //role service\r\n            services.AddIdentity<IdentityUser, IdentityRole>()\r\n                .AddRoles<IdentityRole>()\r\n                .AddEntityFrameworkStores<ApplicationDbContext>()\r\n                .AddDefaultTokenProviders();\r\n\r\n            services.AddTransient<IEmailSender, AuthMessageSender>();\r\n            //Disable the Password Hash \r\n            services.AddScoped<IPasswordHasher<IdentityUser>, MyPasswordHasher>();\r\n\r\n            var migrationsAssembly = typeof(Startup).GetTypeInfo().Assembly.GetName().Name;\r\n            //using the aspnetIdentity, the server will read the userdata via identity API\r\n\r\n            services.AddIdentityServer()\r\n                  .AddDeveloperSigningCredential()\r\n                  .AddConfigurationStore(options =>\r\n                  {\r\n                      options.ConfigureDbContext = builder =>\r\n                       builder.UseMySql(Configuration.GetConnectionString(""DefaultConnection""),\r\n                       sql => sql.MigrationsAssembly(migrationsAssembly));\r\n                  })\r\n                  .AddOperationalStore(options =>\r\n                   {\r\n                       options.ConfigureDbContext = builder =>\r\n                           builder.UseMySql(Configuration.GetConnectionString(""DefaultConnection""),\r\n                           sql => sql.MigrationsAssembly(migrationsAssembly));\r\n\r\n                       // this enables automatic token cleanup. this is optional.\r\n                       options.EnableTokenCleanup = false;\r\n                       options.TokenCleanupInterval = 30;\r\n                   })\r\n                    .AddAspNetIdentity<IdentityUser>();\r\n     \r\n\r\n\r\n            services.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_1);\r\n        }\r\n\r\n        private void AddAspNetIdentity<T>()\r\n        {\r\n            throw new NotImplementedException();\r\n        }\r\n\r\n        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.\r\n        public void Configure(IApplicationBuilder app, IHostingEnvironment env, IServiceProvider serviceProvider)\r\n        {\r\n            if (env.IsDevelopment())\r\n            {\r\n                //InitDatabase(app);\r\n                app.UseDeveloperExceptionPage();\r\n                app.UseDatabaseErrorPage();\r\n            }\r\n            else\r\n            {\r\n                app.UseExceptionHandler(""/Home/Error"");\r\n                app.UseHsts();\r\n            }\r\n            app.UseAuthentication();\r\n            app.UseHttpsRedirection();\r\n            app.UseStaticFiles();\r\n            app.UseCookiePolicy();\r\n            app.UseIdentityServer();\r\n           \r\n            \r\n            app.UseMvc(routes =>\r\n            {\r\n                routes.MapRoute(\r\n                    name: ""default"",\r\n                    template: ""{controller=Home}/{action=Index}/{id?}"");\r\n            });\r\n            //CreateRoles(serviceProvider).Wait();\r\n            \r\n        }\r\n\r\n        /// <summary>\r\n        ///\r\n        /// </summary>\r\n        /// <param name=""serviceProvider""></param>\r\n        /// <returns></returns>\r\n        private async Task CreateRoles(IServiceProvider serviceProvider)\r\n        {\r\n            var RoleManager = serviceProvider.GetRequiredService<RoleManager<IdentityRole>>();\r\n            var UserManager = serviceProvider.GetRequiredService<UserManager<IdentityUser>>();\r\n            IdentityResult roleResult;\r\n            string[] roleNames = { ""Admin"", ""User"" };\r\n            foreach (var roleName in roleNames)\r\n            {\r\n                var roleExist = await RoleManager.RoleExistsAsync(roleName);\r\n                if (!roleExist)\r\n                {\r\n                    roleResult = await RoleManager.CreateAsync(new IdentityRole(roleName));\r\n                }\r\n            }\r\n            await AddRoles(""pineappleman520@gmail.com"", ""Admin"", serviceProvider);\r\n            await AddRoles(""1111@qq.com"", ""User"", serviceProvider);\r\n            await AddRoles(""985@qq.com"", ""User"", serviceProvider);\r\n            await AddRoles(""dannike19980521@gmail.com"", ""User"", serviceProvider);\r\n            await AddRoles(""dxk5418@psu.edu"", ""User"", serviceProvider);\r\n\r\n        }\r\n        private async Task AddRoles(string Email,string Role ,IServiceProvider serviceProvider)\r\n        {\r\n            var UserManager = serviceProvider.GetRequiredService<UserManager<IdentityUser>>();\r\n            IdentityUser user = await UserManager.FindByNameAsync(Email);\r\n            await UserManager.AddToRoleAsync(user, Role);\r\n        }\r\n\r\n\r\n### The API I want to protect\r\n[Authorize(Roles = ""Admin"")]\r\n        public IActionResult About()\r\n        {\r\n            ViewData[""Message""] = ""Your application description page."";\r\n\r\n            return View();\r\n        }\r\n"
11405,"AuthenticationProperties not accessible via SignInManagerHello,\r\n\r\nThe following problem has been bugging me for a long time ever since ASP.NET Identity has been released.\r\n\r\n## Is your feature request related to a problem? Please describe.\r\nI am trying to gain access to the `AuthenticationProperties` object that I get back from calling [`SignInManager.ConfigureExternalAuthenticationProperties(...)`][1] to set metadata about an external login. Currently, when an `ExternalLogin` is invoked on the sign-in page, the `SignInManager` offers the following API:\r\n\r\n\r\n[1]:https://github.com/aspnet/AspNetCore/blob/a4bd1308ca32fb735a895c9e834de3bb844c3e66/src/Identity/Core/src/SignInManager.cs#L715-L724\r\n\r\nSo, [`SignInManager.ConfigureExternalAuthenticationProperties(...)`][1] returns `AuthenticationProperties` that I use to set `MyCustomThing`. Then, I hand off the challenge to the external login middleware providers.\r\n\r\nOn the way back, after the user successfuly authenticates with the third-party social login, `ExternalLoginCallback` is invoked.\r\n\r\n\r\n\r\nCurrently, there is nothing in `SignInManager` that exposes the `AuthenticationProperties` that were exposed by [`SignInManager.ConfigureExternalAuthenticationProperties(...)`][1] back in the `ExternalLogin` method.\r\n\r\n[2]:https://github.com/aspnet/AspNetCore/blob/a4bd1308ca32fb735a895c9e834de3bb844c3e66/src/Identity/Core/src/SignInManager.cs#L638-L672\r\n\r\n## Describe the solution you'd like\r\nI would like to call [`SignInManager.GetExternalLoginInfoAsync()`][2] one time and have access to the `AuthenticationProperties` that appear near the `ExternalLoginInfo` object that is returned here:\r\n\r\nhttps://github.com/aspnet/AspNetCore/blob/a4bd1308ca32fb735a895c9e834de3bb844c3e66/src/Identity/Core/src/SignInManager.cs#L669-L672\r\n\r\nOnce I have access to `AuthenticationProperties` on `ExternalLoginInfo` I can access `MyCustomThing` and do something interesting.\r\n\r\n[4]:https://github.com/aspnet/AspNetCore/blob/a4bd1308ca32fb735a895c9e834de3bb844c3e66/src/Identity/Core/src/SignInManager.cs#L640\r\n\r\n## Describe alternatives you've considered\r\nCurrently, the only way I'm able to get back `AuthenticationProperties` from `SignInManager` that I originally set in `ExternalLogin` is to effectively call [`AuthenticateAsync(IdentityConstants.ExternalScheme)`][4] twice:\r\n* Once, indirectly by calling [`SignInManager.GetExternalLoginInfoAsync()`][4]\r\n* Twice, manually/independently to get the `auth` result from the underlying middleware.\r\n\r\nIn other words, my current hack is as follows:\r\n\r\n\r\n\r\n### Additional context\r\nI'd be happy to send a PR to resolve this issue to make the API for `SignInManager` more symmetrical.\r\n\r\nA proper fix would probably include adding an `AuthenticationProperties` property on `ExternalLoginInfo` class here:\r\n\r\nhttps://github.com/aspnet/AspNetCore/blob/a4bd1308ca32fb735a895c9e834de3bb844c3e66/src/Identity/Core/src/ExternalLoginInfo.cs#L13-L38\r\n\r\nAnd storing a reference to `auth.Properties` in the newly created property here:\r\n\r\nhttps://github.com/aspnet/AspNetCore/blob/a4bd1308ca32fb735a895c9e834de3bb844c3e66/src/Identity/Core/src/SignInManager.cs#L669-L672\r\n\r\n\r\n//cc @HaoK \r\n\r\nThanks,\r\nBrian Chavez\r\n\r\n:hourglass_flowing_sand: :mag: ***[""But I still haven't found what I'm for...""](https://www.youtube.com/watch?v=wdCJRybAtso)***\r\n",Done|enhancement|area-identity,HaoK,"Hello,\r\n\r\nThe following problem has been bugging me for a long time ever since ASP.NET Identity has been released.\r\n\r\n## Is your feature request related to a problem? Please describe.\r\nI am trying to gain access to the `AuthenticationProperties` object that I get back from calling [`SignInManager.ConfigureExternalAuthenticationProperties(...)`][1] to set metadata about an external login. Currently, when an `ExternalLogin` is invoked on the sign-in page, the `SignInManager` offers the following API:\r\n\r\n```csharp\r\npublic async Task<IActionResult> ExternalLogin(string provider, string returnUrl = null){\r\n   var props = this.SignInManager.ConfigureExternalAuthenticationProperties(provider, returnUrl);\r\n   props.Items[MyCustomThing] = ""SomeValue""; //CUSTOM META DATA HERE\r\n   return this.Challenge(props, provider);\r\n}\r\n```\r\n[1]:https://github.com/aspnet/AspNetCore/blob/a4bd1308ca32fb735a895c9e834de3bb844c3e66/src/Identity/Core/src/SignInManager.cs#L715-L724\r\n\r\nSo, [`SignInManager.ConfigureExternalAuthenticationProperties(...)`][1] returns `AuthenticationProperties` that I use to set `MyCustomThing`. Then, I hand off the challenge to the external login middleware providers.\r\n\r\nOn the way back, after the user successfuly authenticates with the third-party social login, `ExternalLoginCallback` is invoked.\r\n\r\n```csharp\r\npublic async Task<IActionResult> ExternalLoginCallback(string remoteError = null, string returnUrl = null)\r\n{\r\n   var info = await this.SignInManager.GetExternalLoginInfoAsync();\r\n   if( info is null )\r\n   {\r\n      return this.BadRequest(""Sign in info not found."");\r\n   }\r\n   \r\n   // How to get MyCustomThing from `info` variable of type ExternalLoginInfo??\r\n   // What I would like to do is:\r\n   var props = info.AuthenticationProperties; //???\r\n   var someValue = props.Items[MyCustomThing]; //???\r\n   //Do something intresting with MyCustomThing:someValue, then finally:\r\n   \r\n   await this.SignInManager.ExternalLoginSignInAsync(info.LoginProvider, info.ProviderKey, isPersistent: false);\r\n}\r\n```\r\n\r\nCurrently, there is nothing in `SignInManager` that exposes the `AuthenticationProperties` that were exposed by [`SignInManager.ConfigureExternalAuthenticationProperties(...)`][1] back in the `ExternalLogin` method.\r\n\r\n[2]:https://github.com/aspnet/AspNetCore/blob/a4bd1308ca32fb735a895c9e834de3bb844c3e66/src/Identity/Core/src/SignInManager.cs#L638-L672\r\n\r\n## Describe the solution you'd like\r\nI would like to call [`SignInManager.GetExternalLoginInfoAsync()`][2] one time and have access to the `AuthenticationProperties` that appear near the `ExternalLoginInfo` object that is returned here:\r\n\r\nhttps://github.com/aspnet/AspNetCore/blob/a4bd1308ca32fb735a895c9e834de3bb844c3e66/src/Identity/Core/src/SignInManager.cs#L669-L672\r\n\r\nOnce I have access to `AuthenticationProperties` on `ExternalLoginInfo` I can access `MyCustomThing` and do something interesting.\r\n\r\n[4]:https://github.com/aspnet/AspNetCore/blob/a4bd1308ca32fb735a895c9e834de3bb844c3e66/src/Identity/Core/src/SignInManager.cs#L640\r\n\r\n## Describe alternatives you've considered\r\nCurrently, the only way I'm able to get back `AuthenticationProperties` from `SignInManager` that I originally set in `ExternalLogin` is to effectively call [`AuthenticateAsync(IdentityConstants.ExternalScheme)`][4] twice:\r\n* Once, indirectly by calling [`SignInManager.GetExternalLoginInfoAsync()`][4]\r\n* Twice, manually/independently to get the `auth` result from the underlying middleware.\r\n\r\nIn other words, my current hack is as follows:\r\n```csharp\r\n/// <summary>\r\n/// Hack to get around not having access to AuthenticationProperties\r\n/// exposed by SignInManager.\r\n/// </summary>\r\npublic static async Task<ExtenralLoginInfo2> GetExternalLoginInfoAsync2(\r\n   this SignInManager signInManager,\r\n   string expectedXsrf = null)\r\n{\r\n   //First call to AuthenticateAsync.\r\n   var info = await signInManager.GetExternalLoginInfoAsync(expectedXsrf);\r\n   if( info is null ) return null;\r\n\r\n   //Second call to AuthenticateAsync.\r\n   var auth = await signInManager.Context.AuthenticateAsync(IdentityConstants.ExternalScheme);\r\n   return new ExtenralLoginInfo2(info, auth.Properties);\r\n}\r\n\r\n\r\npublic class ExtenralLoginInfo2\r\n{\r\n   public ExtenralLoginInfo2(\r\n      ExternalLoginInfo externalLoginInfo, \r\n      AuthenticationProperties authenticationProperties)\r\n   {\r\n      this.ExternalLoginInfo = externalLoginInfo;\r\n      this.AuthenticationProperties = authenticationProperties;\r\n   }\r\n\r\n   public ExternalLoginInfo ExternalLoginInfo { get; }\r\n   public AuthenticationProperties AuthenticationProperties { get; }\r\n}\r\n```\r\n\r\n\r\n### Additional context\r\nI'd be happy to send a PR to resolve this issue to make the API for `SignInManager` more symmetrical.\r\n\r\nA proper fix would probably include adding an `AuthenticationProperties` property on `ExternalLoginInfo` class here:\r\n\r\nhttps://github.com/aspnet/AspNetCore/blob/a4bd1308ca32fb735a895c9e834de3bb844c3e66/src/Identity/Core/src/ExternalLoginInfo.cs#L13-L38\r\n\r\nAnd storing a reference to `auth.Properties` in the newly created property here:\r\n\r\nhttps://github.com/aspnet/AspNetCore/blob/a4bd1308ca32fb735a895c9e834de3bb844c3e66/src/Identity/Core/src/SignInManager.cs#L669-L672\r\n\r\n\r\n//cc @HaoK \r\n\r\nThanks,\r\nBrian Chavez\r\n\r\n:hourglass_flowing_sand: :mag: ***[""But I still haven't found what I'm for...""](https://www.youtube.com/watch?v=wdCJRybAtso)***\r\n","csharp\r\npublic async Task<IActionResult> ExternalLogin(string provider, string returnUrl = null){\r\n   var props = this.SignInManager.ConfigureExternalAuthenticationProperties(provider, returnUrl);\r\n   props.Items[MyCustomThing] = ""SomeValue""; //CUSTOM META DATA HERE\r\n   return this.Challenge(props, provider);\r\n}\r\n"
11397,"Make dependency resolution available for EditContext form validation so that custom validators can access services.### Is your feature request related to a problem? Please describe.\r\nMicrosoft.AspNetCore.Components.Forms.EditContextDataAnnotationsExtensions.ValidateModel(EditContext, ValidationMessageStore) does not provide IServiceProvider as a constructor argument.  When we need more complex validation that requires additional dependencies in a custom validator the resolved dependency will be null.\r\n\r\n### Describe the solution you'd like\r\nIdeally ValidationContext would be instantiated with an IServiceProvider so that when writing a custom validator we'd have access services in custom validators.\r\n\r\n### Describe alternatives you've considered\r\nStill under investigation.\r\n\r\n### Additional context\r\n[EditContextDataAnnotationsExtensions.cs](https://github.com/aspnet/AspNetCore/blob/master/src/Components/Components/src/Forms/EditContextDataAnnotationsExtensions.cs)\r\n\r\n\r\n",question|area-blazor,SteveSandersonMS,"### Is your feature request related to a problem? Please describe.\r\nMicrosoft.AspNetCore.Components.Forms.EditContextDataAnnotationsExtensions.ValidateModel(EditContext, ValidationMessageStore) does not provide IServiceProvider as a constructor argument.  When we need more complex validation that requires additional dependencies in a custom validator the resolved dependency will be null.\r\n\r\n### Describe the solution you'd like\r\nIdeally ValidationContext would be instantiated with an IServiceProvider so that when writing a custom validator we'd have access services in custom validators.\r\n\r\n### Describe alternatives you've considered\r\nStill under investigation.\r\n\r\n### Additional context\r\n[EditContextDataAnnotationsExtensions.cs](https://github.com/aspnet/AspNetCore/blob/master/src/Components/Components/src/Forms/EditContextDataAnnotationsExtensions.cs)\r\n\r\n```csharp\r\npublic static EditContext AddDataAnnotationsValidation(this EditContext editContext)\r\n{\r\n    if (editContext == null)\r\n    {\r\n        throw new ArgumentNullException(nameof(editContext));\r\n    }\r\n\r\n    var messages = new ValidationMessageStore(editContext);\r\n\r\n    // Perform object-level validation on request\r\n    editContext.OnValidationRequested +=\r\n        (sender, eventArgs) => ValidateModel((EditContext)sender, messages);\r\n\r\n    // Perform per-field validation on each field edit\r\n    editContext.OnFieldChanged +=\r\n        (sender, eventArgs) => ValidateField(editContext, messages, eventArgs.FieldIdentifier);\r\n\r\n    return editContext;\r\n}\r\n\r\nprivate static void ValidateModel(EditContext editContext, ValidationMessageStore messages)\r\n{\r\n    var validationContext = new ValidationContext(editContext.Model); //<-- constructor chain will set IServiceProvider to null\r\n    var validationResults = new List<ValidationResult>();\r\n    Validator.TryValidateObject(editContext.Model, validationContext, validationResults, true);\r\n\r\n    // Transfer results to the ValidationMessageStore\r\n    messages.Clear();\r\n    foreach (var validationResult in validationResults)\r\n    {\r\n        foreach (var memberName in validationResult.MemberNames)\r\n        {\r\n            messages.Add(editContext.Field(memberName), validationResult.ErrorMessage);\r\n        }\r\n    }\r\n\r\n    editContext.NotifyValidationStateChanged();\r\n}\r\n```\r\n","csharp\r\npublic static EditContext AddDataAnnotationsValidation(this EditContext editContext)\r\n{\r\n    if (editContext == null)\r\n    {\r\n        throw new ArgumentNullException(nameof(editContext));\r\n    }\r\n\r\n    var messages = new ValidationMessageStore(editContext);\r\n\r\n    // Perform object-level validation on request\r\n    editContext.OnValidationRequested +=\r\n        (sender, eventArgs) => ValidateModel((EditContext)sender, messages);\r\n\r\n    // Perform per-field validation on each field edit\r\n    editContext.OnFieldChanged +=\r\n        (sender, eventArgs) => ValidateField(editContext, messages, eventArgs.FieldIdentifier);\r\n\r\n    return editContext;\r\n}\r\n\r\nprivate static void ValidateModel(EditContext editContext, ValidationMessageStore messages)\r\n{\r\n    var validationContext = new ValidationContext(editContext.Model); //<-- constructor chain will set IServiceProvider to null\r\n    var validationResults = new List<ValidationResult>();\r\n    Validator.TryValidateObject(editContext.Model, validationContext, validationResults, true);\r\n\r\n    // Transfer results to the ValidationMessageStore\r\n    messages.Clear();\r\n    foreach (var validationResult in validationResults)\r\n    {\r\n        foreach (var memberName in validationResult.MemberNames)\r\n        {\r\n            messages.Add(editContext.Field(memberName), validationResult.ErrorMessage);\r\n        }\r\n    }\r\n\r\n    editContext.NotifyValidationStateChanged();\r\n}\r\n"
11391,"Custom IModelBinder returns unvalidated view modelI am using ASP.NET Core 2.2 with the latest version of FluentInterpreter and this is the confiuration code in the StartUp.cs class:\r\n\r\n\r\n\r\nI have got two view models that are inherited - CreateQuestionViewModel and SelectquestionCreateViewModel:\r\n\r\n\r\n\r\nMy custom model binder binds all the properties correctly but the problem is that none of the `CreateOptionViewModel` is validated and this way the ModelState is invalid. These are the validation classes for the view models:\r\n\r\n\r\n\r\nAnd this is the binding logic I have implemented:\r\n\r\n\r\nI saw that the ValidationMetadata of the bindingContext is empty and that may be causing that problem. But if this is the reason, how to fix it?",question|area-mvc,pranavkm,"I am using ASP.NET Core 2.2 with the latest version of FluentInterpreter and this is the confiuration code in the StartUp.cs class:\r\n\r\n```C#\r\nservices.AddMvc(options => options.ModelBinderProviders.Insert(0, new CustomModelBinderProvider()))\r\n.AddFluentValidation(options =>\r\n{\r\n\toptions.RunDefaultMvcValidationAfterFluentValidationExecutes = false;\r\n\toptions.ImplicitlyValidateChildProperties = true;\r\n\toptions.RegisterValidatorsFromAssemblyContaining<ErrorViewModel>();\r\n});\r\n```\r\n\r\nI have got two view models that are inherited - CreateQuestionViewModel and SelectquestionCreateViewModel:\r\n\r\n```C#\r\npublic abstract class CreateQuestionViewModel\r\n{\r\n\tpublic string Content { get; set; }\r\n\tpublic string QuestionType { get; set; }\r\n}\r\n\r\npublic class SelectQuestionCreateViewModel : CreateQuestionViewModel\r\n{\r\n\tpublic IList<CreateOptionViewModel> Options { get; set; }\r\n}\r\n\r\npublic class CreateOptionViewModel\r\n{\r\n\tpublic string Content { get; set; }\r\n}\r\n```\r\n\r\nMy custom model binder binds all the properties correctly but the problem is that none of the `CreateOptionViewModel` is validated and this way the ModelState is invalid. These are the validation classes for the view models:\r\n\r\n```C#\r\npublic class CreateOptionViewModelValidation : AbstractValidator<CreateOptionViewModel>\r\n{\r\n\tpublic CreateOptionViewModelValidation()\r\n\t{\r\n\t\tthis.RuleFor(x => x.Content)\r\n\t\t\t.NotEmpty()\r\n\t\t\t.WithMessage(ValidationMessages.REQUIRED);\r\n\t}\r\n}\r\n\r\npublic abstract class CreateQuestionViewModelValidation<T> : AbstractValidator<T> where T : CreateQuestionViewModel\r\n{\r\n\tprotected CreateQuestionViewModelValidation()\r\n\t{\r\n\t\tthis.RuleFor(x => x.Content)\r\n\t\t\t.NotEmpty()\r\n\t\t\t.WithMessage(ValidationMessages.REQUIRED);\r\n\t}\r\n}\r\n\r\npublic class SelectQuestionCreateViewModelValidation : CreateQuestionViewModelValidation<SelectQuestionCreateViewModel>\r\n{\r\n\tpublic SelectQuestionCreateViewModelValidation()\r\n\t{\r\n\t\tthis.RuleForEach(x => x.Options)\r\n\t\t\t.SetValidator(new CreateOptionViewModelValidation());\r\n\t}\r\n}\r\n```\r\n\r\nAnd this is the binding logic I have implemented:\r\n```C#\r\npublic class CustomModelBinderProvider : IModelBinderProvider\r\n{\r\n\tpublic IModelBinder GetBinder(ModelBinderProviderContext context)\r\n\t{\r\n\t\tType modelType = context.Metadata.ModelType;\r\n\r\n\t\tif (modelType == typeof(CreateQuestionViewModel))\r\n\t\t{\r\n\t\t\tType[] derivedTypes = Assembly.GetAssembly(modelType)\r\n\t\t\t\t.GetTypes()\r\n\t\t\t\t.Where(t => t.IsClass && t.IsAbstract == false && t.IsSubclassOf(modelType))\r\n\t\t\t\t.ToArray();\r\n\t\t\t\t\r\n\t\t\tDictionary<Type, ComplexTypeModelBinder> modelBinders =\r\n\t\t\t\tnew Dictionary<Type, ComplexTypeModelBinder>(derivedTypes.Length);\r\n\t\t\t\t\r\n\t\t\tforeach (Type derivedType in derivedTypes)\r\n\t\t\t{\r\n\t\t\t\tModelMetadata typeMetadata = context.MetadataProvider.GetMetadataForType(derivedType);\r\n\t\t\t\tDictionary<ModelMetadata, IModelBinder> propertyBinders =\r\n\t\t\t\t\tnew Dictionary<ModelMetadata, IModelBinder>(typeMetadata.Properties.Count);\r\n\t\t\t\t\r\n\t\t\t\tforeach (ModelMetadata property in typeMetadata.Properties)\r\n\t\t\t\t\tpropertyBinders.Add(property, context.CreateBinder(property));\r\n\t\t\t\t\r\n\t\t\t\tmodelBinders.Add(derivedType, new ComplexTypeModelBinder(propertyBinders, new NullLoggerFactory()));\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\treturn new CreateQuestionModelBinder(context.MetadataProvider, modelBinders);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\npublic class CreateQuestionModelBinder : IModelBinder\r\n{\r\n\tprivate readonly IModelMetadataProvider _metadataProvider;\r\n\tprivate readonly Dictionary<Type, ComplexTypeModelBinder> _modelBinders;\r\n\r\n\tpublic CreateQuestionModelBinder(\r\n\t\tIModelMetadataProvider metadataProvider,\r\n\t\tDictionary<Type, ComplexTypeModelBinder> modelBinders)\r\n\t{\r\n\t\tthis._metadataProvider = metadataProvider;\r\n\t\tthis._modelBinders = modelBinders;\r\n\t}\r\n\r\n\tpublic Task BindModelAsync(ModelBindingContext bindingContext)\r\n\t{\r\n\t\tif (bindingContext == null) throw new ArgumentNullException(nameof(bindingContext));\r\n\r\n\t\tstring questionTypeKey = ModelNames.CreatePropertyModelName(\r\n\t\t\tbindingContext.ModelName,\r\n\t\t\tnameof(CreateQuestionViewModel.QuestionType));\r\n\t\tstring questionTypeResult = bindingContext.ValueProvider.GetValue(questionTypeKey)\r\n\t\t\t.FirstValue;\r\n\r\n\t\tif (string.IsNullOrEmpty(questionTypeResult)) return Task.CompletedTask;\r\n\r\n\t\tType viewModelType = Assembly.GetAssembly(typeof(CreateQuestionViewModel))\r\n\t\t\t.GetType($""ViewModels.Questions.CreateViewModels.{questionTypeResult}QuestionCreateViewModel"");\r\n\r\n\t\tModelBindingContext innerModelBindingContext = DefaultModelBindingContext.CreateBindingContext(\r\n\t\t\tbindingContext.ActionContext,\r\n\t\t\tbindingContext.ValueProvider,\r\n\t\t\tthis._metadataProvider.GetMetadataForType(viewModelType),\r\n\t\t\tnull,\r\n\t\t\tbindingContext.ModelName);\r\n\r\n\t\tthis._modelBinders[viewModelType]\r\n\t\t\t.BindModelAsync(innerModelBindingContext);\r\n\r\n\t\tbindingContext.Result = innerModelBindingContext.Result;\r\n\t\treturn Task.CompletedTask;\r\n\t}\r\n}\r\n```\r\n\r\nI saw that the ValidationMetadata of the bindingContext is empty and that may be causing that problem. But if this is the reason, how to fix it?","C#\r\nservices.AddMvc(options => options.ModelBinderProviders.Insert(0, new CustomModelBinderProvider()))\r\n.AddFluentValidation(options =>\r\n{\r\n\toptions.RunDefaultMvcValidationAfterFluentValidationExecutes = false;\r\n\toptions.ImplicitlyValidateChildProperties = true;\r\n\toptions.RegisterValidatorsFromAssemblyContaining<ErrorViewModel>();\r\n});\r\n"
11244,"[Server Side Blazor] Trying to pass Uint8Array from JS to C# with JSInterop ### Describe the bug\r\nBasically, in the javascript world, I am invoking a [JSInvokable] C# Method and passing a Uint8Array as the parameter.\r\n\r\n\r\nthen in the C# world you would have something like this\r\n\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\nTo Reproduce simply create a C# Class with [JSInvokable] method and a javascript function that takes a componentRef and invoke the C# method as stated above.\r\n\r\n### Expected behavior\r\nI expect it to just pass the binary data byte[] to be just received, I believe its a problem with the SignalR JSON Serialization\r\n\r\n### Screenshots\r\n![image](https://user-images.githubusercontent.com/585569/59548163-6c2bbb00-8f7d-11e9-92db-994c2a86f8a1.png)\r\n\r\n![image](https://user-images.githubusercontent.com/585569/59548176-9b422c80-8f7d-11e9-95ae-a63e3d655ba8.png)\r\n\r\n\r\n\r\n",External|area-blazor,pranavkm,"### Describe the bug\r\nBasically, in the javascript world, I am invoking a [JSInvokable] C# Method and passing a Uint8Array as the parameter.\r\n\r\n```C#\r\nlet buffer = new Uint8Array([1,2,3,4]);\r\ncomponentRef.invokeMethodAsync(""ReceiveData"", buffer);\r\n```\r\nthen in the C# world you would have something like this\r\n```C#\r\n[JSInvokable]\r\npublic async void ReceiveData(byte[] data)\r\n{\r\n// do something with the bytes\r\n}\r\n```\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\nTo Reproduce simply create a C# Class with [JSInvokable] method and a javascript function that takes a componentRef and invoke the C# method as stated above.\r\n\r\n### Expected behavior\r\nI expect it to just pass the binary data byte[] to be just received, I believe its a problem with the SignalR JSON Serialization\r\n\r\n### Screenshots\r\n![image](https://user-images.githubusercontent.com/585569/59548163-6c2bbb00-8f7d-11e9-92db-994c2a86f8a1.png)\r\n\r\n![image](https://user-images.githubusercontent.com/585569/59548176-9b422c80-8f7d-11e9-95ae-a63e3d655ba8.png)\r\n\r\n\r\n\r\n","C#\r\nlet buffer = new Uint8Array([1,2,3,4]);\r\ncomponentRef.invokeMethodAsync(""ReceiveData"", buffer);\r\n"
11239,"Null ref in HubConnection if parameter is null\r\n\r\nI did `connection.SendAsync(""foo"", 1, null);` ",bug|area-signalr|feature-client-java|feature-client-net|accepted,mikaelm12|BrennanConroy,"```C#\r\n   at System.Object.GetType()\r\n   at Microsoft.AspNetCore.SignalR.Client.HubConnection.PackageStreamingParams(ConnectionState connectionState, Object[]& args, List`1& streamIds)\r\n   at Microsoft.AspNetCore.SignalR.Client.HubConnection.SendCoreAsyncCore(String methodName, Object[] args, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.ForceAsyncAwaiter.GetResult()\r\n   at Microsoft.AspNetCore.SignalR.Client.HubConnection.SendCoreAsync(String methodName, Object[] args, CancellationToken cancellationToken)\r\n   at BenchmarksClient.Workers.BlazorIgnitor.<>c__DisplayClass23_2.<<Clicker>b__1>d.MoveNext() in D:\\work\\Benchmarks\\src\\BenchmarksClient\\Workers\\BlazorIgnitor.cs:line 160\r\n```\r\n\r\nI did `connection.SendAsync(""foo"", 1, null);` ","C#\r\n   at System.Object.GetType()\r\n   at Microsoft.AspNetCore.SignalR.Client.HubConnection.PackageStreamingParams(ConnectionState connectionState, Object[]& args, List`1& streamIds)\r\n   at Microsoft.AspNetCore.SignalR.Client.HubConnection.SendCoreAsyncCore(String methodName, Object[] args, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.ForceAsyncAwaiter.GetResult()\r\n   at Microsoft.AspNetCore.SignalR.Client.HubConnection.SendCoreAsync(String methodName, Object[] args, CancellationToken cancellationToken)\r\n   at BenchmarksClient.Workers.BlazorIgnitor.<>c__DisplayClass23_2.<<Clicker>b__1>d.MoveNext() in D:\\work\\Benchmarks\\src\\BenchmarksClient\\Workers\\BlazorIgnitor.cs:line 160\r\n"
11220,[SignalR][JavaClient] HubConnection.invoke() without return value### Is your feature request related to a problem? Please describe.\r\nI\xb4m using the .NET Client and Java Client for SignalR.\r\nI implemented some of my **server** methods without a explicit returnvalue like so:\r\n\r\n\r\n\r\nThe **.NET Client** calls these methods like so:\r\n\r\n\r\n\r\nThe **Java Client** does not offer such a function to call a hubmethod without expecting an return value (but wait for the completition).\r\nThere is only this method available:\r\n\r\nwhich is not suitable for this purpose.\r\n\r\n### Describe the solution you'd like\r\nThe java client offers a invoke function that does not expect a returnvalue but waits for completition.\r\n,Done|area-signalr|accepted,mikaelm12,"### Is your feature request related to a problem? Please describe.\r\nI\xb4m using the .NET Client and Java Client for SignalR.\r\nI implemented some of my **server** methods without a explicit returnvalue like so:\r\n```csharp\r\npublic async Task SendMessage(string user, string message)\r\n```\r\n\r\n\r\nThe **.NET Client** calls these methods like so:\r\n```csharp\r\nawait connection.InvokeAsync(""SendMessage"", ""UserName"", ""Message"");\r\n```\r\n\r\n\r\nThe **Java Client** does not offer such a function to call a hubmethod without expecting an return value (but wait for the completition).\r\nThere is only this method available:\r\n```java\r\nHubConnection.invoke(Class<T> returnType, String method, Object... args)\r\n```\r\nwhich is not suitable for this purpose.\r\n\r\n### Describe the solution you'd like\r\nThe java client offers a invoke function that does not expect a returnvalue but waits for completition.\r\n","csharp\r\npublic async Task SendMessage(string user, string message)\r\n"
11196,"JsonSerializer does not support Uri's### Describe the bug\r\nJsonSerializer fails to handle Uri's properly.\r\nVersion: 3.0 Preview 6 \r\n\r\n### To Reproduce\r\n\r\n\r\n\r\n### Expected behavior\r\n`requestJson == {""uri"": ""https://someserver.co/""}`\r\n\r\n### Actual behavior\r\n`requestJson == {""Uri"":{""AbsolutePath"":""\\u002f"",""AbsoluteUri"":""https:\\u002f\\u002fsomeserver.co\\u002f"",""LocalPath"":""\\u002f"",""Authority"":""someserver.co"",""HostNameType"":2,""IsDefaultPort"":true,""IsFile"":false,""IsLoopback"":false,""PathAndQuery"":""\\u002f"",""Segments"":[""\\u002f""],""IsUnc"":false,""Host"":""someserver.co"",""Port"":443,""Query"":"""",""Fragment"":"""",""Scheme"":""https"",""OriginalString"":""https:\\u002f\\u002fsomeserver.co\\u002f"",""DnsSafeHost"":""someserver.co"",""IdnHost"":""someserver.co"",""IsAbsoluteUri"":true,""UserEscaped"":false,""UserInfo"":""""}}` \r\n\r\n\r\nOn the other hand, attempt to parse json `{""uri"": ""https://someserver.co/""}` fails with error:\r\n`The JSON value could not be converted to System.Uri. Path: $.uri | LineNumber: 0 | BytePositionInLine: 32.`",External|area-mvc,pranavkm,"### Describe the bug\r\nJsonSerializer fails to handle Uri's properly.\r\nVersion: 3.0 Preview 6 \r\n\r\n### To Reproduce\r\n\r\n```csharp\r\nusing System;\r\nusing System.Text.Json.Serialization;\r\n\r\nnamespace BugNamespace\r\n{\r\n    public class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            var content = new UriResponse\r\n            {\r\n                Uri = new Uri(""https://someserver.co/"")\r\n            };\r\n            var requestJson = JsonSerializer.ToString(content);\r\n        }\r\n    }\r\n\r\n    class UriResponse\r\n    {\r\n        public Uri Uri { get; set; }\r\n    }\r\n}\r\n\r\n```\r\n\r\n### Expected behavior\r\n`requestJson == {""uri"": ""https://someserver.co/""}`\r\n\r\n### Actual behavior\r\n`requestJson == {""Uri"":{""AbsolutePath"":""\\u002f"",""AbsoluteUri"":""https:\\u002f\\u002fsomeserver.co\\u002f"",""LocalPath"":""\\u002f"",""Authority"":""someserver.co"",""HostNameType"":2,""IsDefaultPort"":true,""IsFile"":false,""IsLoopback"":false,""PathAndQuery"":""\\u002f"",""Segments"":[""\\u002f""],""IsUnc"":false,""Host"":""someserver.co"",""Port"":443,""Query"":"""",""Fragment"":"""",""Scheme"":""https"",""OriginalString"":""https:\\u002f\\u002fsomeserver.co\\u002f"",""DnsSafeHost"":""someserver.co"",""IdnHost"":""someserver.co"",""IsAbsoluteUri"":true,""UserEscaped"":false,""UserInfo"":""""}}` \r\n\r\n\r\nOn the other hand, attempt to parse json `{""uri"": ""https://someserver.co/""}` fails with error:\r\n`The JSON value could not be converted to System.Uri. Path: $.uri | LineNumber: 0 | BytePositionInLine: 32.`","csharp\r\nusing System;\r\nusing System.Text.Json.Serialization;\r\n\r\nnamespace BugNamespace\r\n{\r\n    public class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            var content = new UriResponse\r\n            {\r\n                Uri = new Uri(""https://someserver.co/"")\r\n            };\r\n            var requestJson = JsonSerializer.ToString(content);\r\n        }\r\n    }\r\n\r\n    class UriResponse\r\n    {\r\n        public Uri Uri { get; set; }\r\n    }\r\n}\r\n\r\n"
11177,"Razor components: What is the proper way to split up manual RenderTreeBuilder logic without breaking the diffing algorithm?Hi all,\r\n\r\nIn the example provided below, where I use `builder.AddContent(int sequence, RenderFragment fragment)` method to compose a bunch of render fragments together, will the diffing algorithm break, when each render fragment in the example is using a number sequence starting from different positions?\r\n\r\nThis comment in [RenderTreeBuilder.AddContent](https://github.com/aspnet/AspNetCore/blob/release/3.0-preview6/src/Components/Components/src/RenderTree/RenderTreeBuilder.cs#L114-L117) suggests not, but I an not sure I am interpreting what I am reading in the docs and in the source code correctly. \r\n\r\n\r\n\r\nMany thanks, Egil.",question|area-blazor,SteveSandersonMS,"Hi all,\r\n\r\nIn the example provided below, where I use `builder.AddContent(int sequence, RenderFragment fragment)` method to compose a bunch of render fragments together, will the diffing algorithm break, when each render fragment in the example is using a number sequence starting from different positions?\r\n\r\nThis comment in [RenderTreeBuilder.AddContent](https://github.com/aspnet/AspNetCore/blob/release/3.0-preview6/src/Components/Components/src/RenderTree/RenderTreeBuilder.cs#L114-L117) suggests not, but I an not sure I am interpreting what I am reading in the docs and in the source code correctly. \r\n\r\n```csharp\r\npublic class Test : ComponentBase\r\n{\r\n    public bool SomeFlag { get; set; }\r\n\r\n    protected override void BuildRenderTree(RenderTreeBuilder builder)\r\n    {\r\n        builder.AddContent(0, RenderFragment1);\r\n        builder.AddContent(1, RenderFragment2);\r\n    }\r\n\r\n    private void RenderFragment1(RenderTreeBuilder builder)\r\n    {\r\n        if (SomeFlag)\r\n        {\r\n            builder.OpenElement(0, ""div"");\r\n            builder.AddContent(1, ""HELLO WORLD SOME FLAG IS TRUE"");\r\n            builder.CloseElement();\r\n        }\r\n    }\r\n\r\n    private void RenderFragment2(RenderTreeBuilder builder)\r\n    {\r\n        builder.OpenElement(0, ""div"");\r\n        builder.AddContent(1, SubRenderFragment);\r\n        builder.CloseElement();\r\n    }\r\n\r\n    private void SubRenderFragment(RenderTreeBuilder builder)\r\n    {\r\n        builder.OpenElement(0, ""span"");\r\n        builder.CloseElement();\r\n    }\r\n}\r\n```\r\n\r\nMany thanks, Egil.","csharp\r\npublic class Test : ComponentBase\r\n{\r\n    public bool SomeFlag { get; set; }\r\n\r\n    protected override void BuildRenderTree(RenderTreeBuilder builder)\r\n    {\r\n        builder.AddContent(0, RenderFragment1);\r\n        builder.AddContent(1, RenderFragment2);\r\n    }\r\n\r\n    private void RenderFragment1(RenderTreeBuilder builder)\r\n    {\r\n        if (SomeFlag)\r\n        {\r\n            builder.OpenElement(0, ""div"");\r\n            builder.AddContent(1, ""HELLO WORLD SOME FLAG IS TRUE"");\r\n            builder.CloseElement();\r\n        }\r\n    }\r\n\r\n    private void RenderFragment2(RenderTreeBuilder builder)\r\n    {\r\n        builder.OpenElement(0, ""div"");\r\n        builder.AddContent(1, SubRenderFragment);\r\n        builder.CloseElement();\r\n    }\r\n\r\n    private void SubRenderFragment(RenderTreeBuilder builder)\r\n    {\r\n        builder.OpenElement(0, ""span"");\r\n        builder.CloseElement();\r\n    }\r\n}\r\n"
11036,"rzc discover exited with code 1This is just for a reference, not sure if it is an issue or cross referencing. My application build started to fail when I added my TagHelper class library. This is working in 2.2.\r\n\r\n### Describe the bug\r\nBuild fails on this error: **rzc discover exited with code 1**\r\n\r\n### Other Info\r\nError: rzc discover exited with code 1.\t\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview5-011568\\Sdks\\Microsoft.NET.Sdk.Razor\\build\\netstandard2.0\\Microsoft.NET.Sdk.Razor.CodeGeneration.targets\t99\t\r\n\r\n## Error is pointing here\r\n![image](https://user-images.githubusercontent.com/4528464/59205565-10d38480-8b9b-11e9-892e-4ee71ee612d2.png)\r\n\r\n\r\n## My project\r\n```\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n  </PropertyGroup>\r\n```\r\n\r\n## My TagHelper class library\r\n```\r\n  <PropertyGroup>\r\n    <TargetFrameworks>netcoreapp2.2;netstandard2.0</TargetFrameworks>\r\n  </PropertyGroup>\r\n```\r\n\r\n### To Reproduce\r\n\r\n\r\n### Expected behavior\r\nNot failing on build\r\n\r\n### Fix\r\nNot easy to figure out from the error what the problem was but I have added `set;` and all is working ok.\r\n\r\n\r\n",:heavy_check_mark: Resolution: By Design|area-mvc,ajaybhargavb,"This is just for a reference, not sure if it is an issue or cross referencing. My application build started to fail when I added my TagHelper class library. This is working in 2.2.\r\n\r\n### Describe the bug\r\nBuild fails on this error: **rzc discover exited with code 1**\r\n\r\n### Other Info\r\nError: rzc discover exited with code 1.\t\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview5-011568\\Sdks\\Microsoft.NET.Sdk.Razor\\build\\netstandard2.0\\Microsoft.NET.Sdk.Razor.CodeGeneration.targets\t99\t\r\n\r\n## Error is pointing here\r\n![image](https://user-images.githubusercontent.com/4528464/59205565-10d38480-8b9b-11e9-892e-4ee71ee612d2.png)\r\n\r\n\r\n## My project\r\n```\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n  </PropertyGroup>\r\n```\r\n\r\n## My TagHelper class library\r\n```\r\n  <PropertyGroup>\r\n    <TargetFrameworks>netcoreapp2.2;netstandard2.0</TargetFrameworks>\r\n  </PropertyGroup>\r\n```\r\n\r\n### To Reproduce\r\n```cs\r\n[HtmlAttributeName(DictionaryAttributePrefix = AspClassPrefix)]\r\npublic IDictionary<string, bool> Condition { get; } = new Dictionary<string, bool>();\r\n```\r\n\r\n### Expected behavior\r\nNot failing on build\r\n\r\n### Fix\r\nNot easy to figure out from the error what the problem was but I have added `set;` and all is working ok.\r\n\r\n```cs\r\n[HtmlAttributeName(DictionaryAttributePrefix = AspClassPrefix)]\r\npublic IDictionary<string, bool> Condition { get; set; } = new Dictionary<string, bool>();\r\n```\r\n","cs\r\n[HtmlAttributeName(DictionaryAttributePrefix = AspClassPrefix)]\r\npublic IDictionary<string, bool> Condition { get; } = new Dictionary<string, bool>();\r\n"
10993,"Net core exception handler lambda creates duplicates_From @micgruber on Friday, May 3, 2019 12:58:55 PM_\r\n\r\nI'm using a lambda function for the UseExceptionHandler method and .net core 2.2 with windows 10:\r\n\r\n\r\nNow, I register the exception handler in the startup.cs\r\n\r\n\r\n\r\nNow, if throw a exception in the proxymiddleware in the invoke method the exception gets logged twice, what I'm doing wrong? I only want to log the exception once.\r\n\r\nProxyMiddleware:\r\n\r\n\r\n\r\nThese are the exceptions logs from the console, which I get from the middleware:\r\n\r\n```\r\ninfo: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]\r\n      Request starting HTTP/1.1 GET http://127.0.0.1:4000/test\r\nfail: Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware[1]\r\n      An unhandled exception has occurred while executing the request.\r\nSystem.ArgumentNullException: Value cannot be null.\r\nParameter name: Test\r\n   at TestProject.ProxyMiddleware.Invoke(HttpContext context) in C:\\TestProject\\ProxyMiddleware.cs:line 29\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.Invoke(HttpContext context)\r\nfail: TestProject.Startup[0]\r\n      System.ArgumentNullException: Value cannot be null.\r\n      Parameter name: Test\r\n         at TestProject.ProxyMiddleware.Invoke(HttpContext context) in C:\\TestProject\\ProxyMiddleware.cs:line 29\r\n         at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.Invoke(HttpContext context)\r\ninfo: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]\r\n      Request finished in 4681.7259ms 500 application/json\r\n```\r\n\r\nIt seems like I get the exception two times from the standard exception middleware Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware[1] and from the custom UseExceptionHandler. Is this the standard behaviour or am I doing something wrong?\r\n\r\nI created a test project: https://github.com/micgruber/ExceptionMiddleware.\r\n\r\n_Copied from original issue: dotnet/core#2674_",feature-diagnostics|area-middleware,Pilchie,"_From @micgruber on Friday, May 3, 2019 12:58:55 PM_\r\n\r\nI'm using a lambda function for the UseExceptionHandler method and .net core 2.2 with windows 10:\r\n\r\n```c#\r\npublic static class ExceptionMiddlewareExtensions\r\n{\r\n    public static void ConfigureExceptionHandler(this IApplicationBuilder app, ILogger logger)\r\n    {\r\n        app.UseExceptionHandler(builder =>\r\n        {\r\n            builder.Run(async context =>\r\n            {\r\n                context.Response.ContentType = ""application/json"";\r\n                var feature = context.Features.Get<IExceptionHandlerPathFeature>();\r\n                var exception = feature.Error;\r\n\r\n                var contextFeature = context.Features.Get<IExceptionHandlerFeature>();\r\n                if (contextFeature != null)\r\n                {\r\n                    LogError(contextFeature, logger);\r\n                    await ForwardError(context, exception);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    private static void LogError(IExceptionHandlerFeature contextFeature, ILogger logger)\r\n    {\r\n        logger.LogError($""{contextFeature.Error}"");\r\n    }\r\n\r\n    private static async Task ForwardError(HttpContext context, Exception exception)\r\n    {\r\n        var httpStatusCodeException = exception as HttpException;\r\n        if (exception is HttpException)\r\n        {\r\n            context.Response.StatusCode = (int)httpStatusCodeException.StatusCode;\r\n            await context.Response.WriteAsync(new ErrorDetails()\r\n            {\r\n                Date = DateTime.UtcNow,\r\n                Version = ""v1"",\r\n                Code = httpStatusCodeException.Code,\r\n                Type = httpStatusCodeException.Type.ToString(),\r\n                Message = httpStatusCodeException.Message\r\n            }.ToString());\r\n        }\r\n        else\r\n        {\r\n            context.Response.StatusCode = (int)HttpStatusCode.InternalServerError;\r\n            await context.Response.WriteAsync(new ErrorDetails()\r\n            {\r\n                Date = DateTime.UtcNow,\r\n                Version = ""v1"",\r\n                Code = Code.InternalServerError,\r\n                Type = Exceptions.Type.InvalidParameter.ToString(),\r\n                Message = ""Internal Server Error.""\r\n            }.ToString());\r\n        }\r\n    }\r\n}\r\n```\r\nNow, I register the exception handler in the startup.cs\r\n\r\n```c#\r\npublic class Startup\r\n{\r\n    private ILogger logger;\r\n\r\n    public Startup(ILogger<Startup> logger)\r\n    {\r\n        this.logger = logger;\r\n    }\r\n\r\n    public void ConfigureServices(IServiceCollection services)\r\n    {\r\n    }\r\n\r\n    public void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n    {\r\n        if (env.IsDevelopment())\r\n        {\r\n            app.UseDeveloperExceptionPage();\r\n        }\r\n\r\n        app.UseStatusCodePages();\r\n        app.ConfigureExceptionHandler(logger);\r\n        app.UseMiddleware<ProxyMiddleware>();\r\n    }\r\n}\r\n```\r\n\r\nNow, if throw a exception in the proxymiddleware in the invoke method the exception gets logged twice, what I'm doing wrong? I only want to log the exception once.\r\n\r\nProxyMiddleware:\r\n\r\n```c#\r\npublic class ProxyMiddleware\r\n{\r\n    private readonly RequestDelegate next;\r\n\r\n    public ProxyMiddleware(RequestDelegate next)\r\n    {\r\n        if (next == null)\r\n        {\r\n            throw new ArgumentNullException(nameof(next));\r\n        }\r\n\r\n        this.next = next;\r\n    }\r\n\r\n    public Task Invoke(HttpContext context)\r\n    {\r\n        if (context == null)\r\n        {\r\n            throw new ArgumentNullException(nameof(context));\r\n        }\r\n\r\n        throw new ArgumentNullException(""Test"");\r\n    }\r\n}\r\n```\r\n\r\nThese are the exceptions logs from the console, which I get from the middleware:\r\n\r\n```\r\ninfo: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]\r\n      Request starting HTTP/1.1 GET http://127.0.0.1:4000/test\r\nfail: Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware[1]\r\n      An unhandled exception has occurred while executing the request.\r\nSystem.ArgumentNullException: Value cannot be null.\r\nParameter name: Test\r\n   at TestProject.ProxyMiddleware.Invoke(HttpContext context) in C:\\TestProject\\ProxyMiddleware.cs:line 29\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.Invoke(HttpContext context)\r\nfail: TestProject.Startup[0]\r\n      System.ArgumentNullException: Value cannot be null.\r\n      Parameter name: Test\r\n         at TestProject.ProxyMiddleware.Invoke(HttpContext context) in C:\\TestProject\\ProxyMiddleware.cs:line 29\r\n         at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.Invoke(HttpContext context)\r\ninfo: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]\r\n      Request finished in 4681.7259ms 500 application/json\r\n```\r\n\r\nIt seems like I get the exception two times from the standard exception middleware Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware[1] and from the custom UseExceptionHandler. Is this the standard behaviour or am I doing something wrong?\r\n\r\nI created a test project: https://github.com/micgruber/ExceptionMiddleware.\r\n\r\n_Copied from original issue: dotnet/core#2674_","c#\r\npublic static class ExceptionMiddlewareExtensions\r\n{\r\n    public static void ConfigureExceptionHandler(this IApplicationBuilder app, ILogger logger)\r\n    {\r\n        app.UseExceptionHandler(builder =>\r\n        {\r\n            builder.Run(async context =>\r\n            {\r\n                context.Response.ContentType = ""application/json"";\r\n                var feature = context.Features.Get<IExceptionHandlerPathFeature>();\r\n                var exception = feature.Error;\r\n\r\n                var contextFeature = context.Features.Get<IExceptionHandlerFeature>();\r\n                if (contextFeature != null)\r\n                {\r\n                    LogError(contextFeature, logger);\r\n                    await ForwardError(context, exception);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    private static void LogError(IExceptionHandlerFeature contextFeature, ILogger logger)\r\n    {\r\n        logger.LogError($""{contextFeature.Error}"");\r\n    }\r\n\r\n    private static async Task ForwardError(HttpContext context, Exception exception)\r\n    {\r\n        var httpStatusCodeException = exception as HttpException;\r\n        if (exception is HttpException)\r\n        {\r\n            context.Response.StatusCode = (int)httpStatusCodeException.StatusCode;\r\n            await context.Response.WriteAsync(new ErrorDetails()\r\n            {\r\n                Date = DateTime.UtcNow,\r\n                Version = ""v1"",\r\n                Code = httpStatusCodeException.Code,\r\n                Type = httpStatusCodeException.Type.ToString(),\r\n                Message = httpStatusCodeException.Message\r\n            }.ToString());\r\n        }\r\n        else\r\n        {\r\n            context.Response.StatusCode = (int)HttpStatusCode.InternalServerError;\r\n            await context.Response.WriteAsync(new ErrorDetails()\r\n            {\r\n                Date = DateTime.UtcNow,\r\n                Version = ""v1"",\r\n                Code = Code.InternalServerError,\r\n                Type = Exceptions.Type.InvalidParameter.ToString(),\r\n                Message = ""Internal Server Error.""\r\n            }.ToString());\r\n        }\r\n    }\r\n}\r\n"
10977,[blazor]: typeparam pass array into component1. Create blazor component\r\n\r\n\r\n\r\n2. Try to pass into it array as parameter. And you'll get an error: \r\n\r\n```\r\nError\tCS1503\tArgument 6: cannot convert from 'int[]' to 'T[]'\r\n```\r\n\r\n3. If change type from `T[]` to `List<T>` everything begin work OK. \r\n,investigate|area-blazor,pranavkm,1. Create blazor component\r\n\r\n```html\r\n@typeparam T\r\n@functions{\r\n    [Parameter]\r\n    public T[] Values { get; set; }\r\n}\r\n```\r\n\r\n2. Try to pass into it array as parameter. And you'll get an error: \r\n\r\n```\r\nError\tCS1503\tArgument 6: cannot convert from 'int[]' to 'T[]'\r\n```\r\n\r\n3. If change type from `T[]` to `List<T>` everything begin work OK. \r\n,html\r\n@typeparam T\r\n@functions{\r\n    [Parameter]\r\n    public T[] Values { get; set; }\r\n}\r\n
10970,"Creation of an Identity User via External Login doesn't set AuthenticationMethodWhen signing in with an external provider for the first time, the Default UI for Identity doesn't set the `ClaimTypes.AuthenticationMethod` claim.\r\n\r\nIn [`ExternalLoginModel<TUser>.OnPostConfirmationAsync`](https://github.com/aspnet/AspNetCore/blob/master/src/Identity/UI/src/Areas/Identity/Pages/V4/Account/ExternalLogin.cshtml.cs#L174), I think the [call to `SignInAsync`](https://github.com/aspnet/AspNetCore/blob/master/src/Identity/UI/src/Areas/Identity/Pages/V4/Account/ExternalLogin.cshtml.cs#L206) should include an `authenticationMethod` argument, like this:\r\n\r\n",Done|help wanted|area-identity|:heavy_check_mark: Resolution: Fixed,HaoK,"When signing in with an external provider for the first time, the Default UI for Identity doesn't set the `ClaimTypes.AuthenticationMethod` claim.\r\n\r\nIn [`ExternalLoginModel<TUser>.OnPostConfirmationAsync`](https://github.com/aspnet/AspNetCore/blob/master/src/Identity/UI/src/Areas/Identity/Pages/V4/Account/ExternalLogin.cshtml.cs#L174), I think the [call to `SignInAsync`](https://github.com/aspnet/AspNetCore/blob/master/src/Identity/UI/src/Areas/Identity/Pages/V4/Account/ExternalLogin.cshtml.cs#L206) should include an `authenticationMethod` argument, like this:\r\n\r\n```cs\r\nawait _signInManager.SignInAsync(user, isPersistent: false, info.LoginProvider);\r\n```","cs\r\nawait _signInManager.SignInAsync(user, isPersistent: false, info.LoginProvider);\r\n"
14323,"# in file paths results in 0 C#/HTML completion## Is this a Bug or Feature request?:\r\nBug\r\n\r\n## Steps to reproduce\r\nWrite code in cshtml\r\n\r\n## Description of the problem:\r\nWhen I write code in cshtml, I don't get tips or errors for code.\r\n\r\n![10_122](https://user-images.githubusercontent.com/12344862/59033912-334b6200-886a-11e9-905e-e93f14f3a0ec.gif)\r\n\r\nHowever, I get tips and errors in .cs files.\r\n\r\nI use sync extension to sync my extensions and settings.\r\nWhen I download synced profile on another computer It does works there! \r\n\r\ncshtml files are set to ""**aspnetcorerazor**"" language.\r\n\r\nI'm trying to repair this issue around 3 days. I have scanned google and other bugs tickets but didn't find the solution.  \r\n\r\nExpected behavior:\r\nShow tips and errors for code\r\n\r\nActual behavior:\r\nDon't show tips and errors for code\r\n\r\n## My actions\r\nReinstalled vs code\r\nReinstalled c# extension\r\nReinstalled visual studio \r\nInstalled MONO\r\nInstalled visual studio core tools from visual studio installer\r\nInstalled new .net core SDK 2.2.300\r\n\r\nChecked my files.excluded:\r\n\r\n![Screenshot_3](https://user-images.githubusercontent.com/12344862/59034917-79a1c080-886c-11e9-9695-1f18ee28c7ed.png)\r\n\r\nCustom settings in vs code\r\n<details><summary>Expand</summary>\r\n<p>\r\n{\r\n    ""editor.fontSize"": 15,\r\n    ""git.autofetch"": true,\r\n    ""gitlens.advanced.messages"": {\r\n        ""suppressLineUncommittedWarning"": true,\r\n        ""suppressShowKeyBindingsNotice"": true\r\n    },\r\n    ""explorer.confirmDelete"": false,\r\n    ""window.zoomLevel"": 0,\r\n    ""explorer.confirmDragAndDrop"": false,\r\n    ""breadcrumbs.enabled"": true,\r\n    ""files.autoSave"": ""afterDelay"",\r\n    ""window.titleBarStyle"": ""custom"",\r\n    ""liveServer.settings.donotShowInfoMsg"": true,\r\n    ""git.enableSmartCommit"": true,\r\n    ""git.confirmSync"": false,\r\n    ""terminal.integrated.shell.windows"": ""C:\\\\WINDOWS\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe"",\r\n    ""todo-tree.defaultHighlight"": {\r\n        ""foreground"": ""green"",\r\n        ""type"": ""none""\r\n    },\r\n    ""todo-tree.customHighlight"": {\r\n        ""TODO"": {\r\n            ""icon"": ""pin"",\r\n            ""foreground"": ""green"",\r\n            ""type"": ""line""\r\n        },\r\n        ""FIXME"": {\r\n            ""foreground"": ""red"",\r\n            ""iconColour"": ""yellow""\r\n        }\r\n    },\r\n    ""todo-tree.regexCaseSensitive"": false,\r\n    ""quicktype.justTypes"": false,\r\n    ""gitlens.views.fileHistory.enabled"": true,\r\n    ""gitlens.views.lineHistory.enabled"": true,\r\n    ""gitlens.views.repositories.files.layout"": ""tree"",\r\n    ""emmet.includeLanguages"": {\r\n        ""aspnetcorerazor"": ""cshtml"",\r\n        ""razor"": ""html""\r\n    },\r\n    ""sync.gist"": ""nope_you_wish_xD"",\r\n    ""editor.suggestSelection"": ""first"",\r\n    ""vsintellicode.modify.editor.suggestSelection"": ""automaticallyOverrodeDefaultValue"",\r\n    ""projects.checkDirty"": true,\r\n    ""projects.checkPaths"": true,\r\n    ""projects.showBranch"": true,\r\n    ""todo-tree.showCountsInTree"": true,\r\n    ""editor.formatOnSave"": true,\r\n    ""dotnet-test-explorer.testProjectPath"": ""*/*Test*.csproj"",\r\n    ""workbench.iconTheme"": ""vscode-icons"",\r\n    ""csharp.format.enable"": false,\r\n    ""csharpfixformat.style.braces.onSameLine"": false,\r\n    ""csharpfixformat.style.spaces.beforeParenthesis"": false,\r\n    ""colorTabs.config"": [\r\n        {\r\n            ""regex"": "".*\\\\Controllers\\\\.*"",\r\n            ""color"": ""#0fd034"",\r\n            ""label"": ""Controllers""\r\n        },\r\n        {\r\n            ""regex"": ""*\\\\.js"",\r\n            ""color"": ""#f9f305""\r\n        }\r\n    ],\r\n    ""colorTabs.statusBarBackground"": false,\r\n    ""colorTabs.titleLabel"": true,\r\n    ""workbench.colorTheme"": ""Darcula Theme from IntelliJ"",\r\n    ""razor.trace"": ""Verbose""\r\n}\r\n</p>\r\n</details>\r\n\r\n\r\n\r\n## Logs\r\n\r\n#### OmniSharp\r\n<details><summary>Expand</summary>\r\n<p>\r\nStarting OmniSharp server at 6/6/2019, 2:35:01 PM\r\n    Target: d:\\c#Projects\\CoreMVCLearning2\r\n\r\nOmniSharp server started.\r\n    Path: C:\\Users\\Maciej-pc\\.vscode\\extensions\\ms-vscode.csharp-1.19.1\\.omnisharp\\1.32.19\\OmniSharp.exe\r\n    PID: 15732\r\n\r\n[info]: OmniSharp.Stdio.Host\r\n        Starting OmniSharp on Windows 6.2.9200.0 (x64)\r\n[info]: OmniSharp.Services.DotNetCliService\r\n        DotNetPath set to dotnet\r\n[info]: OmniSharp.MSBuild.Discovery.MSBuildLocator\r\n        Located 2 MSBuild instance(s)\r\n            1: Visual Studio Community 2017 15.9.28307.665 - ""C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\Bin""\r\n            2: StandAlone 15.0 - ""C:\\Users\\Maciej-pc\\.vscode\\extensions\\ms-vscode.csharp-1.19.1\\.omnisharp\\1.32.19\\.msbuild\\Current\\Bin""\r\n[info]: OmniSharp.MSBuild.Discovery.MSBuildLocator\r\n        Registered MSBuild instance: Visual Studio Community 2017 15.9.28307.665 - ""C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\Bin""\r\n[info]: OmniSharp.Cake.CakeProjectSystem\r\n        Detecting Cake files in 'd:\\c#Projects\\CoreMVCLearning2'.\r\n[info]: OmniSharp.Cake.CakeProjectSystem\r\n        Could not find any Cake files\r\n[info]: OmniSharp.WorkspaceInitializer\r\n        Project system 'OmniSharp.DotNet.DotNetProjectSystem' is disabled in the configuration.\r\n[info]: OmniSharp.MSBuild.ProjectSystem\r\n        No solution files found in 'd:\\c#Projects\\CoreMVCLearning2'\r\n[info]: OmniSharp.MSBuild.ProjectManager\r\n        Queue project update for 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\NewAppModules\\NewAppModules.csproj'\r\n[info]: OmniSharp.MSBuild.ProjectManager\r\n        Queue project update for 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\WebAppMVC.csproj'\r\n[info]: OmniSharp.Script.ScriptProjectSystem\r\n        Detecting CSX files in 'd:\\c#Projects\\CoreMVCLearning2'.\r\n[info]: OmniSharp.Script.ScriptProjectSystem\r\n        Could not find any CSX files\r\n[info]: OmniSharp.WorkspaceInitializer\r\n        Invoking Workspace Options Provider: OmniSharp.Roslyn.CSharp.Services.CSharpWorkspaceOptionsProvider\r\n[info]: OmniSharp.MSBuild.ProjectManager\r\n        Loading project: d:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\NewAppModules\\NewAppModules.csproj\r\n[info]: OmniSharp.WorkspaceInitializer\r\n        Configuration finished.\r\n[info]: OmniSharp.Stdio.Host\r\n        Omnisharp server running using Stdio at location 'd:\\c#Projects\\CoreMVCLearning2' on host 12720.\r\n[info]: OmniSharp.MSBuild.ProjectManager\r\n        Successfully loaded project file 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\NewAppModules\\NewAppModules.csproj'.\r\n[info]: OmniSharp.MSBuild.ProjectManager\r\n        Adding project 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\NewAppModules\\NewAppModules.csproj'\r\n[info]: OmniSharp.MSBuild.ProjectManager\r\n        Loading project: d:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\WebAppMVC.csproj\r\n[info]: OmniSharp.MSBuild.ProjectManager\r\n        Successfully loaded project file 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\WebAppMVC.csproj'.\r\n[info]: OmniSharp.MSBuild.ProjectManager\r\n        Adding project 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\WebAppMVC.csproj'\r\n[info]: OmniSharp.MSBuild.ProjectManager\r\n        Update project: NewAppModules\r\n[info]: OmniSharp.MSBuild.ProjectManager\r\n        Update project: WebAppMVC\r\n</details>\r\n\r\n#### Razor\r\n<details><summary>Expand</summary>\r\n<p>\r\n\r\n\r\n```\r\n[Client - 2:35:14 PM] -- Starting Issue Data Collection-- \r\n[Client - 2:35:14 PM] Notifying project 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\WebAppMVC.csproj' - 'changed'\r\n[Client - 2:35:16 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'htmlChanged'\r\n[Client - 2:35:16 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'htmlChanged'\r\n[Client - 2:35:16 PM] Updating the C# document for Razor file '/d:/c#Projects/CoreMVCLearning2/CoreMVCLearning/WebAppMVC/Views/LoggerEntryWeb/Index2.cshtml' (2)\r\n[Client - 2:35:16 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'csharpChanged'\r\n[Client - 2:35:16 PM] 1 - Synchronizing 'd:\\c':\r\n    Currently at 2, synchronizing to version '2'.\r\n    Current host document version: '2'\r\n    Current projected document version: '3'\r\n[Client - 2:35:16 PM] 1 - Projected document in sync with host document\r\n[Client - 2:35:16 PM] 1 - Projected text document not in sync with data type, waiting for update...\r\n    Current projected text document sync version: 0\r\n[Client - 2:35:17 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'htmlChanged'\r\n[Client - 2:35:17 PM] Updating the C# document for Razor file '/d:/c#Projects/CoreMVCLearning2/CoreMVCLearning/WebAppMVC/Views/LoggerEntryWeb/Index2.cshtml' (3)\r\n[Client - 2:35:17 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'csharpChanged'\r\n[Client - 2:35:17 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'htmlChanged'\r\n[Client - 2:35:17 PM] Updating the C# document for Razor file '/d:/c#Projects/CoreMVCLearning2/CoreMVCLearning/WebAppMVC/Views/LoggerEntryWeb/Index2.cshtml' (4)\r\n[Client - 2:35:17 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'csharpChanged'\r\n[Client - 2:35:17 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'htmlChanged'\r\n[Client - 2:35:17 PM] Updating the C# document for Razor file '/d:/c#Projects/CoreMVCLearning2/CoreMVCLearning/WebAppMVC/Views/LoggerEntryWeb/Index2.cshtml' (5)\r\n[Client - 2:35:17 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'csharpChanged'\r\n[Client - 2:35:17 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'htmlChanged'\r\n[Client - 2:35:17 PM] Updating the C# document for Razor file '/d:/c#Projects/CoreMVCLearning2/CoreMVCLearning/WebAppMVC/Views/LoggerEntryWeb/Index2.cshtml' (6)\r\n[Client - 2:35:17 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'csharpChanged'\r\n[Client - 2:35:18 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'htmlChanged'\r\n[Client - 2:35:18 PM] Updating the C# document for Razor file '/d:/c#Projects/CoreMVCLearning2/CoreMVCLearning/WebAppMVC/Views/LoggerEntryWeb/Index2.cshtml' (7)\r\n[Client - 2:35:18 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'csharpChanged'\r\n[Client - 2:35:18 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'htmlChanged'\r\n[Client - 2:35:18 PM] Updating the C# document for Razor file '/d:/c#Projects/CoreMVCLearning2/CoreMVCLearning/WebAppMVC/Views/LoggerEntryWeb/Index2.cshtml' (8)\r\n[Client - 2:35:18 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'csharpChanged'\r\n[Client - 2:35:18 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'htmlChanged'\r\n[Client - 2:35:18 PM] Updating the C# document for Razor file '/d:/c#Projects/CoreMVCLearning2/CoreMVCLearning/WebAppMVC/Views/LoggerEntryWeb/Index2.cshtml' (9)\r\n[Client - 2:35:18 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'csharpChanged'\r\n[Client - 2:35:18 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'htmlChanged'\r\n[Client - 2:35:18 PM] Updating the C# document for Razor file '/d:/c#Projects/CoreMVCLearning2/CoreMVCLearning/WebAppMVC/Views/LoggerEntryWeb/Index2.cshtml' (10)\r\n[Client - 2:35:18 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'csharpChanged'\r\n[Client - 2:35:18 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'htmlChanged'\r\n[Client - 2:35:18 PM] 1 - Synchronization failed: Token cancellation requested: undefined\r\n[Client - 2:35:18 PM] Providing completions for document d:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml at location (4, 6)\r\n[Client - 2:35:18 PM] Updating the C# document for Razor file '/d:/c#Projects/CoreMVCLearning2/CoreMVCLearning/WebAppMVC/Views/LoggerEntryWeb/Index2.cshtml' (11)\r\n[Client - 2:35:18 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'csharpChanged'\r\n[Client - 2:35:18 PM] 2 - Synchronizing 'd:\\c':\r\n    Currently at 11, synchronizing to version '11'.\r\n    Current host document version: '11'\r\n    Current projected document version: '13'\r\n[Client - 2:35:18 PM] 2 - Projected document in sync with host document\r\n[Client - 2:35:18 PM] 2 - Projected text document not in sync with data type, waiting for update...\r\n    Current projected text document sync version: 0\r\n[Client - 2:35:19 PM] 2 - Synchronization failed: Token cancellation requested: undefined\r\n[Client - 2:35:19 PM] Providing completions for document d:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml at location (4, 15)\r\n[Client - 2:35:19 PM] 3 - Synchronizing 'd:\\c':\r\n    Currently at 11, synchronizing to version '11'.\r\n    Current host document version: '11'\r\n    Current projected document version: '13'\r\n[Client - 2:35:19 PM] 3 - Projected document in sync with host document\r\n[Client - 2:35:19 PM] 3 - Projected text document not in sync with data type, waiting for update...\r\n    Current projected text document sync version: 0\r\n[Client - 2:35:19 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'htmlChanged'\r\n[Client - 2:35:21 PM] 3 - Synchronization failed: Synchronization timed out\r\n[Client - 2:35:21 PM] Providing completions for document d:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml at location (4, 15)\r\n[Client - 2:35:28 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'htmlChanged'\r\n[Client - 2:35:28 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'htmlChanged'\r\n[Client - 2:35:28 PM] Updating the C# document for Razor file '/d:/c#Projects/CoreMVCLearning2/CoreMVCLearning/WebAppMVC/Views/LoggerEntryWeb/Index2.cshtml' (12)\r\n[Client - 2:35:28 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'csharpChanged'\r\n[Client - 2:35:29 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'htmlChanged'\r\n[Client - 2:35:31 PM] -- Stopping Issue Data Collection-- \r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n## Workspace information\r\n\r\n#### Razor document:\r\n<details><summary>Expand</summary>\r\n<p>\r\n\r\n```Razor\r\n<div class=""text-center"">\r\n    <h1 class=""display-4"">Testttt</h1>\r\n</div>\r\n\r\n<div>@Datetime. </div>\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n#### Projected CSharp document:\r\n<details><summary>Expand</summary>\r\n<p>\r\n\r\n\r\n\r\n</p>\r\n</details>\r\n\r\n#### Projected Html document:\r\n<details><summary>Expand</summary>\r\n<p>\r\n\r\n\r\n\r\n</p>\r\n</details>\r\n\r\n## Machine information\r\n\r\n\r\n**VSCode version**: 1.34.0\r\n**Razor.VSCode version**: 1.19.1\r\n#### `dotnet --info`\r\n\r\n<details><summary>Expand</summary>\r\n<p>\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.300\r\n Commit:    73efd5bd87\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.300\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.5\r\n  Commit:  0a3c9209c0\r\n\r\n.NET Core SDKs installed:\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600-preview-009426 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009677 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n#### Extensions\r\n<details><summary>Expand</summary>\r\n<p>\r\n\r\n\r\n|Extension|Author|Version|\r\n|---|---|---|\r\n|add-reference|adrianwilczynski|1.0.2|\r\n|asp-net-core-switcher|adrianwilczynski|1.0.2|\r\n|auto-using|Fudge|0.7.8|\r\n|bracket-pair-colorizer|CoenraadS|1.0.61|\r\n|classynaming|reflectiondm|1.2.0|\r\n|clipboard-history|Anjali|1.0.7|\r\n|code-runner|formulahendry|0.9.10|\r\n|code-settings-sync|Shan|3.2.9|\r\n|color-highlight|naumovs|2.3.0|\r\n|color-tabs-vscode-ext|orepor|0.7.0|\r\n|csharp|ms-vscode|1.19.1|\r\n|csharp-colors|logerfo|0.1.3|\r\n|csharp-workspace|qp|0.0.3|\r\n|csharpextensions|jchannon|1.3.0|\r\n|csharpfixformat|Leopotam|0.0.81|\r\n|docomment|k--kato|0.1.7|\r\n|dotnet-test-explorer|formulahendry|0.7.0|\r\n|dracula-theme-from-intellij|trinm1709|0.3.0|\r\n|es7-react-js-snippets|dsznajder|2.3.0|\r\n|githistory|donjayamanne|0.4.6|\r\n|gitlens|eamodio|9.8.1|\r\n|horizon-theme-vscode|jolaleye|1.8.1|\r\n|java|redhat|0.46.0|\r\n|json-tools|eriklynd|1.0.2|\r\n|LiveServer|ritwickdey|5.6.1|\r\n|make-hidden|devine-davies|3.0.3|\r\n|markdown-all-in-one|yzhang|2.3.1|\r\n|Material-theme|zhuangtongfa|2.24.1|\r\n|mongo-runner|JoeyYiZhao|0.5.8|\r\n|namespace|adrianwilczynski|1.1.0|\r\n|new-moon-vscode|taniarascia|1.8.4|\r\n|nuget-reverse-package-search|jesschadwick|0.1.68|\r\n|one-monokai|azemoh|0.3.7|\r\n|open-in-browser|techer|2.0.0|\r\n|output-colorizer|IBM|0.1.2|\r\n|partial-diff|ryu1kn|1.4.0|\r\n|path-intellisense|christian-kohler|1.4.2|\r\n|powershell|ms-vscode|2019.5.0|\r\n|quicktype|quicktype|12.0.46|\r\n|rest-client|humao|0.21.3|\r\n|shades-of-purple|ahmadawais|5.9.0|\r\n|supersharp|craigthomas|0.1.4|\r\n|todo-tree|Gruntfuggly|0.0.134|\r\n|underscore-name|adrianwilczynski|1.1.1|\r\n|vsc-material-theme|Equinusocio|2.9.0|\r\n|vscode-color-pick|adam-watters|0.6.2|\r\n|vscode-css-peek|pranaygp|2.2.0|\r\n|vscode-dotnet-auto-attach|DennisMaxJung|1.1.0|\r\n|vscode-eslint|dbaeumer|1.9.0|\r\n|vscode-extension-auto-import|NuclleaR|1.4.3|\r\n|vscode-great-icons|emmanuelbeziat|2.1.47|\r\n|vscode-icons|vscode-icons-team|8.7.0|\r\n|vscode-import-cost|wix|2.12.0|\r\n|vscode-java-debug|vscjava|0.19.0|\r\n|vscode-java-dependency|vscjava|0.4.0|\r\n|vscode-java-pack|vscjava|0.7.1|\r\n|vscode-java-test|vscjava|0.17.0|\r\n|vscode-maven|vscjava|0.17.0|\r\n|vscode-nuget-package-manager|jmrog|1.1.6|\r\n|vscode-projects-plus|fabiospampinato|1.22.0|\r\n|vscode-sqlite|alexcvzz|0.6.0|\r\n|vscode-theme-onedark|akamud|2.1.0|\r\n|vscode-versionlens|pflannery|0.23.0|\r\n|vscode-wakatime|WakaTime|2.1.2|\r\n|vscodeintellicode|VisualStudioExptTeam|1.1.6|\r\n|winteriscoming|johnpapa|1.1.1|\r\n|xml|DotJoshJohnson|2.5.0|;\r\n\r\n\r\n</p>\r\n</details>",bug|Done|area-mvc,ryanbrandenburg,"## Is this a Bug or Feature request?:\r\nBug\r\n\r\n## Steps to reproduce\r\nWrite code in cshtml\r\n\r\n## Description of the problem:\r\nWhen I write code in cshtml, I don't get tips or errors for code.\r\n\r\n![10_122](https://user-images.githubusercontent.com/12344862/59033912-334b6200-886a-11e9-905e-e93f14f3a0ec.gif)\r\n\r\nHowever, I get tips and errors in .cs files.\r\n\r\nI use sync extension to sync my extensions and settings.\r\nWhen I download synced profile on another computer It does works there! \r\n\r\ncshtml files are set to ""**aspnetcorerazor**"" language.\r\n\r\nI'm trying to repair this issue around 3 days. I have scanned google and other bugs tickets but didn't find the solution.  \r\n\r\nExpected behavior:\r\nShow tips and errors for code\r\n\r\nActual behavior:\r\nDon't show tips and errors for code\r\n\r\n## My actions\r\nReinstalled vs code\r\nReinstalled c# extension\r\nReinstalled visual studio \r\nInstalled MONO\r\nInstalled visual studio core tools from visual studio installer\r\nInstalled new .net core SDK 2.2.300\r\n\r\nChecked my files.excluded:\r\n\r\n![Screenshot_3](https://user-images.githubusercontent.com/12344862/59034917-79a1c080-886c-11e9-9695-1f18ee28c7ed.png)\r\n\r\nCustom settings in vs code\r\n<details><summary>Expand</summary>\r\n<p>\r\n{\r\n    ""editor.fontSize"": 15,\r\n    ""git.autofetch"": true,\r\n    ""gitlens.advanced.messages"": {\r\n        ""suppressLineUncommittedWarning"": true,\r\n        ""suppressShowKeyBindingsNotice"": true\r\n    },\r\n    ""explorer.confirmDelete"": false,\r\n    ""window.zoomLevel"": 0,\r\n    ""explorer.confirmDragAndDrop"": false,\r\n    ""breadcrumbs.enabled"": true,\r\n    ""files.autoSave"": ""afterDelay"",\r\n    ""window.titleBarStyle"": ""custom"",\r\n    ""liveServer.settings.donotShowInfoMsg"": true,\r\n    ""git.enableSmartCommit"": true,\r\n    ""git.confirmSync"": false,\r\n    ""terminal.integrated.shell.windows"": ""C:\\\\WINDOWS\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe"",\r\n    ""todo-tree.defaultHighlight"": {\r\n        ""foreground"": ""green"",\r\n        ""type"": ""none""\r\n    },\r\n    ""todo-tree.customHighlight"": {\r\n        ""TODO"": {\r\n            ""icon"": ""pin"",\r\n            ""foreground"": ""green"",\r\n            ""type"": ""line""\r\n        },\r\n        ""FIXME"": {\r\n            ""foreground"": ""red"",\r\n            ""iconColour"": ""yellow""\r\n        }\r\n    },\r\n    ""todo-tree.regexCaseSensitive"": false,\r\n    ""quicktype.justTypes"": false,\r\n    ""gitlens.views.fileHistory.enabled"": true,\r\n    ""gitlens.views.lineHistory.enabled"": true,\r\n    ""gitlens.views.repositories.files.layout"": ""tree"",\r\n    ""emmet.includeLanguages"": {\r\n        ""aspnetcorerazor"": ""cshtml"",\r\n        ""razor"": ""html""\r\n    },\r\n    ""sync.gist"": ""nope_you_wish_xD"",\r\n    ""editor.suggestSelection"": ""first"",\r\n    ""vsintellicode.modify.editor.suggestSelection"": ""automaticallyOverrodeDefaultValue"",\r\n    ""projects.checkDirty"": true,\r\n    ""projects.checkPaths"": true,\r\n    ""projects.showBranch"": true,\r\n    ""todo-tree.showCountsInTree"": true,\r\n    ""editor.formatOnSave"": true,\r\n    ""dotnet-test-explorer.testProjectPath"": ""*/*Test*.csproj"",\r\n    ""workbench.iconTheme"": ""vscode-icons"",\r\n    ""csharp.format.enable"": false,\r\n    ""csharpfixformat.style.braces.onSameLine"": false,\r\n    ""csharpfixformat.style.spaces.beforeParenthesis"": false,\r\n    ""colorTabs.config"": [\r\n        {\r\n            ""regex"": "".*\\\\Controllers\\\\.*"",\r\n            ""color"": ""#0fd034"",\r\n            ""label"": ""Controllers""\r\n        },\r\n        {\r\n            ""regex"": ""*\\\\.js"",\r\n            ""color"": ""#f9f305""\r\n        }\r\n    ],\r\n    ""colorTabs.statusBarBackground"": false,\r\n    ""colorTabs.titleLabel"": true,\r\n    ""workbench.colorTheme"": ""Darcula Theme from IntelliJ"",\r\n    ""razor.trace"": ""Verbose""\r\n}\r\n</p>\r\n</details>\r\n\r\n\r\n\r\n## Logs\r\n\r\n#### OmniSharp\r\n<details><summary>Expand</summary>\r\n<p>\r\nStarting OmniSharp server at 6/6/2019, 2:35:01 PM\r\n    Target: d:\\c#Projects\\CoreMVCLearning2\r\n\r\nOmniSharp server started.\r\n    Path: C:\\Users\\Maciej-pc\\.vscode\\extensions\\ms-vscode.csharp-1.19.1\\.omnisharp\\1.32.19\\OmniSharp.exe\r\n    PID: 15732\r\n\r\n[info]: OmniSharp.Stdio.Host\r\n        Starting OmniSharp on Windows 6.2.9200.0 (x64)\r\n[info]: OmniSharp.Services.DotNetCliService\r\n        DotNetPath set to dotnet\r\n[info]: OmniSharp.MSBuild.Discovery.MSBuildLocator\r\n        Located 2 MSBuild instance(s)\r\n            1: Visual Studio Community 2017 15.9.28307.665 - ""C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\Bin""\r\n            2: StandAlone 15.0 - ""C:\\Users\\Maciej-pc\\.vscode\\extensions\\ms-vscode.csharp-1.19.1\\.omnisharp\\1.32.19\\.msbuild\\Current\\Bin""\r\n[info]: OmniSharp.MSBuild.Discovery.MSBuildLocator\r\n        Registered MSBuild instance: Visual Studio Community 2017 15.9.28307.665 - ""C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\Bin""\r\n[info]: OmniSharp.Cake.CakeProjectSystem\r\n        Detecting Cake files in 'd:\\c#Projects\\CoreMVCLearning2'.\r\n[info]: OmniSharp.Cake.CakeProjectSystem\r\n        Could not find any Cake files\r\n[info]: OmniSharp.WorkspaceInitializer\r\n        Project system 'OmniSharp.DotNet.DotNetProjectSystem' is disabled in the configuration.\r\n[info]: OmniSharp.MSBuild.ProjectSystem\r\n        No solution files found in 'd:\\c#Projects\\CoreMVCLearning2'\r\n[info]: OmniSharp.MSBuild.ProjectManager\r\n        Queue project update for 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\NewAppModules\\NewAppModules.csproj'\r\n[info]: OmniSharp.MSBuild.ProjectManager\r\n        Queue project update for 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\WebAppMVC.csproj'\r\n[info]: OmniSharp.Script.ScriptProjectSystem\r\n        Detecting CSX files in 'd:\\c#Projects\\CoreMVCLearning2'.\r\n[info]: OmniSharp.Script.ScriptProjectSystem\r\n        Could not find any CSX files\r\n[info]: OmniSharp.WorkspaceInitializer\r\n        Invoking Workspace Options Provider: OmniSharp.Roslyn.CSharp.Services.CSharpWorkspaceOptionsProvider\r\n[info]: OmniSharp.MSBuild.ProjectManager\r\n        Loading project: d:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\NewAppModules\\NewAppModules.csproj\r\n[info]: OmniSharp.WorkspaceInitializer\r\n        Configuration finished.\r\n[info]: OmniSharp.Stdio.Host\r\n        Omnisharp server running using Stdio at location 'd:\\c#Projects\\CoreMVCLearning2' on host 12720.\r\n[info]: OmniSharp.MSBuild.ProjectManager\r\n        Successfully loaded project file 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\NewAppModules\\NewAppModules.csproj'.\r\n[info]: OmniSharp.MSBuild.ProjectManager\r\n        Adding project 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\NewAppModules\\NewAppModules.csproj'\r\n[info]: OmniSharp.MSBuild.ProjectManager\r\n        Loading project: d:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\WebAppMVC.csproj\r\n[info]: OmniSharp.MSBuild.ProjectManager\r\n        Successfully loaded project file 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\WebAppMVC.csproj'.\r\n[info]: OmniSharp.MSBuild.ProjectManager\r\n        Adding project 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\WebAppMVC.csproj'\r\n[info]: OmniSharp.MSBuild.ProjectManager\r\n        Update project: NewAppModules\r\n[info]: OmniSharp.MSBuild.ProjectManager\r\n        Update project: WebAppMVC\r\n</details>\r\n\r\n#### Razor\r\n<details><summary>Expand</summary>\r\n<p>\r\n\r\n\r\n```\r\n[Client - 2:35:14 PM] -- Starting Issue Data Collection-- \r\n[Client - 2:35:14 PM] Notifying project 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\WebAppMVC.csproj' - 'changed'\r\n[Client - 2:35:16 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'htmlChanged'\r\n[Client - 2:35:16 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'htmlChanged'\r\n[Client - 2:35:16 PM] Updating the C# document for Razor file '/d:/c#Projects/CoreMVCLearning2/CoreMVCLearning/WebAppMVC/Views/LoggerEntryWeb/Index2.cshtml' (2)\r\n[Client - 2:35:16 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'csharpChanged'\r\n[Client - 2:35:16 PM] 1 - Synchronizing 'd:\\c':\r\n    Currently at 2, synchronizing to version '2'.\r\n    Current host document version: '2'\r\n    Current projected document version: '3'\r\n[Client - 2:35:16 PM] 1 - Projected document in sync with host document\r\n[Client - 2:35:16 PM] 1 - Projected text document not in sync with data type, waiting for update...\r\n    Current projected text document sync version: 0\r\n[Client - 2:35:17 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'htmlChanged'\r\n[Client - 2:35:17 PM] Updating the C# document for Razor file '/d:/c#Projects/CoreMVCLearning2/CoreMVCLearning/WebAppMVC/Views/LoggerEntryWeb/Index2.cshtml' (3)\r\n[Client - 2:35:17 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'csharpChanged'\r\n[Client - 2:35:17 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'htmlChanged'\r\n[Client - 2:35:17 PM] Updating the C# document for Razor file '/d:/c#Projects/CoreMVCLearning2/CoreMVCLearning/WebAppMVC/Views/LoggerEntryWeb/Index2.cshtml' (4)\r\n[Client - 2:35:17 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'csharpChanged'\r\n[Client - 2:35:17 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'htmlChanged'\r\n[Client - 2:35:17 PM] Updating the C# document for Razor file '/d:/c#Projects/CoreMVCLearning2/CoreMVCLearning/WebAppMVC/Views/LoggerEntryWeb/Index2.cshtml' (5)\r\n[Client - 2:35:17 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'csharpChanged'\r\n[Client - 2:35:17 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'htmlChanged'\r\n[Client - 2:35:17 PM] Updating the C# document for Razor file '/d:/c#Projects/CoreMVCLearning2/CoreMVCLearning/WebAppMVC/Views/LoggerEntryWeb/Index2.cshtml' (6)\r\n[Client - 2:35:17 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'csharpChanged'\r\n[Client - 2:35:18 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'htmlChanged'\r\n[Client - 2:35:18 PM] Updating the C# document for Razor file '/d:/c#Projects/CoreMVCLearning2/CoreMVCLearning/WebAppMVC/Views/LoggerEntryWeb/Index2.cshtml' (7)\r\n[Client - 2:35:18 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'csharpChanged'\r\n[Client - 2:35:18 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'htmlChanged'\r\n[Client - 2:35:18 PM] Updating the C# document for Razor file '/d:/c#Projects/CoreMVCLearning2/CoreMVCLearning/WebAppMVC/Views/LoggerEntryWeb/Index2.cshtml' (8)\r\n[Client - 2:35:18 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'csharpChanged'\r\n[Client - 2:35:18 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'htmlChanged'\r\n[Client - 2:35:18 PM] Updating the C# document for Razor file '/d:/c#Projects/CoreMVCLearning2/CoreMVCLearning/WebAppMVC/Views/LoggerEntryWeb/Index2.cshtml' (9)\r\n[Client - 2:35:18 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'csharpChanged'\r\n[Client - 2:35:18 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'htmlChanged'\r\n[Client - 2:35:18 PM] Updating the C# document for Razor file '/d:/c#Projects/CoreMVCLearning2/CoreMVCLearning/WebAppMVC/Views/LoggerEntryWeb/Index2.cshtml' (10)\r\n[Client - 2:35:18 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'csharpChanged'\r\n[Client - 2:35:18 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'htmlChanged'\r\n[Client - 2:35:18 PM] 1 - Synchronization failed: Token cancellation requested: undefined\r\n[Client - 2:35:18 PM] Providing completions for document d:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml at location (4, 6)\r\n[Client - 2:35:18 PM] Updating the C# document for Razor file '/d:/c#Projects/CoreMVCLearning2/CoreMVCLearning/WebAppMVC/Views/LoggerEntryWeb/Index2.cshtml' (11)\r\n[Client - 2:35:18 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'csharpChanged'\r\n[Client - 2:35:18 PM] 2 - Synchronizing 'd:\\c':\r\n    Currently at 11, synchronizing to version '11'.\r\n    Current host document version: '11'\r\n    Current projected document version: '13'\r\n[Client - 2:35:18 PM] 2 - Projected document in sync with host document\r\n[Client - 2:35:18 PM] 2 - Projected text document not in sync with data type, waiting for update...\r\n    Current projected text document sync version: 0\r\n[Client - 2:35:19 PM] 2 - Synchronization failed: Token cancellation requested: undefined\r\n[Client - 2:35:19 PM] Providing completions for document d:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml at location (4, 15)\r\n[Client - 2:35:19 PM] 3 - Synchronizing 'd:\\c':\r\n    Currently at 11, synchronizing to version '11'.\r\n    Current host document version: '11'\r\n    Current projected document version: '13'\r\n[Client - 2:35:19 PM] 3 - Projected document in sync with host document\r\n[Client - 2:35:19 PM] 3 - Projected text document not in sync with data type, waiting for update...\r\n    Current projected text document sync version: 0\r\n[Client - 2:35:19 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'htmlChanged'\r\n[Client - 2:35:21 PM] 3 - Synchronization failed: Synchronization timed out\r\n[Client - 2:35:21 PM] Providing completions for document d:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml at location (4, 15)\r\n[Client - 2:35:28 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'htmlChanged'\r\n[Client - 2:35:28 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'htmlChanged'\r\n[Client - 2:35:28 PM] Updating the C# document for Razor file '/d:/c#Projects/CoreMVCLearning2/CoreMVCLearning/WebAppMVC/Views/LoggerEntryWeb/Index2.cshtml' (12)\r\n[Client - 2:35:28 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'csharpChanged'\r\n[Client - 2:35:29 PM] Notifying document 'd:\\c#Projects\\CoreMVCLearning2\\CoreMVCLearning\\WebAppMVC\\Views\\LoggerEntryWeb\\Index2.cshtml' changed 'htmlChanged'\r\n[Client - 2:35:31 PM] -- Stopping Issue Data Collection-- \r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n## Workspace information\r\n\r\n#### Razor document:\r\n<details><summary>Expand</summary>\r\n<p>\r\n\r\n```Razor\r\n<div class=""text-center"">\r\n    <h1 class=""display-4"">Testttt</h1>\r\n</div>\r\n\r\n<div>@Datetime. </div>\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n#### Projected CSharp document:\r\n<details><summary>Expand</summary>\r\n<p>\r\n\r\n```C#\r\n////////////////////// Projected CSharp as seen by extension ///////////////////////\r\n// <auto-generated/>\r\n#pragma warning disable 1591\r\nnamespace AspNetCore\r\n{\r\n    #line hidden\r\n    using TModel = global::System.Object;\r\n    using System;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using System.Threading.Tasks;\r\n    using Microsoft.AspNetCore.Mvc;\r\n    using Microsoft.AspNetCore.Mvc.Rendering;\r\n    using Microsoft.AspNetCore.Mvc.ViewFeatures;\r\n#line 1 ""/d:/c#Projects/CoreMVCLearning2/CoreMVCLearning/WebAppMVC/Views/_ViewImports.cshtml""\r\nusing WebAppMVC;\r\n\r\n#line default\r\n#line hidden\r\n#line 2 ""/d:/c#Projects/CoreMVCLearning2/CoreMVCLearning/WebAppMVC/Views/_ViewImports.cshtml""\r\nusing WebAppMVC.Models;\r\n\r\n#line default\r\n#line hidden\r\n#line 5 ""/d:/c#Projects/CoreMVCLearning2/CoreMVCLearning/WebAppMVC/Views/_ViewImports.cshtml""\r\nusing Kendo.Mvc.UI;\r\n\r\n#line default\r\n#line hidden\r\n    public class Views_LoggerEntryWeb_Index2 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>\r\n    {\r\n        #pragma warning disable 219\r\n        private void __RazorDirectiveTokenHelpers__() {\r\n        }\r\n        #pragma warning restore 219\r\n        #pragma warning disable 0414\r\n        private static System.Object __o = null;\r\n        #pragma warning restore 0414\r\n        #pragma warning disable 1998\r\n        public async override global::System.Threading.Tasks.Task ExecuteAsync()\r\n        {\r\n#line 5 ""/d:/c#Projects/CoreMVCLearning2/CoreMVCLearning/WebAppMVC/Views/LoggerEntryWeb/Index2.cshtml""\r\n__o = Datetime;\r\n\r\n#line default\r\n#line hidden\r\n        }\r\n        #pragma warning restore 1998\r\n        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]\r\n        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }\r\n        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]\r\n        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }\r\n        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]\r\n        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }\r\n        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]\r\n        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }\r\n        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]\r\n        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }\r\n    }\r\n}\r\n#pragma warning restore 1591\r\n\r\n\r\n\r\n////////////////////// Projected CSharp as seen by VSCode ///////////////////////\r\n\r\n// 0\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n#### Projected Html document:\r\n<details><summary>Expand</summary>\r\n<p>\r\n\r\n```Html\r\n////////////////////// Projected Html as seen by extension ///////////////////////\r\n<div class=""text-center"">\r\n    <h1 class=""display-4"">Testttt</h1>\r\n</div>\r\n\r\n<div>@Datetime. </div>\r\n\r\n\r\n////////////////////// Projected Html as seen by VSCode ///////////////////////\r\n\r\n// 0\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n## Machine information\r\n\r\n\r\n**VSCode version**: 1.34.0\r\n**Razor.VSCode version**: 1.19.1\r\n#### `dotnet --info`\r\n\r\n<details><summary>Expand</summary>\r\n<p>\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.300\r\n Commit:    73efd5bd87\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.300\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.5\r\n  Commit:  0a3c9209c0\r\n\r\n.NET Core SDKs installed:\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600-preview-009426 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009677 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n#### Extensions\r\n<details><summary>Expand</summary>\r\n<p>\r\n\r\n\r\n|Extension|Author|Version|\r\n|---|---|---|\r\n|add-reference|adrianwilczynski|1.0.2|\r\n|asp-net-core-switcher|adrianwilczynski|1.0.2|\r\n|auto-using|Fudge|0.7.8|\r\n|bracket-pair-colorizer|CoenraadS|1.0.61|\r\n|classynaming|reflectiondm|1.2.0|\r\n|clipboard-history|Anjali|1.0.7|\r\n|code-runner|formulahendry|0.9.10|\r\n|code-settings-sync|Shan|3.2.9|\r\n|color-highlight|naumovs|2.3.0|\r\n|color-tabs-vscode-ext|orepor|0.7.0|\r\n|csharp|ms-vscode|1.19.1|\r\n|csharp-colors|logerfo|0.1.3|\r\n|csharp-workspace|qp|0.0.3|\r\n|csharpextensions|jchannon|1.3.0|\r\n|csharpfixformat|Leopotam|0.0.81|\r\n|docomment|k--kato|0.1.7|\r\n|dotnet-test-explorer|formulahendry|0.7.0|\r\n|dracula-theme-from-intellij|trinm1709|0.3.0|\r\n|es7-react-js-snippets|dsznajder|2.3.0|\r\n|githistory|donjayamanne|0.4.6|\r\n|gitlens|eamodio|9.8.1|\r\n|horizon-theme-vscode|jolaleye|1.8.1|\r\n|java|redhat|0.46.0|\r\n|json-tools|eriklynd|1.0.2|\r\n|LiveServer|ritwickdey|5.6.1|\r\n|make-hidden|devine-davies|3.0.3|\r\n|markdown-all-in-one|yzhang|2.3.1|\r\n|Material-theme|zhuangtongfa|2.24.1|\r\n|mongo-runner|JoeyYiZhao|0.5.8|\r\n|namespace|adrianwilczynski|1.1.0|\r\n|new-moon-vscode|taniarascia|1.8.4|\r\n|nuget-reverse-package-search|jesschadwick|0.1.68|\r\n|one-monokai|azemoh|0.3.7|\r\n|open-in-browser|techer|2.0.0|\r\n|output-colorizer|IBM|0.1.2|\r\n|partial-diff|ryu1kn|1.4.0|\r\n|path-intellisense|christian-kohler|1.4.2|\r\n|powershell|ms-vscode|2019.5.0|\r\n|quicktype|quicktype|12.0.46|\r\n|rest-client|humao|0.21.3|\r\n|shades-of-purple|ahmadawais|5.9.0|\r\n|supersharp|craigthomas|0.1.4|\r\n|todo-tree|Gruntfuggly|0.0.134|\r\n|underscore-name|adrianwilczynski|1.1.1|\r\n|vsc-material-theme|Equinusocio|2.9.0|\r\n|vscode-color-pick|adam-watters|0.6.2|\r\n|vscode-css-peek|pranaygp|2.2.0|\r\n|vscode-dotnet-auto-attach|DennisMaxJung|1.1.0|\r\n|vscode-eslint|dbaeumer|1.9.0|\r\n|vscode-extension-auto-import|NuclleaR|1.4.3|\r\n|vscode-great-icons|emmanuelbeziat|2.1.47|\r\n|vscode-icons|vscode-icons-team|8.7.0|\r\n|vscode-import-cost|wix|2.12.0|\r\n|vscode-java-debug|vscjava|0.19.0|\r\n|vscode-java-dependency|vscjava|0.4.0|\r\n|vscode-java-pack|vscjava|0.7.1|\r\n|vscode-java-test|vscjava|0.17.0|\r\n|vscode-maven|vscjava|0.17.0|\r\n|vscode-nuget-package-manager|jmrog|1.1.6|\r\n|vscode-projects-plus|fabiospampinato|1.22.0|\r\n|vscode-sqlite|alexcvzz|0.6.0|\r\n|vscode-theme-onedark|akamud|2.1.0|\r\n|vscode-versionlens|pflannery|0.23.0|\r\n|vscode-wakatime|WakaTime|2.1.2|\r\n|vscodeintellicode|VisualStudioExptTeam|1.1.6|\r\n|winteriscoming|johnpapa|1.1.1|\r\n|xml|DotJoshJohnson|2.5.0|;\r\n\r\n\r\n</p>\r\n</details>","C#\r\n////////////////////// Projected CSharp as seen by extension ///////////////////////\r\n// <auto-generated/>\r\n#pragma warning disable 1591\r\nnamespace AspNetCore\r\n{\r\n    #line hidden\r\n    using TModel = global::System.Object;\r\n    using System;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using System.Threading.Tasks;\r\n    using Microsoft.AspNetCore.Mvc;\r\n    using Microsoft.AspNetCore.Mvc.Rendering;\r\n    using Microsoft.AspNetCore.Mvc.ViewFeatures;\r\n#line 1 ""/d:/c#Projects/CoreMVCLearning2/CoreMVCLearning/WebAppMVC/Views/_ViewImports.cshtml""\r\nusing WebAppMVC;\r\n\r\n#line default\r\n#line hidden\r\n#line 2 ""/d:/c#Projects/CoreMVCLearning2/CoreMVCLearning/WebAppMVC/Views/_ViewImports.cshtml""\r\nusing WebAppMVC.Models;\r\n\r\n#line default\r\n#line hidden\r\n#line 5 ""/d:/c#Projects/CoreMVCLearning2/CoreMVCLearning/WebAppMVC/Views/_ViewImports.cshtml""\r\nusing Kendo.Mvc.UI;\r\n\r\n#line default\r\n#line hidden\r\n    public class Views_LoggerEntryWeb_Index2 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>\r\n    {\r\n        #pragma warning disable 219\r\n        private void __RazorDirectiveTokenHelpers__() {\r\n        }\r\n        #pragma warning restore 219\r\n        #pragma warning disable 0414\r\n        private static System.Object __o = null;\r\n        #pragma warning restore 0414\r\n        #pragma warning disable 1998\r\n        public async override global::System.Threading.Tasks.Task ExecuteAsync()\r\n        {\r\n#line 5 ""/d:/c#Projects/CoreMVCLearning2/CoreMVCLearning/WebAppMVC/Views/LoggerEntryWeb/Index2.cshtml""\r\n__o = Datetime;\r\n\r\n#line default\r\n#line hidden\r\n        }\r\n        #pragma warning restore 1998\r\n        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]\r\n        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }\r\n        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]\r\n        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }\r\n        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]\r\n        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }\r\n        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]\r\n        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }\r\n        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]\r\n        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }\r\n    }\r\n}\r\n#pragma warning restore 1591\r\n\r\n\r\n\r\n////////////////////// Projected CSharp as seen by VSCode ///////////////////////\r\n\r\n// 0\r\n"
10909,"Clean up which directive attributes expect HTML vs C#Currently you need to specify a leading @ character for event handler values. For example:\r\n\r\n\r\n\r\nHowever, the leading @ character in the attribute value should not be required:\r\n\r\n\r\n\r\nSee the design notes in https://github.com/aspnet/AspNetCore/issues/6364",bug|Done|area-blazor,ajaybhargavb,"Currently you need to specify a leading @ character for event handler values. For example:\r\n\r\n```html\r\n<button @onclick=""@IncrementCount"">Count</button>\r\n```\r\n\r\nHowever, the leading @ character in the attribute value should not be required:\r\n\r\n```html\r\n<button @onclick=""IncrementCount"">Count</button>\r\n```\r\n\r\nSee the design notes in https://github.com/aspnet/AspNetCore/issues/6364","html\r\n<button @onclick=""@IncrementCount"">Count</button>\r\n"
10887,"[blazor] url enconding sometimes not working with UriHelper.NavigateTo1. Create blazor page(just replace `counter` page from basic vs blazor template): \r\n\r\n2. Write any not latin text, for ex. `\u0442\u0435\u0441\u0442` in the `second` `input` field, \r\npage will be navigated to the `/\u0442\u0435\u0441\u0442` (in the browser url)\r\nand in the input \r\nyou'll see '\u0442\u0435\u0441\u0442'\r\n3. Write any not latin text, for ex. `\u0442\u0435\u0441\u0442` in the `first` `input` field, \r\npage will be navigated to the `/counter/\u0442\u0435\u0441\u0442` (in_ the browser url)\r\nand in the input \r\nyou'll see `%D1%82%D0%B5%D1%81%D1%82` instead of `\u0442\u0435\u0441\u0442`\r\n\r\n---\r\n\r\nTo solve this issue, needed, somewhere for ex. in basic method of blazor component `OnParametersSet`\r\ncall decode method for all params, like: \r\n",area-blazor,SteveSandersonMS,"1. Create blazor page(just replace `counter` page from basic vs blazor template): \r\n```html\r\n@page ""/counter""\r\n@page ""/counter/{search}""\r\n@inject IUriHelper UriHelper\r\n\r\n<p>\r\nThis search has problems with encoding:<br>\r\n<input type=""search"" \r\n       value=""@Search"" \r\n       placeholder=""enter here: `\u0442\u0435\u0441\u0442`""\r\n       oninput=""@(e=> UriHelper.NavigateTo($""/counter/{e.Value.ToString()}"") )"" />\r\n</p>\r\n<p>\r\n    <input type=""search"" \r\n           value=""@Search"" \r\n           placeholder=""enter here: `\u0442\u0435\u0441\u0442`""\r\n       oninput=""@(e=> UriHelper.NavigateTo(e.Value.ToString()) )"" />\r\n</p>\r\n\r\n<p>Search: @Search</p>\r\n@functions {\r\n    [Parameter]\r\n    public string Search { get; set; } = string.Empty;\r\n}\r\n\r\n```\r\n2. Write any not latin text, for ex. `\u0442\u0435\u0441\u0442` in the `second` `input` field, \r\npage will be navigated to the `/\u0442\u0435\u0441\u0442` (in the browser url)\r\nand in the input \r\nyou'll see '\u0442\u0435\u0441\u0442'\r\n3. Write any not latin text, for ex. `\u0442\u0435\u0441\u0442` in the `first` `input` field, \r\npage will be navigated to the `/counter/\u0442\u0435\u0441\u0442` (in_ the browser url)\r\nand in the input \r\nyou'll see `%D1%82%D0%B5%D1%81%D1%82` instead of `\u0442\u0435\u0441\u0442`\r\n\r\n---\r\n\r\nTo solve this issue, needed, somewhere for ex. in basic method of blazor component `OnParametersSet`\r\ncall decode method for all params, like: \r\n```csharp\r\n protected override void OnParametersSet() {\r\n        base.OnParametersSet();\r\n        // do the same for all params\r\n        Search = System.Net.WebUtility.UrlDecode(Search); \r\n    }\r\n```","html\r\n@page ""/counter""\r\n@page ""/counter/{search}""\r\n@inject IUriHelper UriHelper\r\n\r\n<p>\r\nThis search has problems with encoding:<br>\r\n<input type=""search"" \r\n       value=""@Search"" \r\n       placeholder=""enter here: `\u0442\u0435\u0441\u0442`""\r\n       oninput=""@(e=> UriHelper.NavigateTo($""/counter/{e.Value.ToString()}"") )"" />\r\n</p>\r\n<p>\r\n    <input type=""search"" \r\n           value=""@Search"" \r\n           placeholder=""enter here: `\u0442\u0435\u0441\u0442`""\r\n       oninput=""@(e=> UriHelper.NavigateTo(e.Value.ToString()) )"" />\r\n</p>\r\n\r\n<p>Search: @Search</p>\r\n@functions {\r\n    [Parameter]\r\n    public string Search { get; set; } = string.Empty;\r\n}\r\n\r\n"
10886,"Customizing HTTP/2 abort responseIn gRPC there is the concept of a deadline. The deadline is sent by the client to the server with a gRPC call in a header. It is the client saying to the server ""you have X seconds to finish this call, after-which give up"".\r\n\r\n* If the server finished the call in less than X sends then the response completes as usual.\r\n* If the server exceeds the X seconds then it immediately finishes the HTTP/2 response, sending a RST_STREAM. The user's gRPC method code will likely still be executing after this. If they are good then it will be using a cancellation token, and they stop whatever they're doing quickly. But they might not, and continue doing stuff after the response is complete. This is fine. It is also fine if an error eventually gets thrown because they tried to do an HTTP thing.\r\n\r\nToday the gRPC server is finishing the connection when the deadline is hit by calling `HttpContext.Abort()`. This immediately sends RST_STREAM with an INTERNAL_ERROR error code. The request delegate with the user's code is still running. Using `Abort` is not ideal, but its response seems to be acceptable to the various gRPC clients of the world.\r\n\r\nToday that response on Abort looks very hard-coded in Http2Stream:\r\n\r\n\r\n\r\nI think the current abort behavior is fine for gRPC to use with deadline, the one thing that could be improved is the abort response over HTTP/2. We're sending INTERNAL_ERROR, and no status trailers. Another gRPC implementation I looked at immediately ends the response, but it sends RST_STREAM (NO_ERROR), along with some HTTP/2 trailing headers.\r\n\r\nIt would be nice to have a hook in ASP.NET Core to modify the response when an HTTP/2 abort occurs, such as changing the `Http2ErrorCode` used with RST_STREAM, or appending trailers. \r\n\r\nThoughts around the area?\r\nOr alternatives?",Done|feature-kestrel|HTTP2|accepted|area-networking,Tratcher,"In gRPC there is the concept of a deadline. The deadline is sent by the client to the server with a gRPC call in a header. It is the client saying to the server ""you have X seconds to finish this call, after-which give up"".\r\n\r\n* If the server finished the call in less than X sends then the response completes as usual.\r\n* If the server exceeds the X seconds then it immediately finishes the HTTP/2 response, sending a RST_STREAM. The user's gRPC method code will likely still be executing after this. If they are good then it will be using a cancellation token, and they stop whatever they're doing quickly. But they might not, and continue doing stuff after the response is complete. This is fine. It is also fine if an error eventually gets thrown because they tried to do an HTTP thing.\r\n\r\nToday the gRPC server is finishing the connection when the deadline is hit by calling `HttpContext.Abort()`. This immediately sends RST_STREAM with an INTERNAL_ERROR error code. The request delegate with the user's code is still running. Using `Abort` is not ideal, but its response seems to be acceptable to the various gRPC clients of the world.\r\n\r\nToday that response on Abort looks very hard-coded in Http2Stream:\r\n\r\n```cs\r\nprotected override void ApplicationAbort()\r\n{\r\n    var abortReason = new ConnectionAbortedException(CoreStrings.ConnectionAbortedByApplication);\r\n    ResetAndAbort(abortReason, Http2ErrorCode.INTERNAL_ERROR);\r\n}\r\n```\r\n\r\nI think the current abort behavior is fine for gRPC to use with deadline, the one thing that could be improved is the abort response over HTTP/2. We're sending INTERNAL_ERROR, and no status trailers. Another gRPC implementation I looked at immediately ends the response, but it sends RST_STREAM (NO_ERROR), along with some HTTP/2 trailing headers.\r\n\r\nIt would be nice to have a hook in ASP.NET Core to modify the response when an HTTP/2 abort occurs, such as changing the `Http2ErrorCode` used with RST_STREAM, or appending trailers. \r\n\r\nThoughts around the area?\r\nOr alternatives?","cs\r\nprotected override void ApplicationAbort()\r\n{\r\n    var abortReason = new ConnectionAbortedException(CoreStrings.ConnectionAbortedByApplication);\r\n    ResetAndAbort(abortReason, Http2ErrorCode.INTERNAL_ERROR);\r\n}\r\n"
10872,"Adopt Bedrock Client abstractions in SignalR clientEpic #10869\r\n\r\nSignalR currently uses the ""Bedrock"" abstractions on the server side (`ConnectionContext`, etc.) but has a custom client-side abstraction (`IConnectionFactory`). Bedrock has evolved to support a client-side abstraction now so SignalR should update to use it (since it would be a breaking change).\r\n\r\nThe new client abstraction shape is:\r\n\r\n\r\n\r\nSome elements to this:\r\n* Add `IConnectionFactory` (as above) somewhere ([Connections.Abstractions](https://github.com/aspnet/AspNetCore/tree/master/src/Servers/Connections.Abstractions/src)? or a new library?)\r\n* Add `HttpEndpont` sub-class of `System.Net.Endpoint` (for use in the `IConnectionFactory.ConnectAsync` method).\r\n* Configure the `TransferFormat` in the constructor instead of in the `ConnectAsync` method?\r\n* Delete existing connection factory and change to use the new abstraction.",Done|area-signalr|🥌 Bedrock|area-networking,halter73,"Epic #10869\r\n\r\nSignalR currently uses the ""Bedrock"" abstractions on the server side (`ConnectionContext`, etc.) but has a custom client-side abstraction (`IConnectionFactory`). Bedrock has evolved to support a client-side abstraction now so SignalR should update to use it (since it would be a breaking change).\r\n\r\nThe new client abstraction shape is:\r\n\r\n```csharp\r\npublic interface IConnectionFactory\r\n{\r\n    ValueTask<ConnectionContext> ConnectAsync(System.Net.EndPoint endpoint, CancellationToken cancellationToken = default);\r\n}\r\n```\r\n\r\nSome elements to this:\r\n* Add `IConnectionFactory` (as above) somewhere ([Connections.Abstractions](https://github.com/aspnet/AspNetCore/tree/master/src/Servers/Connections.Abstractions/src)? or a new library?)\r\n* Add `HttpEndpont` sub-class of `System.Net.Endpoint` (for use in the `IConnectionFactory.ConnectAsync` method).\r\n* Configure the `TransferFormat` in the constructor instead of in the `ConnectAsync` method?\r\n* Delete existing connection factory and change to use the new abstraction.","csharp\r\npublic interface IConnectionFactory\r\n{\r\n    ValueTask<ConnectionContext> ConnectAsync(System.Net.EndPoint endpoint, CancellationToken cancellationToken = default);\r\n}\r\n"
10869,[Epic] Enhancing Bedrock AbstractionsThis is tracking the work to align our servers and SignalR client APIs with a proposed new socket abstraction. See https://github.com/aspnet/AspNetCore/issues/10308 for a detailed description (that issue was originally tracking this work before this epic was created).\r\n\r\nNew abstraction shape:\r\n\r\n\r\n\r\nChild Items\r\n* [x] https://github.com/aspnet/AspNetCore/issues/10308 Client/server networking abstractions (covers the server-side work)\r\n* [x] https://github.com/aspnet/AspNetCore/issues/10872 Adopt new Bedrock abstractions in SignalR Client.\r\n* [x] https://github.com/aspnet/AspNetCore/issues/10607 Implement IAsyncDisposable in Connection.Abstractions (a bit tangental but related enough)\r\n* [x] https://github.com/aspnet/AspNetCore/issues/4623 Convert https connection adapter to connection middleware,area-signalr|🥌 Bedrock|Epic|area-networking,analogrelay|davidfowl,"This is tracking the work to align our servers and SignalR client APIs with a proposed new socket abstraction. See https://github.com/aspnet/AspNetCore/issues/10308 for a detailed description (that issue was originally tracking this work before this epic was created).\r\n\r\nNew abstraction shape:\r\n\r\n```csharp\r\npublic abstract class ConnectionContext : IAsyncDisposable\r\n{\r\n  // unchanged except for IAsyncDisposable base\r\n}\r\n\r\npublic interface IConnectionListenerFactory\r\n{\r\n    ValueTask<IConnectionListener> BindAsync(System.Net.EndPoint endpoint, CancellationToken cancellationToken = default);\r\n}\r\n\r\npublic interface IConnectionListener : IAsyncDisposable\r\n{\r\n    EndPoint EndPoint { get; }\r\n    ValueTask<ConnectionContext> AcceptAsync(CancellationToken cancellationToken = default);\r\n    ValueTask UnbindAsync(CancellationToken cancellationToken = default);\r\n}\r\n\r\npublic interface IConnectionFactory\r\n{\r\n    ValueTask<ConnectionContext> ConnectAsync(System.Net.EndPoint endpoint, CancellationToken cancellationToken = default);\r\n}\r\n```\r\n\r\nChild Items\r\n* [x] https://github.com/aspnet/AspNetCore/issues/10308 Client/server networking abstractions (covers the server-side work)\r\n* [x] https://github.com/aspnet/AspNetCore/issues/10872 Adopt new Bedrock abstractions in SignalR Client.\r\n* [x] https://github.com/aspnet/AspNetCore/issues/10607 Implement IAsyncDisposable in Connection.Abstractions (a bit tangental but related enough)\r\n* [x] https://github.com/aspnet/AspNetCore/issues/4623 Convert https connection adapter to connection middleware","csharp\r\npublic abstract class ConnectionContext : IAsyncDisposable\r\n{\r\n  // unchanged except for IAsyncDisposable base\r\n}\r\n\r\npublic interface IConnectionListenerFactory\r\n{\r\n    ValueTask<IConnectionListener> BindAsync(System.Net.EndPoint endpoint, CancellationToken cancellationToken = default);\r\n}\r\n\r\npublic interface IConnectionListener : IAsyncDisposable\r\n{\r\n    EndPoint EndPoint { get; }\r\n    ValueTask<ConnectionContext> AcceptAsync(CancellationToken cancellationToken = default);\r\n    ValueTask UnbindAsync(CancellationToken cancellationToken = default);\r\n}\r\n\r\npublic interface IConnectionFactory\r\n{\r\n    ValueTask<ConnectionContext> ConnectAsync(System.Net.EndPoint endpoint, CancellationToken cancellationToken = default);\r\n}\r\n"
10792,Validate LinkParser## Summary\r\n\r\n`LinkParser` is a new singleton service that can be used with endpoint routing to parse URL paths and extract route values.\r\n\r\nThe common use case for this is when you have URLs as part of your domain model. You want some way to parse these URLs using a well-known template and get route values (usually the id).\r\n\r\nExample:\r\n\r\n\r\n\r\n## Checklist:\r\n\r\n- [x] Can parse a path successfully with a known route (routename)\r\n- [x] Fails for an unknown route (returns null)\r\n- [x] Fails for a path that doesn't match\r\n- [x] Includes default values from the route\r\n- [x] Runs route constraints (use a route constraint that doesn't match)\r\n- [x] Look at the logging for success and failure cases - is it good?\r\n\r\n## References\r\n - PR: https://github.com/aspnet/AspNetCore/pull/9728\r\n - Issue: https://github.com/aspnet/AspNetCore/issues/4597,Done|area-mvc|Validation,ryanbrandenburg,"## Summary\r\n\r\n`LinkParser` is a new singleton service that can be used with endpoint routing to parse URL paths and extract route values.\r\n\r\nThe common use case for this is when you have URLs as part of your domain model. You want some way to parse these URLs using a well-known template and get route values (usually the id).\r\n\r\nExample:\r\n\r\n```C#\r\n[HttpPut]\r\n[Route(""/Products/{id}"", Name = ""ProductsRoute"")]\r\npublic async Task<IActionResult> AddRelatedProduct(int projectId, string path)\r\n{\r\n   var values = parser.ParsePathByEndpointName(""ProductsRoute"", path);\r\n   var relatedId = (string)values[""id""];\r\n\r\n   // Do something with this information\r\n}\r\n```\r\n\r\n## Checklist:\r\n\r\n- [x] Can parse a path successfully with a known route (routename)\r\n- [x] Fails for an unknown route (returns null)\r\n- [x] Fails for a path that doesn't match\r\n- [x] Includes default values from the route\r\n- [x] Runs route constraints (use a route constraint that doesn't match)\r\n- [x] Look at the logging for success and failure cases - is it good?\r\n\r\n## References\r\n - PR: https://github.com/aspnet/AspNetCore/pull/9728\r\n - Issue: https://github.com/aspnet/AspNetCore/issues/4597","C#\r\n[HttpPut]\r\n[Route(""/Products/{id}"", Name = ""ProductsRoute"")]\r\npublic async Task<IActionResult> AddRelatedProduct(int projectId, string path)\r\n{\r\n   var values = parser.ParsePathByEndpointName(""ProductsRoute"", path);\r\n   var relatedId = (string)values[""id""];\r\n\r\n   // Do something with this information\r\n}\r\n"
10791,"Validate inferred [Required] for nullable properties and parameters## Summary\r\n\r\nPreview 6 adds a feature that allows MVC to add an inferred `[Required]` attribute on parameters and properties of objects used in model binding.\r\n\r\nIf you haven't used nullability before, I recommend starting with the official docs: https://docs.microsoft.com/en-us/dotnet/csharp/tutorials/upgrade-to-nullable-references - this is an example based on Razor Pages.\r\n\r\nExample:\r\n\r\n\r\n\r\n## Unsupported\r\n\r\nThere is a case w don't support in this analysis because they are complex to determine and unlikely to occur.\r\n\r\nUsing nullablilty and generics together:\r\n\r\n \r\n\r\n## Checklist:\r\n - [x] Validate parameters\r\n    - [x] Non-null value accepted\r\n    - [x] Null value results in an validation error\r\n    - [x] Client side validation requires you to enter a value\r\n    - [x] Validate using an explicit `[Required]` to supply your own error messages\r\n - [x] Validate properties\r\n    - [x] Non-null value accepted\r\n    - [x] Null value results in an validation error\r\n    - [x] Client side validation requires you to enter a value\r\n    - [x] Validate using an explicit `[Required]` to supply your own error messages\r\n - [x] Validate disabling this feature with the option `MvcOptions.SuppressImplicitRequiredAttributeForNonNullableReferenceTypes `\r\n\r\n## References\r\n\r\n- nullability docs: https://docs.microsoft.com/en-us/dotnet/csharp/tutorials/upgrade-to-nullable-references\r\n- nullability analysis by yours truly: https://github.com/aspnet/specs/blob/master/notes/3_0/nullable.md\r\n- PR: https://github.com/aspnet/AspNetCore/pull/9978",Done|area-mvc|Validation,ryanbrandenburg,"## Summary\r\n\r\nPreview 6 adds a feature that allows MVC to add an inferred `[Required]` attribute on parameters and properties of objects used in model binding.\r\n\r\nIf you haven't used nullability before, I recommend starting with the official docs: https://docs.microsoft.com/en-us/dotnet/csharp/tutorials/upgrade-to-nullable-references - this is an example based on Razor Pages.\r\n\r\nExample:\r\n\r\n```C#\r\n#nullable enable\r\npublic class MyController : Controller\r\n{\r\n      public Task<ActionResult> EditPerson(Person person)\r\n      {\r\n           ...\r\n      }\r\n}\r\n\r\npublic class Person\r\n{\r\n     // Behaves as-if you put [Required] on this property\r\n    public string Name { get; set; } = default!;\r\n    public int Age { get; set; }\r\n}\r\n```\r\n\r\n## Unsupported\r\n\r\nThere is a case w don't support in this analysis because they are complex to determine and unlikely to occur.\r\n\r\nUsing nullablilty and generics together:\r\n\r\n```C#\r\n#nullable enable\r\npublic class MyController : Controller\r\n{\r\n      public Task<ActionResult> DoStuff(Container<string> obj)\r\n      {\r\n           ...\r\n      }\r\n}\r\n\r\nclass Container<T>\r\n{\r\n    public T Item { get; set; } = default!;\r\n}\r\n``` \r\n\r\n## Checklist:\r\n - [x] Validate parameters\r\n    - [x] Non-null value accepted\r\n    - [x] Null value results in an validation error\r\n    - [x] Client side validation requires you to enter a value\r\n    - [x] Validate using an explicit `[Required]` to supply your own error messages\r\n - [x] Validate properties\r\n    - [x] Non-null value accepted\r\n    - [x] Null value results in an validation error\r\n    - [x] Client side validation requires you to enter a value\r\n    - [x] Validate using an explicit `[Required]` to supply your own error messages\r\n - [x] Validate disabling this feature with the option `MvcOptions.SuppressImplicitRequiredAttributeForNonNullableReferenceTypes `\r\n\r\n## References\r\n\r\n- nullability docs: https://docs.microsoft.com/en-us/dotnet/csharp/tutorials/upgrade-to-nullable-references\r\n- nullability analysis by yours truly: https://github.com/aspnet/specs/blob/master/notes/3_0/nullable.md\r\n- PR: https://github.com/aspnet/AspNetCore/pull/9978",C#\r\n#nullable enable\r\npublic class MyController : Controller\r\n{\r\n      public Task<ActionResult> EditPerson(Person person)\r\n      {\r\n           ...\r\n      }\r\n}\r\n\r\npublic class Person\r\n{\r\n     // Behaves as-if you put [Required] on this property\r\n    public string Name { get; set; } = default!;\r\n    public int Age { get; set; }\r\n}\r\n
10782,"Windows unix domain sockets don't work with binding syntaxThis works:\r\n\r\n\r\n\r\nThis does not work:\r\n\r\n\r\n\r\n```\r\ncrit: Microsoft.AspNetCore.Server.Kestrel[0]\r\n      Unable to start Kestrel.\r\nSystem.InvalidOperationException: A path base can only be configured using IApplicationBuilder.UsePathBase().\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.ParseAddress(String address, Boolean& https)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.BindAsync(AddressBindContext context)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(IServerAddressesFeature addresses, KestrelServerOptions serverOptions, ILogger logger, Func`2 createBinding)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)\r\n\r\nUnhandled Exception: System.InvalidOperationException: A path base can only be configured using IApplicationBuilder.UsePathBase().\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.ParseAddress(String address, Boolean& https)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.BindAsync(AddressBindContext context)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(IServerAddressesFeature addresses, KestrelServerOptions serverOptions, ILogger logger, Func`2 createBinding)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Hosting.Internal.GenericWebHostService.StartAsync(CancellationToken cancellationToken)\r\n   at Microsoft.Extensions.Hosting.Internal.Host.StartAsync(CancellationToken cancellationToken)\r\n   at Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.RunAsync(IHost host, CancellationToken token)\r\n   at Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.RunAsync(IHost host, CancellationToken token)\r\n   at Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.Run(IHost host)\r\n   at WebApplication270.Program.Main(String[] args) in C:\\Users\\david\\source\\repos\\WebApplication270\\WebApplication270\\Program.cs:line 16\r\n````",bug|good first issue|area-networking,davidfowl,"This works:\r\n\r\n```C#\r\npublic static IHostBuilder CreateHostBuilder(string[] args) =>\r\n    Host.CreateDefaultBuilder(args)\r\n        .ConfigureWebHostDefaults(webBuilder =>\r\n        {\r\n            webBuilder.UseStartup<Startup>()\r\n                      .UseKestrel(o =>\r\n                      {\r\n                          o.ListenUnixSocket(@""C:\\Users\\david\\source\\repos\\WebApplication270\\WebApplication270\\pipe.socket"");\r\n                      });\r\n        });\r\n```\r\n\r\nThis does not work:\r\n\r\n```C#\r\npublic static IHostBuilder CreateHostBuilder(string[] args) =>\r\n    Host.CreateDefaultBuilder(args)\r\n        .ConfigureWebHostDefaults(webBuilder =>\r\n        {\r\n            webBuilder.UseStartup<Startup>()\r\n                      .UseUrls(@""http://unix://C:\\Users\\david\\source\\repos\\WebApplication270\\WebApplication270\\pipe.socket"");\r\n        });\r\n```\r\n\r\n```\r\ncrit: Microsoft.AspNetCore.Server.Kestrel[0]\r\n      Unable to start Kestrel.\r\nSystem.InvalidOperationException: A path base can only be configured using IApplicationBuilder.UsePathBase().\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.ParseAddress(String address, Boolean& https)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.BindAsync(AddressBindContext context)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(IServerAddressesFeature addresses, KestrelServerOptions serverOptions, ILogger logger, Func`2 createBinding)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)\r\n\r\nUnhandled Exception: System.InvalidOperationException: A path base can only be configured using IApplicationBuilder.UsePathBase().\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.ParseAddress(String address, Boolean& https)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.BindAsync(AddressBindContext context)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(IServerAddressesFeature addresses, KestrelServerOptions serverOptions, ILogger logger, Func`2 createBinding)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Hosting.Internal.GenericWebHostService.StartAsync(CancellationToken cancellationToken)\r\n   at Microsoft.Extensions.Hosting.Internal.Host.StartAsync(CancellationToken cancellationToken)\r\n   at Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.RunAsync(IHost host, CancellationToken token)\r\n   at Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.RunAsync(IHost host, CancellationToken token)\r\n   at Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.Run(IHost host)\r\n   at WebApplication270.Program.Main(String[] args) in C:\\Users\\david\\source\\repos\\WebApplication270\\WebApplication270\\Program.cs:line 16\r\n````","C#\r\npublic static IHostBuilder CreateHostBuilder(string[] args) =>\r\n    Host.CreateDefaultBuilder(args)\r\n        .ConfigureWebHostDefaults(webBuilder =>\r\n        {\r\n            webBuilder.UseStartup<Startup>()\r\n                      .UseKestrel(o =>\r\n                      {\r\n                          o.ListenUnixSocket(@""C:\\Users\\david\\source\\repos\\WebApplication270\\WebApplication270\\pipe.socket"");\r\n                      });\r\n        });\r\n"
10714,Fix MusicStore query tests once EF queries are workingCollection Include in `StoreController.cs`:\r\n\r\n\r\n\r\n`SumAsync` in `ShoppingCart.cs`:\r\n\r\n,Done|area-mvc,ajcvickers,Collection Include in `StoreController.cs`:\r\n\r\n```C#\r\nvar genreModel = await DbContext.Genres\r\n                .Include(g => g.Albums)\t\r\n                .Where(g => g.Name == genre)\r\n                .FirstOrDefaultAsync();\r\n```\r\n\r\n`SumAsync` in `ShoppingCart.cs`:\r\n```C#\r\n return _dbContext\r\n                .CartItems\r\n                .Where(c => c.CartId == _shoppingCartId)\r\n                .Select(c => c.Album.Price * c.Count)\r\n                .SumAsync();\r\n```\r\n,C#\r\nvar genreModel = await DbContext.Genres\r\n                .Include(g => g.Albums)\t\r\n                .Where(g => g.Name == genre)\r\n                .FirstOrDefaultAsync();\r\n
10574,"Request: allow dependency injection in RouteConstraints and IRouterHi,\r\n\r\n### Problem\r\nCurrently, the registration of `IRoute` and `IRouteConstraint` implementations is not adapted for dependency injection. In order to add implementations of those, one needs to explicitly initialize them.\r\nMy request is that you allow registering them so that they are resolved by the container when required.\r\n\r\nFor instance, I'm working on a multi-tenant app, and I want to make sure tenant exists before we're routing to controller etc. There is a catalog database containing the tenant info, and I'd want to break the routing if the tenant doesn't exist in the catalog DB.\r\n\r\n### Solution\r\nMy request is that allow 'registering' `IRouteContraint`s implementations so that they are resolved by the DI container, instead of registering their type in the dictionary.\r\nFor example:\r\n\r\n\r\n\r\nThe same applies to `IRouter`:\r\n\r\n\r\n\r\n",question|area-mvc,rynowak,"Hi,\r\n\r\n### Problem\r\nCurrently, the registration of `IRoute` and `IRouteConstraint` implementations is not adapted for dependency injection. In order to add implementations of those, one needs to explicitly initialize them.\r\nMy request is that you allow registering them so that they are resolved by the container when required.\r\n\r\nFor instance, I'm working on a multi-tenant app, and I want to make sure tenant exists before we're routing to controller etc. There is a catalog database containing the tenant info, and I'd want to break the routing if the tenant doesn't exist in the catalog DB.\r\n\r\n### Solution\r\nMy request is that allow 'registering' `IRouteContraint`s implementations so that they are resolved by the DI container, instead of registering their type in the dictionary.\r\nFor example:\r\n\r\n```c#\r\n// Startup.cs\r\npublic void ConfigureServices(IServiceCollection services)\r\n{     \r\n      services.Configure<RouteOptions>(options => {\r\n        // suggested:\r\n        options.ConstraintMap.Register<SubdomainConstraint>();\r\n      });\r\n}\r\n\r\n// SubdomainConstraint.cs\r\n\r\npublic class SubdomainConstraint : IRouteConstraint\r\n  {\r\n    // this provider uses the CatalogDbContext to check if tenant exists\r\n    readonly ITenantProvider _TenantProvider;\r\n\r\n    public SubdomainConstraint(ITenantProvider tenantProvider)\r\n    {\r\n      _TenantProvider = tenantProvider;\r\n    }\r\n\r\n    public bool Match(HttpContext httpContext, IRouter route, string routeKey,\r\n         RouteValueDictionary values, RouteDirection routeDirection)\r\n    {\r\n      return _TenantProvider.Tenant != null;\r\n    }\r\n}\r\n```\r\n\r\nThe same applies to `IRouter`:\r\n\r\n```c#\r\n// Startup.cs\r\npublic void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n{     \r\n    app.UseMvc(routes =>\r\n    {\r\n        routes.Routes.Register<SubdomainRouter>();\r\n    });\r\n}\r\n\r\n// SubdomainRouter.cs\r\n\r\npublic class SubdomainRouter : IRouter\r\n{\r\n  readonly IRouter _DefaultRouter;\r\n  readonly ITenantProvider _TenantProvider;\r\n\r\n  public SubdomainRouter(IRouter defaultRouter, ITenantProvider tenantProvider)\r\n  {\r\n    _DefaultRouter = defaultRouter;\r\n    _TenantProvider = tenantProvider;\r\n  }\r\n\r\n  public VirtualPathData GetVirtualPath(VirtualPathContext context) => \r\n      _DefaultRouter.GetVirtualPath(context);\r\n\r\n  public Task RouteAsync(RouteContext context)\r\n  {\r\n    if (_TenantProvider.Tenant == null)\r\n      context.HttpContext.Response.StatusCode = (int)HttpStatusCode.BadRequest;\r\n\r\n    return _DefaultRouter.RouteAsync(context);\r\n  }\r\n}\r\n```\r\n\r\n","c#\r\n// Startup.cs\r\npublic void ConfigureServices(IServiceCollection services)\r\n{     \r\n      services.Configure<RouteOptions>(options => {\r\n        // suggested:\r\n        options.ConstraintMap.Register<SubdomainConstraint>();\r\n      });\r\n}\r\n\r\n// SubdomainConstraint.cs\r\n\r\npublic class SubdomainConstraint : IRouteConstraint\r\n  {\r\n    // this provider uses the CatalogDbContext to check if tenant exists\r\n    readonly ITenantProvider _TenantProvider;\r\n\r\n    public SubdomainConstraint(ITenantProvider tenantProvider)\r\n    {\r\n      _TenantProvider = tenantProvider;\r\n    }\r\n\r\n    public bool Match(HttpContext httpContext, IRouter route, string routeKey,\r\n         RouteValueDictionary values, RouteDirection routeDirection)\r\n    {\r\n      return _TenantProvider.Tenant != null;\r\n    }\r\n}\r\n"
10493,"Blazor: More flexible Router / layout displayCurrently, we have a hardcoded set of assumptions about what you want to do with a router, i.e.,\r\n\r\n * You want to display the page inside its layouts\r\n * You want to authorize access to the page, but still show its layouts regardless\r\n\r\nThe logic for this is all internal to `Router` and `LayoutDisplay` (being renamed to `PageDisplay`). Instead of this, we could reduce `Router` to be a templated component that just finds a page and parameters for you. Then you could choose how to render that, and where authorization wrappers go, etc., yourself.\r\n\r\nExample:\r\n\r\n\r\n\r\nThis would completely nuke issue #10445 in the most comprehensive manner.\r\n\r\nOne drawback is the amount of repetition of specifying `<LayoutDisplay Layout=""@typeof(MainLayout)"">` here, but doing this does eliminate any need for a `DefaultLayout` concept, and completely decouples `Router`, `AuthorizeView`, and `LayoutDisplay` from each other. They would no longer need to have any awareness of each others' existence.\r\n\r\n@rynowak @danroth27 @javiercn What's your gut response to this? Does it look too complicated, or do you think the flexibility warrants all the explicit code?\r\n\r\n### Plan\r\n\r\n* [x] Implement `LayoutView`\r\n* [x] Implement `RouteView`\r\n* [x] Update `Router` to new factoring\r\n* [x] Implement `AuthorizeRouteView`\r\n* [x] ~~Remove `CascadingAuthenticationState`~~ No, keeping it.\r\n* [x] Remove `PageDisplay`\r\n* [x] Update E2E tests\r\n* [x] Update project templates\r\n",Done|enhancement|area-blazor,SteveSandersonMS|rynowak,"Currently, we have a hardcoded set of assumptions about what you want to do with a router, i.e.,\r\n\r\n * You want to display the page inside its layouts\r\n * You want to authorize access to the page, but still show its layouts regardless\r\n\r\nThe logic for this is all internal to `Router` and `LayoutDisplay` (being renamed to `PageDisplay`). Instead of this, we could reduce `Router` to be a templated component that just finds a page and parameters for you. Then you could choose how to render that, and where authorization wrappers go, etc., yourself.\r\n\r\nExample:\r\n\r\n```cshtml\r\n<Router AppAssembly=""@typeof(App).Assembly"" Context=""routeContext"">\r\n    <NotFoundContent>\r\n        <LayoutDisplay Layout=""@typeof(MainLayout)"">\r\n            <h1>Not found</h1>\r\n            Sorry, there's nothing here.\r\n        </LayoutDisplay>\r\n    </NotFoundContent>\r\n    <FoundContent>\r\n        <AttributeAuthorizeView Page=""@routeContext.Page"">\r\n            <Authorized>\r\n                <LayoutDisplay Page=""@routeContext.Page"" PageParameters=""@routeContext.Parameters"" />            \r\n            </Authorized>\r\n            <NotAuthorized>\r\n                <LayoutDisplay Layout=""@typeof(MainLayout)"">\r\n                    <h1>Access denied</h1>\r\n                    Go away.\r\n                </LayoutDisplay>\r\n            </NotAuthorized>\r\n            <Authorizing>\r\n                <LayoutDisplay Layout=""@typeof(MainLayout)"">\r\n                    <h1>Please wait</h1>\r\n                    Checking authorization...\r\n                </LayoutDisplay>\r\n            </Authorizing>\r\n        </AttributeAuthorizeView>\r\n    </FoundContent>\r\n</Router>\r\n```\r\n\r\nThis would completely nuke issue #10445 in the most comprehensive manner.\r\n\r\nOne drawback is the amount of repetition of specifying `<LayoutDisplay Layout=""@typeof(MainLayout)"">` here, but doing this does eliminate any need for a `DefaultLayout` concept, and completely decouples `Router`, `AuthorizeView`, and `LayoutDisplay` from each other. They would no longer need to have any awareness of each others' existence.\r\n\r\n@rynowak @danroth27 @javiercn What's your gut response to this? Does it look too complicated, or do you think the flexibility warrants all the explicit code?\r\n\r\n### Plan\r\n\r\n* [x] Implement `LayoutView`\r\n* [x] Implement `RouteView`\r\n* [x] Update `Router` to new factoring\r\n* [x] Implement `AuthorizeRouteView`\r\n* [x] ~~Remove `CascadingAuthenticationState`~~ No, keeping it.\r\n* [x] Remove `PageDisplay`\r\n* [x] Update E2E tests\r\n* [x] Update project templates\r\n","cshtml\r\n<Router AppAssembly=""@typeof(App).Assembly"" Context=""routeContext"">\r\n    <NotFoundContent>\r\n        <LayoutDisplay Layout=""@typeof(MainLayout)"">\r\n            <h1>Not found</h1>\r\n            Sorry, there's nothing here.\r\n        </LayoutDisplay>\r\n    </NotFoundContent>\r\n    <FoundContent>\r\n        <AttributeAuthorizeView Page=""@routeContext.Page"">\r\n            <Authorized>\r\n                <LayoutDisplay Page=""@routeContext.Page"" PageParameters=""@routeContext.Parameters"" />            \r\n            </Authorized>\r\n            <NotAuthorized>\r\n                <LayoutDisplay Layout=""@typeof(MainLayout)"">\r\n                    <h1>Access denied</h1>\r\n                    Go away.\r\n                </LayoutDisplay>\r\n            </NotAuthorized>\r\n            <Authorizing>\r\n                <LayoutDisplay Layout=""@typeof(MainLayout)"">\r\n                    <h1>Please wait</h1>\r\n                    Checking authorization...\r\n                </LayoutDisplay>\r\n            </Authorizing>\r\n        </AttributeAuthorizeView>\r\n    </FoundContent>\r\n</Router>\r\n"
10469,"Razor Pages and MapWhen### Describe the bug\r\nI'm trying to use two seperate instances of the `RazorPages` middleware, each instance is in it's own branch of the middleware pipeline, created using `Map`. I am getting 404's ~~and I am not sure why.~~ due to multiple seperate issues at play - which I have linked.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Repro here: https://github.com/dazinator/DemoRazorPagesMapped\r\n2. Run the project with VS2019 preview. I've also included the `startup.cs` below.\r\n3. When browsing the site, I just get 404's.\r\n\r\n### Expected behavior\r\nI would expect when browsing the site on path of `/t1` for the Razor Pages middleware in that branch to serve me razor pages from the /T1 directory - as this is how RazorPages is configured given the options in `HttpContext.RequestServices` at that time when the middleware executes. \r\n\r\nSame expectation when browsing for `/t2` - i.e that should serve from the the /T2 directory. However all I get are 404's.\r\n\r\nAm I missing something?\r\n\r\n### Screenshots\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n### Additional context\r\nThis may not be a bug, it could be something I am not conceptually understanding about the framework.\r\n\r\nHere is `startup.cs`\r\n\r\n\r\n```\r\n",help wanted|enhancement|area-mvc,pranavkm,"### Describe the bug\r\nI'm trying to use two seperate instances of the `RazorPages` middleware, each instance is in it's own branch of the middleware pipeline, created using `Map`. I am getting 404's ~~and I am not sure why.~~ due to multiple seperate issues at play - which I have linked.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Repro here: https://github.com/dazinator/DemoRazorPagesMapped\r\n2. Run the project with VS2019 preview. I've also included the `startup.cs` below.\r\n3. When browsing the site, I just get 404's.\r\n\r\n### Expected behavior\r\nI would expect when browsing the site on path of `/t1` for the Razor Pages middleware in that branch to serve me razor pages from the /T1 directory - as this is how RazorPages is configured given the options in `HttpContext.RequestServices` at that time when the middleware executes. \r\n\r\nSame expectation when browsing for `/t2` - i.e that should serve from the the /T2 directory. However all I get are 404's.\r\n\r\nAm I missing something?\r\n\r\n### Screenshots\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n### Additional context\r\nThis may not be a bug, it could be something I am not conceptually understanding about the framework.\r\n\r\nHere is `startup.cs`\r\n\r\n```csharp\r\n    public class Startup\r\n    {\r\n        public Startup(IConfiguration configuration)\r\n        {\r\n            Configuration = configuration;\r\n        }\r\n\r\n        public IConfiguration Configuration { get; }\r\n\r\n        public IServiceProvider Tenant1ServiceProvider { get; set; }\r\n        public IServiceProvider Tenant2ServiceProvider { get; set; }\r\n\r\n\r\n        // This method gets called by the runtime. Use this method to add services to the container.\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.Configure<CookiePolicyOptions>(options =>\r\n            {\r\n                // This lambda determines whether user consent for non-essential cookies is needed for a given request.\r\n                options.CheckConsentNeeded = context => true;\r\n            });\r\n\r\n\r\n            services.AddRazorPages((options) => { options.RootDirectory = ""/T1""; })\r\n                .AddNewtonsoftJson();\r\n\r\n            Tenant1ServiceProvider = services.BuildServiceProvider();\r\n\r\n            services.AddRazorPages((options) => { options.RootDirectory = ""/T2""; })\r\n                .AddNewtonsoftJson();\r\n\r\n            Tenant2ServiceProvider = services.BuildServiceProvider();\r\n\r\n        }\r\n\r\n        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.\r\n        public void Configure(IApplicationBuilder app, IWebHostEnvironment env)\r\n        {\r\n            if (env.IsDevelopment())\r\n            {\r\n                app.UseDeveloperExceptionPage();\r\n            }\r\n            else\r\n            {\r\n                app.UseExceptionHandler(""/Error"");\r\n                // The default HSTS value is 30 days. You may want to change this for production scenarios, see https://aka.ms/aspnetcore-hsts.\r\n                app.UseHsts();\r\n            }\r\n\r\n            app.UseHttpsRedirection();\r\n            app.UseStaticFiles();\r\n\r\n            app.UseCookiePolicy();\r\n\r\n            app.MapWhen((c) =>\r\n            {\r\n                return c.Request.Path == ""/t1"";\r\n            }, (branched) =>\r\n            {\r\n                branched.ApplicationServices = Tenant1ServiceProvider;\r\n                branched.Use((con, next) =>\r\n                {\r\n                    var scope = Tenant1ServiceProvider.CreateScope();\r\n                    con.RequestServices = scope.ServiceProvider;\r\n                    con.Response.RegisterForDispose(scope);\r\n                    return next.Invoke();\r\n                });\r\n                branched.Use((con, next) =>\r\n                {\r\n                    Console.WriteLine(""Tenant 1 Request Services set.."");\r\n                    return next.Invoke();\r\n                });\r\n                branched.UseRouting();\r\n                branched.UseAuthorization();\r\n                branched.UseEndpoints(endpoints =>\r\n                {\r\n                    endpoints.MapRazorPages();\r\n                });\r\n            });\r\n\r\n            app.MapWhen((c) =>\r\n            {\r\n                return c.Request.Path == ""/t2"";\r\n            }, (branched) =>\r\n            {\r\n                branched.ApplicationServices = Tenant2ServiceProvider;\r\n                branched.Use((con, next) =>\r\n                {\r\n                    var scope = Tenant2ServiceProvider.CreateScope();\r\n                    con.RequestServices = scope.ServiceProvider;\r\n                    con.Response.RegisterForDispose(scope);                    \r\n                    return next.Invoke();\r\n                });\r\n                branched.Use((con, next) =>\r\n                {\r\n                    Console.WriteLine(""Tenant 2 Request Services set.."");\r\n                    return next.Invoke();\r\n                });\r\n                branched.UseRouting();\r\n                branched.UseAuthorization();\r\n                branched.UseEndpoints(endpoints =>\r\n                {\r\n                    endpoints.MapRazorPages();\r\n                });\r\n            });\r\n        }\r\n    }\r\n```\r\n```\r\n","csharp\r\n    public class Startup\r\n    {\r\n        public Startup(IConfiguration configuration)\r\n        {\r\n            Configuration = configuration;\r\n        }\r\n\r\n        public IConfiguration Configuration { get; }\r\n\r\n        public IServiceProvider Tenant1ServiceProvider { get; set; }\r\n        public IServiceProvider Tenant2ServiceProvider { get; set; }\r\n\r\n\r\n        // This method gets called by the runtime. Use this method to add services to the container.\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.Configure<CookiePolicyOptions>(options =>\r\n            {\r\n                // This lambda determines whether user consent for non-essential cookies is needed for a given request.\r\n                options.CheckConsentNeeded = context => true;\r\n            });\r\n\r\n\r\n            services.AddRazorPages((options) => { options.RootDirectory = ""/T1""; })\r\n                .AddNewtonsoftJson();\r\n\r\n            Tenant1ServiceProvider = services.BuildServiceProvider();\r\n\r\n            services.AddRazorPages((options) => { options.RootDirectory = ""/T2""; })\r\n                .AddNewtonsoftJson();\r\n\r\n            Tenant2ServiceProvider = services.BuildServiceProvider();\r\n\r\n        }\r\n\r\n        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.\r\n        public void Configure(IApplicationBuilder app, IWebHostEnvironment env)\r\n        {\r\n            if (env.IsDevelopment())\r\n            {\r\n                app.UseDeveloperExceptionPage();\r\n            }\r\n            else\r\n            {\r\n                app.UseExceptionHandler(""/Error"");\r\n                // The default HSTS value is 30 days. You may want to change this for production scenarios, see https://aka.ms/aspnetcore-hsts.\r\n                app.UseHsts();\r\n            }\r\n\r\n            app.UseHttpsRedirection();\r\n            app.UseStaticFiles();\r\n\r\n            app.UseCookiePolicy();\r\n\r\n            app.MapWhen((c) =>\r\n            {\r\n                return c.Request.Path == ""/t1"";\r\n            }, (branched) =>\r\n            {\r\n                branched.ApplicationServices = Tenant1ServiceProvider;\r\n                branched.Use((con, next) =>\r\n                {\r\n                    var scope = Tenant1ServiceProvider.CreateScope();\r\n                    con.RequestServices = scope.ServiceProvider;\r\n                    con.Response.RegisterForDispose(scope);\r\n                    return next.Invoke();\r\n                });\r\n                branched.Use((con, next) =>\r\n                {\r\n                    Console.WriteLine(""Tenant 1 Request Services set.."");\r\n                    return next.Invoke();\r\n                });\r\n                branched.UseRouting();\r\n                branched.UseAuthorization();\r\n                branched.UseEndpoints(endpoints =>\r\n                {\r\n                    endpoints.MapRazorPages();\r\n                });\r\n            });\r\n\r\n            app.MapWhen((c) =>\r\n            {\r\n                return c.Request.Path == ""/t2"";\r\n            }, (branched) =>\r\n            {\r\n                branched.ApplicationServices = Tenant2ServiceProvider;\r\n                branched.Use((con, next) =>\r\n                {\r\n                    var scope = Tenant2ServiceProvider.CreateScope();\r\n                    con.RequestServices = scope.ServiceProvider;\r\n                    con.Response.RegisterForDispose(scope);                    \r\n                    return next.Invoke();\r\n                });\r\n                branched.Use((con, next) =>\r\n                {\r\n                    Console.WriteLine(""Tenant 2 Request Services set.."");\r\n                    return next.Invoke();\r\n                });\r\n                branched.UseRouting();\r\n                branched.UseAuthorization();\r\n                branched.UseEndpoints(endpoints =>\r\n                {\r\n                    endpoints.MapRazorPages();\r\n                });\r\n            });\r\n        }\r\n    }\r\n"
10438,"Partial(string viewName, object model) not working when use in Razor Page### Describe the bug\r\nRazor Page Code like below (reference to: [https://www.learnrazorpages.com/razor-pages/ajax/partial-update](https://www.learnrazorpages.com/razor-pages/ajax/partial-update))\r\n\r\nwill not work. method `Partial` will throw an exception like:\r\n> InvalidOperationException: The model item passed into the ViewDataDictionary is of type 'List< Car >', but this ViewDictionary instance requires a model item of type 'AjaxPartialModel '.\r\n\r\nso I checked the Partial's source code, found:\r\n\r\nmaybe this method should change to:\r\n\r\nI had not check this implementation in depth, so maybe something is wrong above. \r\nAppreciate further details\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core 2.2\r\n\r\n",bug|Done|area-mvc,pranavkm,"### Describe the bug\r\nRazor Page Code like below (reference to: [https://www.learnrazorpages.com/razor-pages/ajax/partial-update](https://www.learnrazorpages.com/razor-pages/ajax/partial-update))\r\n```c# \r\npublic class AjaxPartialModel : PageModel\r\n{\r\n    private ICarService _carService;\r\n    public AjaxPartialModel(ICarService carService)\r\n    {\r\n        _carService = carService;\r\n    }\r\n    public List<Car> Cars { get; set; }\r\n    public void OnGet()\r\n    {\r\n    }\r\n    public PartialViewResult OnGetCarPartial()\r\n    {\r\n        Cars = _carService.GetAll();\r\n        return Partial(""_CarPartial"", Cars);\r\n    }\r\n}\r\n```\r\nwill not work. method `Partial` will throw an exception like:\r\n> InvalidOperationException: The model item passed into the ViewDataDictionary is of type 'List< Car >', but this ViewDictionary instance requires a model item of type 'AjaxPartialModel '.\r\n\r\nso I checked the Partial's source code, found:\r\n```c#\r\npublic virtual PartialViewResult Partial(string viewName, object model)\r\n{\r\n      ViewContext.ViewData.Model = model; \r\n// here ViewContext is member of AjaxPartialModel, so it accept only model of type AjaxPartialModel, \r\n// so I think here we need create a new ViewDataDictionary to accept model in parameter.\r\n\r\n      return new PartialViewResult\r\n      {\r\n            ViewName = viewName,\r\n            ViewData = ViewContext.ViewData\r\n      };\r\n}\r\n```\r\nmaybe this method should change to:\r\n```c#\r\npublic virtual PartialViewResult Partial<T>(string viewName, T model)\r\n{\r\n      return new PartialViewResult\r\n      {\r\n            ViewName = viewName,\r\n            ViewData = new ViewDataDictionary<T>(ViewData, model);\r\n      };\r\n}\r\n```\r\nI had not check this implementation in depth, so maybe something is wrong above. \r\nAppreciate further details\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core 2.2\r\n\r\n","c# \r\npublic class AjaxPartialModel : PageModel\r\n{\r\n    private ICarService _carService;\r\n    public AjaxPartialModel(ICarService carService)\r\n    {\r\n        _carService = carService;\r\n    }\r\n    public List<Car> Cars { get; set; }\r\n    public void OnGet()\r\n    {\r\n    }\r\n    public PartialViewResult OnGetCarPartial()\r\n    {\r\n        Cars = _carService.GetAll();\r\n        return Partial(""_CarPartial"", Cars);\r\n    }\r\n}\r\n"
10323,"Array or List in query string does not get parsedReferring to this previous [issue 7712](https://github.com/aspnet/Mvc/issues/7712), I'm still facing this problem when using complex objects as parameters of GET method in ApiController.\r\nSo, values inside my comlpex object with `List<>` parameter are not parsed.\r\n\r\nI've also read #8881 but I'm not on POST.\r\n\r\nI'm running .NET Core:\r\n```\r\n.NET Core SDK (che rispecchia un qualsiasi file global.json):\r\n Version:   2.1.603\r\n Commit:    ae71c68742\r\n\r\nAmbiente di runtime:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.603\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.10\r\n  Commit:  9013a2af4b\r\n```\r\n\r\n**Note:** I cannot update now to .NET Core v2.2 or newer.\r\n\r\n### Code sample\r\n\r\nController with method\r\n\r\n\r\n\r\nObject models\r\n\r\n\r\n",question|area-mvc,pranavkm,"Referring to this previous [issue 7712](https://github.com/aspnet/Mvc/issues/7712), I'm still facing this problem when using complex objects as parameters of GET method in ApiController.\r\nSo, values inside my comlpex object with `List<>` parameter are not parsed.\r\n\r\nI've also read #8881 but I'm not on POST.\r\n\r\nI'm running .NET Core:\r\n```\r\n.NET Core SDK (che rispecchia un qualsiasi file global.json):\r\n Version:   2.1.603\r\n Commit:    ae71c68742\r\n\r\nAmbiente di runtime:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.603\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.10\r\n  Commit:  9013a2af4b\r\n```\r\n\r\n**Note:** I cannot update now to .NET Core v2.2 or newer.\r\n\r\n### Code sample\r\n\r\nController with method\r\n\r\n```csharp\r\n[HttpGet]\r\npublic async Task<ActionResult<PagedResultTable>> Send([FromQuery] QueryRequest query, CancellationToken cancellationToken)\r\n{\r\n    IRequestCultureFeature rqf = Request.HttpContext.Features.Get<IRequestCultureFeature>();\r\n    CultureInfo culture = rqf.RequestCulture.Culture;\r\n\r\n    QueryResultTable result = await QueryManager.Send(query, StringLocalizerFactory, culture);\r\n\r\n    return Ok(result);\r\n}\r\n```\r\n\r\nObject models\r\n\r\n```csharp\r\npublic class QueryRequest\r\n{\r\n    public string Key { get; set; }\r\n    public List<QueryFilter> AppliedFilters { get; set; }\r\n}\r\n\r\npublic class QueryFilter\r\n{\r\n    public string Key { get; set; }\r\n    public List<object> Values { get; set; }\r\n}\r\n```\r\n","csharp\r\n[HttpGet]\r\npublic async Task<ActionResult<PagedResultTable>> Send([FromQuery] QueryRequest query, CancellationToken cancellationToken)\r\n{\r\n    IRequestCultureFeature rqf = Request.HttpContext.Features.Get<IRequestCultureFeature>();\r\n    CultureInfo culture = rqf.RequestCulture.Culture;\r\n\r\n    QueryResultTable result = await QueryManager.Send(query, StringLocalizerFactory, culture);\r\n\r\n    return Ok(result);\r\n}\r\n"
10299,"Configuring Data Protection in Blob storage with encryption failsUsing dot net core 2.2.\r\n\r\nThe initialisation of data protection and encryption of key files in Azure Blob Storage is not behaving as expected.\r\n\r\nI have created a proof of concept project with logs and more details here:\r\nhttps://github.com/span/azure-dp-conf\r\n\r\n## Setup\r\n\r\nI expect the data protection service to be configured like this.\r\n\r\n\r\n\r\nThis fails however since no key file is generated in \r\n`PersistKeysToAzureBlobStorage` and `ProtectKeysWithAzureKeyVault` seems\r\nto require the key file.\r\n\r\nA log of the failing run can be found in `./logs/First-RunFails.log`.\r\n\r\n### Expected result\r\n\r\nHost launches with no errors and key file is generated in the blob storage.\r\n\r\n### Actual result\r\n\r\nHost throws an exception and no key file has been generated in the blob storage.\r\n\r\n<details>\r\n<summary>Stack trace from First-Run-Fails.txt</summary>\r\n<pre>\r\nfail: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider[48]\r\n      An error occurred while reading the key ring.\r\nSystem.UriFormatException: Invalid URI: The format of the URI could not be determined.\r\n   at System.Uri.CreateThis(String uri, Boolean dontEscape, UriKind uriKind)\r\n   at System.Uri..ctor(String uriString, UriKind uriKind)\r\n   at Microsoft.Azure.KeyVault.ObjectIdentifier..ctor(String collection, String identifier)\r\n   at Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(IKeyVaultClient operations, String keyIdentifier, String algorithm, Byte[] key, CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.DataProtection.AzureKeyVault.AzureKeyVaultXmlEncryptor.EncryptAsync(XElement plaintextElement)\r\n   at Microsoft.AspNetCore.DataProtection.AzureKeyVault.AzureKeyVaultXmlEncryptor.Encrypt(XElement plaintextElement)\r\n   at Microsoft.AspNetCore.DataProtection.XmlEncryption.XmlEncryptionExtensions.EncryptIfNecessary(IXmlEncryptor encryptor, XElement element)\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate)\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate)\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.ICacheableKeyRingProvider.GetCacheableKeyRing(DateTimeOffset now)\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)\r\ninfo: Microsoft.AspNetCore.DataProtection.Internal.DataProtectionStartupFilter[0]\r\n      Key ring failed to load during application startup.\r\nSystem.UriFormatException: Invalid URI: The format of the URI could not be determined.\r\n   at System.Uri.CreateThis(String uri, Boolean dontEscape, UriKind uriKind)\r\n   at System.Uri..ctor(String uriString, UriKind uriKind)\r\n   at Microsoft.Azure.KeyVault.ObjectIdentifier..ctor(String collection, String identifier)\r\n   at Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(IKeyVaultClient operations, String keyIdentifier, String algorithm, Byte[] key, CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.DataProtection.AzureKeyVault.AzureKeyVaultXmlEncryptor.EncryptAsync(XElement plaintextElement)\r\n   at Microsoft.AspNetCore.DataProtection.AzureKeyVault.AzureKeyVaultXmlEncryptor.Encrypt(XElement plaintextElement)\r\n   at Microsoft.AspNetCore.DataProtection.XmlEncryption.XmlEncryptionExtensions.EncryptIfNecessary(IXmlEncryptor encryptor, XElement element)\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate)\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate)\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.ICacheableKeyRingProvider.GetCacheableKeyRing(DateTimeOffset now)\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRing()\r\n   at Microsoft.AspNetCore.DataProtection.Internal.DataProtectionStartupFilter.Configure(Action`1 next)\r\n</pre>\r\n</details>\r\n\r\n## Workaround\r\n\r\nI have found two workarounds. \r\n\r\n1. Create the key file manually in blob storage before launching the Host.\r\n2. Remove the `ProtectKeysWithAzureKeyVault` during first run to make sure \r\nthe key file is created and then re-enable the key encryption.\r\n",investigate|area-dataprotection,HaoK,"Using dot net core 2.2.\r\n\r\nThe initialisation of data protection and encryption of key files in Azure Blob Storage is not behaving as expected.\r\n\r\nI have created a proof of concept project with logs and more details here:\r\nhttps://github.com/span/azure-dp-conf\r\n\r\n## Setup\r\n\r\nI expect the data protection service to be configured like this.\r\n\r\n```c#\r\nservices\r\n    .AddDataProtection(options =>\r\n    {\r\n        options.ApplicationDiscriminator = \r\n            Configuration[""DataProtectionKeys:applicationDiscriminator""];\r\n    })\r\n    .PersistKeysToAzureBlobStorage(blobContainer, ""azuredpconf-keys.xml"")\r\n    .ProtectKeysWithAzureKeyVault(\r\n        Configuration[""AzureKeyVault:DataProtectionKey""],\r\n        Configuration[""AzureKeyVault:ClientId""],\r\n        Configuration[""AzureKeyVault:ClientSecret""]);\r\n```\r\n\r\nThis fails however since no key file is generated in \r\n`PersistKeysToAzureBlobStorage` and `ProtectKeysWithAzureKeyVault` seems\r\nto require the key file.\r\n\r\nA log of the failing run can be found in `./logs/First-RunFails.log`.\r\n\r\n### Expected result\r\n\r\nHost launches with no errors and key file is generated in the blob storage.\r\n\r\n### Actual result\r\n\r\nHost throws an exception and no key file has been generated in the blob storage.\r\n\r\n<details>\r\n<summary>Stack trace from First-Run-Fails.txt</summary>\r\n<pre>\r\nfail: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider[48]\r\n      An error occurred while reading the key ring.\r\nSystem.UriFormatException: Invalid URI: The format of the URI could not be determined.\r\n   at System.Uri.CreateThis(String uri, Boolean dontEscape, UriKind uriKind)\r\n   at System.Uri..ctor(String uriString, UriKind uriKind)\r\n   at Microsoft.Azure.KeyVault.ObjectIdentifier..ctor(String collection, String identifier)\r\n   at Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(IKeyVaultClient operations, String keyIdentifier, String algorithm, Byte[] key, CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.DataProtection.AzureKeyVault.AzureKeyVaultXmlEncryptor.EncryptAsync(XElement plaintextElement)\r\n   at Microsoft.AspNetCore.DataProtection.AzureKeyVault.AzureKeyVaultXmlEncryptor.Encrypt(XElement plaintextElement)\r\n   at Microsoft.AspNetCore.DataProtection.XmlEncryption.XmlEncryptionExtensions.EncryptIfNecessary(IXmlEncryptor encryptor, XElement element)\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate)\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate)\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.ICacheableKeyRingProvider.GetCacheableKeyRing(DateTimeOffset now)\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)\r\ninfo: Microsoft.AspNetCore.DataProtection.Internal.DataProtectionStartupFilter[0]\r\n      Key ring failed to load during application startup.\r\nSystem.UriFormatException: Invalid URI: The format of the URI could not be determined.\r\n   at System.Uri.CreateThis(String uri, Boolean dontEscape, UriKind uriKind)\r\n   at System.Uri..ctor(String uriString, UriKind uriKind)\r\n   at Microsoft.Azure.KeyVault.ObjectIdentifier..ctor(String collection, String identifier)\r\n   at Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(IKeyVaultClient operations, String keyIdentifier, String algorithm, Byte[] key, CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.DataProtection.AzureKeyVault.AzureKeyVaultXmlEncryptor.EncryptAsync(XElement plaintextElement)\r\n   at Microsoft.AspNetCore.DataProtection.AzureKeyVault.AzureKeyVaultXmlEncryptor.Encrypt(XElement plaintextElement)\r\n   at Microsoft.AspNetCore.DataProtection.XmlEncryption.XmlEncryptionExtensions.EncryptIfNecessary(IXmlEncryptor encryptor, XElement element)\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate)\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate)\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.ICacheableKeyRingProvider.GetCacheableKeyRing(DateTimeOffset now)\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRing()\r\n   at Microsoft.AspNetCore.DataProtection.Internal.DataProtectionStartupFilter.Configure(Action`1 next)\r\n</pre>\r\n</details>\r\n\r\n## Workaround\r\n\r\nI have found two workarounds. \r\n\r\n1. Create the key file manually in blob storage before launching the Host.\r\n2. Remove the `ProtectKeysWithAzureKeyVault` during first run to make sure \r\nthe key file is created and then re-enable the key encryption.\r\n","c#\r\nservices\r\n    .AddDataProtection(options =>\r\n    {\r\n        options.ApplicationDiscriminator = \r\n            Configuration[""DataProtectionKeys:applicationDiscriminator""];\r\n    })\r\n    .PersistKeysToAzureBlobStorage(blobContainer, ""azuredpconf-keys.xml"")\r\n    .ProtectKeysWithAzureKeyVault(\r\n        Configuration[""AzureKeyVault:DataProtectionKey""],\r\n        Configuration[""AzureKeyVault:ClientId""],\r\n        Configuration[""AzureKeyVault:ClientSecret""]);\r\n"
10250,"Add EnumeratorCancellation attribute to CancellationTokens in async iteratorsAnywhere we have an async iterator (see below) and take a `CancellationToken` as a parameter, we need to apply the `[EnumeratorCancellation]` attribute to the `CancellationToken` parameter to avoid `CS8425`.\r\n\r\n\r\n\r\nSignalR does this and it triggered an issue in CTI validation (specifically the tests that validate that the latest VS can build our stuff): https://devdiv.visualstudio.com/DevDiv/_workitems/edit/892482?src=WorkItemMention&src-action=artifact_link\r\n\r\nIt looks like [`EnumeratorCancellationAttribute`](https://github.com/dotnet/corefx/blob/master/src/System.Runtime/src/System/Runtime/CompilerServices/EnumeratorCancellationAttribute.cs) was added 24 days ago so we should be able to depend on it now.\r\n\r\n**NOTE** It appears the warning *only repros* in VS 16.2 pre-release builds.",area-signalr|accepted,analogrelay,"Anywhere we have an async iterator (see below) and take a `CancellationToken` as a parameter, we need to apply the `[EnumeratorCancellation]` attribute to the `CancellationToken` parameter to avoid `CS8425`.\r\n\r\n```csharp\r\npublic async IAsyncEnumerable<string> GetStringsAsync(\r\n\t\t[EnumeratorCancellation] CancellationToken cancellationToken)\r\n{\r\n\tyield break;\r\n}\r\n```\r\n\r\nSignalR does this and it triggered an issue in CTI validation (specifically the tests that validate that the latest VS can build our stuff): https://devdiv.visualstudio.com/DevDiv/_workitems/edit/892482?src=WorkItemMention&src-action=artifact_link\r\n\r\nIt looks like [`EnumeratorCancellationAttribute`](https://github.com/dotnet/corefx/blob/master/src/System.Runtime/src/System/Runtime/CompilerServices/EnumeratorCancellationAttribute.cs) was added 24 days ago so we should be able to depend on it now.\r\n\r\n**NOTE** It appears the warning *only repros* in VS 16.2 pre-release builds.",csharp\r\npublic async IAsyncEnumerable<string> GetStringsAsync(\r\n\t\t[EnumeratorCancellation] CancellationToken cancellationToken)\r\n{\r\n\tyield break;\r\n}\r\n
10128,"Unify TS and C# auto-reconnect APIsIn 3.0, auto-reconnect support is being added to the TS and C# SignalR clients. The APIs are mostly the same except for two notable differences.\r\n\r\nIn the TS client, we have:\r\n\r\n```TS\r\nIReconnectPolicy.nextRetryDelayInMilliseconds(previousRetryCount: number, elapsedMilliseconds: number): number | null;\r\n```\r\n\r\nAnd in the C# client, we have:\r\n\r\n\r\n\r\nThe first difference is `IReconnectPolicy` vs `IRetryPolicy`. I prefer changing the TS client to use `IRetryPolicy` since the interface could be used for more than just reconnects in the future (e.g. retrying starting the connection initially).\r\n\r\nThe second difference is having a `RetryContext` instead of individual parameters. I like having the `RetryContext` since you don't need to add new overload methods to the interface to add more information. I wouldn't mind renaming `RetryContext` to `RetryInfo` in both clients though. I think ""Info"" is more familiar than ""Context"" in JS/TS, and I don't think it's too out-of-place in .NET.\r\n\r\nThe TS client changes would break anyone who wrote a custom IReconnectPolicy using the preview. I'm not sure if this warrants a breaking change announcement.\r\n\r\n@anurse ",Done|area-signalr|accepted,halter73,"In 3.0, auto-reconnect support is being added to the TS and C# SignalR clients. The APIs are mostly the same except for two notable differences.\r\n\r\nIn the TS client, we have:\r\n\r\n```TS\r\nIReconnectPolicy.nextRetryDelayInMilliseconds(previousRetryCount: number, elapsedMilliseconds: number): number | null;\r\n```\r\n\r\nAnd in the C# client, we have:\r\n\r\n```C#\r\nIRetryPolicy.NextRetryDelay(RetryContext retryContext);\r\n\r\npublic sealed class RetryContext\r\n{\r\n    public long PreviousRetryCount { get; set; }\r\n    public TimeSpan ElapsedTime { get; set; }\r\n    public Exception RetryReason { get; set; }\r\n}\r\n```\r\n\r\nThe first difference is `IReconnectPolicy` vs `IRetryPolicy`. I prefer changing the TS client to use `IRetryPolicy` since the interface could be used for more than just reconnects in the future (e.g. retrying starting the connection initially).\r\n\r\nThe second difference is having a `RetryContext` instead of individual parameters. I like having the `RetryContext` since you don't need to add new overload methods to the interface to add more information. I wouldn't mind renaming `RetryContext` to `RetryInfo` in both clients though. I think ""Info"" is more familiar than ""Context"" in JS/TS, and I don't think it's too out-of-place in .NET.\r\n\r\nThe TS client changes would break anyone who wrote a custom IReconnectPolicy using the preview. I'm not sure if this warrants a breaking change announcement.\r\n\r\n@anurse ",C#\r\nIRetryPolicy.NextRetryDelay(RetryContext retryContext);\r\n\r\npublic sealed class RetryContext\r\n{\r\n    public long PreviousRetryCount { get; set; }\r\n    public TimeSpan ElapsedTime { get; set; }\r\n    public Exception RetryReason { get; set; }\r\n}\r\n
10110,"In some cases, ApiExplorer does not flatten query-bound models correctly### Describe the bug\r\nIn some cases, ApiExplorer does not ""flatten"" the properties of a complex, query-bound model correctly and this has a downstream impact on Swagger generation libraries such as Swashbuckle.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n\r\n1. Using ASP.NET Core 3.0.0-preview\r\n2. Create an action with the following query-bound model\r\n\r\n3. Run the application and observe the corresponding `ApiDescription` that's surfaced by ApiExplorer. Note that the first property of type `TestSubmodel` is flattened into multiple `ApiParameterDescriptions` correctly BUT the second property, which is of the same type, is not.\r\n```\r\nParameterDescriptions: [\r\n    {\r\n        Name: ""Id"",\r\n        Type: ""System.String""\r\n    },\r\n    {\r\n        Name: ""SubModel.SubId"",\r\n        Type: ""System.String""\r\n    },\r\n    {\r\n        Name: ""SubModel.SubSubModel.SubSubId"",\r\n        Type: ""System.String""\r\n    },\r\n    {\r\n        Name: ""SubModel.SubSubModel.SubSubDouble"",\r\n        Type: ""System.Double""\r\n    },\r\n    {\r\n        Name: ""SubModel2.SubId"",\r\n        Type: ""System.String""\r\n    },\r\n    {\r\n        Name: ""SubModel2.SubSubModel"", \r\n        Type: ""NetCore3.Controllers.TestSubSubModel""\r\n    }\r\n]\r\n```\r\n*Why was `SubModel2.SubSubModel` not flattened into two parameters in the same way `SubModel.SubSubModel` was?*\r\n\r\n### Expected behavior\r\n```\r\nParameterDescriptions: [\r\n    {\r\n        Name: ""Id"",\r\n        Type: ""System.String""\r\n    },\r\n    {\r\n        Name: ""SubModel.SubId"",\r\n        Type: ""System.String""\r\n    },\r\n    {\r\n        Name: ""SubModel.SubSubModel.SubSubId"",\r\n        Type: ""System.String""\r\n    },\r\n    {\r\n        Name: ""SubModel.SubSubModel.SubSubDouble"",\r\n        Type: ""System.Double""\r\n    },\r\n    {\r\n        Name: ""SubModel2.SubId"",\r\n        Type: ""System.String""\r\n    },\r\n    {\r\n        Name: ""SubModel2.SubSubModel.SubSubId"",\r\n        Type: ""System.String""\r\n    },\r\n    {\r\n        Name: ""SubModel2.SubSubModel.SubSubDouble"",\r\n        Type: ""System.Double""\r\n    },\r\n]\r\n```\r\n\r\n### Additional context\r\nOriginal issue reported to Swashbuckle.AspNetCore - https://github.com/domaindrivendev/Swashbuckle.AspNetCore/issues/1070\r\n",bug|Done|help wanted|area-mvc,pranavkm,"### Describe the bug\r\nIn some cases, ApiExplorer does not ""flatten"" the properties of a complex, query-bound model correctly and this has a downstream impact on Swagger generation libraries such as Swashbuckle.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n\r\n1. Using ASP.NET Core 3.0.0-preview\r\n2. Create an action with the following query-bound model\r\n```csharp\r\n\r\n[HttpGet]\r\npublic void Get([FromQuery]TestModel testModel)\r\n{ }\r\n\r\n...\r\n\r\npublic class TestModel\r\n{\r\n    public string Id { get; set; }\r\n    public TestSubmodel SubModel {get; set; }\r\n    public TestSubmodel SubModel2 { get; set; }\r\n}\r\n\r\npublic class TestSubmodel\r\n{\r\n    public string SubId { get; set; }\r\n    public TestSubSubModel SubSubModel { get; set; }\r\n}\r\n\r\npublic class TestSubSubModel\r\n{\r\n    public string SubSubId { get; set; }\r\n    public double SubSubDouble { get; set; }\r\n}\r\n```\r\n3. Run the application and observe the corresponding `ApiDescription` that's surfaced by ApiExplorer. Note that the first property of type `TestSubmodel` is flattened into multiple `ApiParameterDescriptions` correctly BUT the second property, which is of the same type, is not.\r\n```\r\nParameterDescriptions: [\r\n    {\r\n        Name: ""Id"",\r\n        Type: ""System.String""\r\n    },\r\n    {\r\n        Name: ""SubModel.SubId"",\r\n        Type: ""System.String""\r\n    },\r\n    {\r\n        Name: ""SubModel.SubSubModel.SubSubId"",\r\n        Type: ""System.String""\r\n    },\r\n    {\r\n        Name: ""SubModel.SubSubModel.SubSubDouble"",\r\n        Type: ""System.Double""\r\n    },\r\n    {\r\n        Name: ""SubModel2.SubId"",\r\n        Type: ""System.String""\r\n    },\r\n    {\r\n        Name: ""SubModel2.SubSubModel"", \r\n        Type: ""NetCore3.Controllers.TestSubSubModel""\r\n    }\r\n]\r\n```\r\n*Why was `SubModel2.SubSubModel` not flattened into two parameters in the same way `SubModel.SubSubModel` was?*\r\n\r\n### Expected behavior\r\n```\r\nParameterDescriptions: [\r\n    {\r\n        Name: ""Id"",\r\n        Type: ""System.String""\r\n    },\r\n    {\r\n        Name: ""SubModel.SubId"",\r\n        Type: ""System.String""\r\n    },\r\n    {\r\n        Name: ""SubModel.SubSubModel.SubSubId"",\r\n        Type: ""System.String""\r\n    },\r\n    {\r\n        Name: ""SubModel.SubSubModel.SubSubDouble"",\r\n        Type: ""System.Double""\r\n    },\r\n    {\r\n        Name: ""SubModel2.SubId"",\r\n        Type: ""System.String""\r\n    },\r\n    {\r\n        Name: ""SubModel2.SubSubModel.SubSubId"",\r\n        Type: ""System.String""\r\n    },\r\n    {\r\n        Name: ""SubModel2.SubSubModel.SubSubDouble"",\r\n        Type: ""System.Double""\r\n    },\r\n]\r\n```\r\n\r\n### Additional context\r\nOriginal issue reported to Swashbuckle.AspNetCore - https://github.com/domaindrivendev/Swashbuckle.AspNetCore/issues/1070\r\n",csharp\r\n\r\n[HttpGet]\r\npublic void Get([FromQuery]TestModel testModel)\r\n{ }\r\n\r\n...\r\n\r\npublic class TestModel\r\n{\r\n    public string Id { get; set; }\r\n    public TestSubmodel SubModel {get; set; }\r\n    public TestSubmodel SubModel2 { get; set; }\r\n}\r\n\r\npublic class TestSubmodel\r\n{\r\n    public string SubId { get; set; }\r\n    public TestSubSubModel SubSubModel { get; set; }\r\n}\r\n\r\npublic class TestSubSubModel\r\n{\r\n    public string SubSubId { get; set; }\r\n    public double SubSubDouble { get; set; }\r\n}\r\n
10030,"Accessing the cookie collection allocates *alot*\r\n\r\nMost of these allocations look unnecessary. In the end, we need a collection that has cookies split into name value pairs.\r\n\r\n![image](https://user-images.githubusercontent.com/95136/57275556-cb7bde80-7053-11e9-90f2-f2cd9a24f4c5.png)\r\n",task|Perf|severity-nice-to-have|affected-very-few|area-networking,jkotalik,"```C#\r\nusing Microsoft.AspNetCore.Builder;\r\nusing Microsoft.AspNetCore.Hosting;\r\nusing Microsoft.AspNetCore.Http;\r\nusing Microsoft.Extensions.DependencyInjection;\r\nusing Microsoft.Extensions.Hosting;\r\n\r\nnamespace WebApplication254\r\n{\r\n    public class Startup\r\n    {\r\n        public void Configure(IApplicationBuilder app, IWebHostEnvironment env)\r\n        {\r\n            if (env.IsDevelopment())\r\n            {\r\n                app.UseDeveloperExceptionPage();\r\n            }\r\n\r\n            app.Run(context =>\r\n            {\r\n                var cookie = context.Request.Cookies["".AspNetCore.Cookies""];\r\n\r\n                return context.Response.WriteAsync($""Hello World {cookie}"");\r\n            });\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nMost of these allocations look unnecessary. In the end, we need a collection that has cookies split into name value pairs.\r\n\r\n![image](https://user-images.githubusercontent.com/95136/57275556-cb7bde80-7053-11e9-90f2-f2cd9a24f4c5.png)\r\n","C#\r\nusing Microsoft.AspNetCore.Builder;\r\nusing Microsoft.AspNetCore.Hosting;\r\nusing Microsoft.AspNetCore.Http;\r\nusing Microsoft.Extensions.DependencyInjection;\r\nusing Microsoft.Extensions.Hosting;\r\n\r\nnamespace WebApplication254\r\n{\r\n    public class Startup\r\n    {\r\n        public void Configure(IApplicationBuilder app, IWebHostEnvironment env)\r\n        {\r\n            if (env.IsDevelopment())\r\n            {\r\n                app.UseDeveloperExceptionPage();\r\n            }\r\n\r\n            app.Run(context =>\r\n            {\r\n                var cookie = context.Request.Cookies["".AspNetCore.Cookies""];\r\n\r\n                return context.Response.WriteAsync($""Hello World {cookie}"");\r\n            });\r\n        }\r\n    }\r\n}\r\n"
9920,"Provide ability to specify different cache profile based on status code### Is your feature request related to a problem? Please describe.\r\nI'm trying to prevent user agents to cache errors or 404s.\r\n\r\n### Describe the solution you'd like\r\nI think it should be possible to provide a different cache behaviour (either with cache profiles or `ResponseCacheAttribute`) based on the status code.\r\n\r\n### Describe alternatives you've considered\r\nThe current solution is to not use the provided `ResponseCacheFilter` but re-implement one like\r\n\r\n\r\n### Additional context\r\nAlso related to https://github.com/aspnet/AspNetCore.Docs/issues/11990 as the use of the ResponseCacheMiddleware requires to add the cache headers. The middleware then doesn't cache non 200 responses, however it is not immediately obvious that the header will be left even for error responses and the user agents will cache it.\r\n",question|area-mvc,javiercn,"### Is your feature request related to a problem? Please describe.\r\nI'm trying to prevent user agents to cache errors or 404s.\r\n\r\n### Describe the solution you'd like\r\nI think it should be possible to provide a different cache behaviour (either with cache profiles or `ResponseCacheAttribute`) based on the status code.\r\n\r\n### Describe alternatives you've considered\r\nThe current solution is to not use the provided `ResponseCacheFilter` but re-implement one like\r\n```csharp\r\n    public class CachingFilterAttribute : Attribute, IResultFilter\r\n    {\r\n        public void OnResultExecuting(ResultExecutingContext context)\r\n        {\r\n            if (context.Result is StatusCodeResult statusCodeResult &&\r\n                statusCodeResult.StatusCode == 200)\r\n            {\r\n                context.HttpContext.Response.GetTypedHeaders().CacheControl =\r\n                    new CacheControlHeaderValue\r\n                    {\r\n                        Public = true,\r\n                        MaxAge = TimeSpan.FromHours(1)\r\n                    };\r\n                context.HttpContext.Response.Headers[HeaderNames.Vary] = new[] {""Accept-Encoding,Accept""};\r\n            }\r\n        }\r\n\r\n        public void OnResultExecuted(ResultExecutedContext context)\r\n        {\r\n        }\r\n    }\r\n```\r\n\r\n### Additional context\r\nAlso related to https://github.com/aspnet/AspNetCore.Docs/issues/11990 as the use of the ResponseCacheMiddleware requires to add the cache headers. The middleware then doesn't cache non 200 responses, however it is not immediately obvious that the header will be left even for error responses and the user agents will cache it.\r\n","csharp\r\n    public class CachingFilterAttribute : Attribute, IResultFilter\r\n    {\r\n        public void OnResultExecuting(ResultExecutingContext context)\r\n        {\r\n            if (context.Result is StatusCodeResult statusCodeResult &&\r\n                statusCodeResult.StatusCode == 200)\r\n            {\r\n                context.HttpContext.Response.GetTypedHeaders().CacheControl =\r\n                    new CacheControlHeaderValue\r\n                    {\r\n                        Public = true,\r\n                        MaxAge = TimeSpan.FromHours(1)\r\n                    };\r\n                context.HttpContext.Response.Headers[HeaderNames.Vary] = new[] {""Accept-Encoding,Accept""};\r\n            }\r\n        }\r\n\r\n        public void OnResultExecuted(ResultExecutedContext context)\r\n        {\r\n        }\r\n    }\r\n"
9850,"Key support. Implements #8232This is the runtime part of allowing syntax like `<something key=""@somekey"" />` to guarantee affinity of elements/components with model objects.\r\n\r\n### Common use case\r\n\r\n\r\n\r\n... or:\r\n\r\n\r\n\r\nThe use of `key` changes how the diff algorithm handles changes to the `People` list:\r\n\r\n * Without `key`, it matches model objects with elements/components in the order they both appear. So if, say, `People[0]` was removed, then it would reassociate each element/component with the `n+1`-th item in the list, and finally delete the last element/component. This can cause unnecessary extra re-rendering of child components or even problems such as making the focus appear to move to an unexpected textbox (if the focus was in a textbox for `Person[2]`, that textbox would now be reassociated with what was previously `Person[3]`, which looks as if the focus moved (although really, it's the rest of the world that moved and the focus stayed still)).\r\n * With `key`, it matches model objects with elements/components based on equality of the supplied `key` object. So if, say, `People[0]` was removed, then it would know simply to delete the first element/component, and leave everything else alone.\r\n\r\nSimilarly, if the entries in `People` were shuffled, then:\r\n\r\n * Without `key`, it would reassociate the `i`-th element/component with the new entry `People[i]`, and re-render. This performs a fine-grained update on all descendants (e.g., updating all the text nodes individually).\r\n * With `key`, it would simply re-order the elements/components to match the new ordering. It would not necessarily re-render descendants (though in practice, in the components case, it does ask them if they want to re-render because it doesn't know whether the `People` entries themselves have mutated).\r\n\r\nUsing `key` remains optional, but it's nearly always a good idea to use it any time you render a list whose data is subject to insertions/deletions/reordering.\r\n\r\nThe other possible reason to use `key` is if you want to guarantee **non**-preservation of a given subtree when some data changes. Example:\r\n\r\n```\r\n    <div key=""@myModel.Id"">... some complex DOM structure ...</div>\r\n```\r\n\r\nWithout `key`, the renderer will respond to changes by recursing into the descendants and updating each affected descendant individually. With `key`, if `myModel.Id` changes, it will throw out the entire subtree and insert a new one - this guarantees that things like focus state are *not* retained.\r\n\r\n### Code review notes\r\n\r\nWhile implementing this, I hit what I felt were complexity limits in a couple of areas, forcing me to refactor before making substantial additions. You may find it easier to read the individual commits in order. In particular, I refactored:\r\n\r\n * `RenderTreeFrame`, because the old system of having *many* ad-hoc constructors corresponding to different scenarios became intractible. There would soon be clashes of constructor signatures, and it was hard to be sure that all the `With...` methods (that clone-with-mutatation the immutable struct) would correctly preserve all the fields that were not being modified. Basically, this is crying out for C# 8.x *records*. I changed it to have one constructor per frame type, where that constructor forces you to specify all the fields applicable to that frame type. It's therefore unambiguous where to add any new fields and ensures you can't forget to copy other ones.\r\n * `RenderTreeBuilder`, mainly to reorganize the `AppendDiffEntriesForRange` logic. Previously it mixed ""deciding what to do"" with ""doing that thing"". Those two concepts are now separated, so it's easier to have multiple distinct code paths that result in the same outcome (e.g., ""treat as insert"" or ""match and recurse into descendants""). The code diff for this refactoring is hard to read, unfortunately, because it looks as it basically everything changed even though mostly it was moving blocks of code around.\r\n    * I also tried breaking up `AppendDiffEntriesForRange` into multiple methods, because it's huge. However, benchmarking showed about a 10% slowdown on Mono WebAssembly after doing that, which I would think is because it has to execute a *lot* more instructions to do all the parameter passing. So I have left it as one big method, but tried to clarify the different areas of responsibility.\r\n\r\nThe logic around detecting keyed inserts/deletions is really simple and doesn't need much of an explanation. Handling moves, however, is much more complicated. My goal was to find a way of distributing the workload between the .NET side and the JS side such that it was no worse than O(N) on either side, and that the .NET side didn't involve any per-render allocations in typical cases. The solution was not generate a list of ""moves"" (I can't think of a way to do that without either allocating for each key or doing O(N^2) lookups, but if anyone has a solution, I'd be interested!). Instead it generates a description of the final state as a permutation of the normal post-edit state. On the JS side, we can apply the permutation in O(N) time with O(N) allocations (inserting marker nodes into the DOM to track where things will get inserted) - this small number of allocations on the JS side doesn't concern me at all.",area-mvc|area-blazor,javiercn,"This is the runtime part of allowing syntax like `<something key=""@somekey"" />` to guarantee affinity of elements/components with model objects.\r\n\r\n### Common use case\r\n\r\n```cshtml\r\n@foreach (var person in People)\r\n{\r\n    <div key=""@person"">... some complex DOM structure goes here ...</div>\r\n}\r\n```\r\n\r\n... or:\r\n\r\n```cshtml\r\n@foreach (var person in People)\r\n{\r\n    <PersonDisplay key=""@person"" PublicInfo=""@person.PublicInfo"" />\r\n}\r\n```\r\n\r\nThe use of `key` changes how the diff algorithm handles changes to the `People` list:\r\n\r\n * Without `key`, it matches model objects with elements/components in the order they both appear. So if, say, `People[0]` was removed, then it would reassociate each element/component with the `n+1`-th item in the list, and finally delete the last element/component. This can cause unnecessary extra re-rendering of child components or even problems such as making the focus appear to move to an unexpected textbox (if the focus was in a textbox for `Person[2]`, that textbox would now be reassociated with what was previously `Person[3]`, which looks as if the focus moved (although really, it's the rest of the world that moved and the focus stayed still)).\r\n * With `key`, it matches model objects with elements/components based on equality of the supplied `key` object. So if, say, `People[0]` was removed, then it would know simply to delete the first element/component, and leave everything else alone.\r\n\r\nSimilarly, if the entries in `People` were shuffled, then:\r\n\r\n * Without `key`, it would reassociate the `i`-th element/component with the new entry `People[i]`, and re-render. This performs a fine-grained update on all descendants (e.g., updating all the text nodes individually).\r\n * With `key`, it would simply re-order the elements/components to match the new ordering. It would not necessarily re-render descendants (though in practice, in the components case, it does ask them if they want to re-render because it doesn't know whether the `People` entries themselves have mutated).\r\n\r\nUsing `key` remains optional, but it's nearly always a good idea to use it any time you render a list whose data is subject to insertions/deletions/reordering.\r\n\r\nThe other possible reason to use `key` is if you want to guarantee **non**-preservation of a given subtree when some data changes. Example:\r\n\r\n```\r\n    <div key=""@myModel.Id"">... some complex DOM structure ...</div>\r\n```\r\n\r\nWithout `key`, the renderer will respond to changes by recursing into the descendants and updating each affected descendant individually. With `key`, if `myModel.Id` changes, it will throw out the entire subtree and insert a new one - this guarantees that things like focus state are *not* retained.\r\n\r\n### Code review notes\r\n\r\nWhile implementing this, I hit what I felt were complexity limits in a couple of areas, forcing me to refactor before making substantial additions. You may find it easier to read the individual commits in order. In particular, I refactored:\r\n\r\n * `RenderTreeFrame`, because the old system of having *many* ad-hoc constructors corresponding to different scenarios became intractible. There would soon be clashes of constructor signatures, and it was hard to be sure that all the `With...` methods (that clone-with-mutatation the immutable struct) would correctly preserve all the fields that were not being modified. Basically, this is crying out for C# 8.x *records*. I changed it to have one constructor per frame type, where that constructor forces you to specify all the fields applicable to that frame type. It's therefore unambiguous where to add any new fields and ensures you can't forget to copy other ones.\r\n * `RenderTreeBuilder`, mainly to reorganize the `AppendDiffEntriesForRange` logic. Previously it mixed ""deciding what to do"" with ""doing that thing"". Those two concepts are now separated, so it's easier to have multiple distinct code paths that result in the same outcome (e.g., ""treat as insert"" or ""match and recurse into descendants""). The code diff for this refactoring is hard to read, unfortunately, because it looks as it basically everything changed even though mostly it was moving blocks of code around.\r\n    * I also tried breaking up `AppendDiffEntriesForRange` into multiple methods, because it's huge. However, benchmarking showed about a 10% slowdown on Mono WebAssembly after doing that, which I would think is because it has to execute a *lot* more instructions to do all the parameter passing. So I have left it as one big method, but tried to clarify the different areas of responsibility.\r\n\r\nThe logic around detecting keyed inserts/deletions is really simple and doesn't need much of an explanation. Handling moves, however, is much more complicated. My goal was to find a way of distributing the workload between the .NET side and the JS side such that it was no worse than O(N) on either side, and that the .NET side didn't involve any per-render allocations in typical cases. The solution was not generate a list of ""moves"" (I can't think of a way to do that without either allocating for each key or doing O(N^2) lookups, but if anyone has a solution, I'd be interested!). Instead it generates a description of the final state as a permutation of the normal post-edit state. On the JS side, we can apply the permutation in O(N) time with O(N) allocations (inserting marker nodes into the DOM to track where things will get inserted) - this small number of allocations on the JS side doesn't concern me at all.","cshtml\r\n@foreach (var person in People)\r\n{\r\n    <div key=""@person"">... some complex DOM structure goes here ...</div>\r\n}\r\n"
9779,"Authorized call to action with explicit `AuthenticationSchemes` uses wrong authentication scheme, but only after a different action was called### Describe the bug\r\nIn my original application, I'm configuring two authentication schemes like so:\r\n\r\n\r\n\r\nMy controller looks like this\r\n\r\n\r\n\r\nAt first, when I call `/foo` using `Basic` authentication, the request will succeed. Only after I've called `/bar` using `Bearer` authentication, calling `/foo` with `Basic` authentication will fail with a 401.\r\n\r\nI've set breakpoints in the respective authentication handlers and I can confirm that the `Basic` handler is called on the first call but not on the last one.\r\n\r\nNow, the error can be reproduced without using `AddIdentityServerAuthentication()` by adding `[AllowAnonymous]` to the `Bar()` method. In that case, the following exception is thrown on the third call\r\n\r\n```\r\nSystem.InvalidOperationException: No authenticationScheme was specified, and there was no DefaultChallengeScheme found.\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)\r\n   at Microsoft.AspNetCore.Mvc.ChallengeResult.ExecuteResultAsync(ActionContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAlwaysRunResultFilters()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)\r\n\r\n```\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior: \r\n\r\n- Check out https://github.com/cypressious/AspNetcoreAuthIssue and run it\r\n- Call\r\n```\r\nlocalhost:5010/foo\r\nAuthorization: Basic YWRtaW46YWRtaW4=\r\n```\r\n- Call `localhost:5010/bar` \r\n- Call again\r\n```\r\nlocalhost:5010/foo\r\nAuthorization: Basic YWRtaW46YWRtaW4=\r\n```\r\n\r\n\r\n### Expected behavior\r\nThe last call to `localhost:5010/foo` succeeds\r\n\r\n\r\n### Additional context\r\n### global.json\r\n\r\n```json\r\n{\r\n  ""sdk"": {\r\n    ""version"": ""2.2.104""\r\n  }\r\n}\r\n```\r\n",bug|area-auth,HaoK,"### Describe the bug\r\nIn my original application, I'm configuring two authentication schemes like so:\r\n\r\n```cs\r\nservices.AddAuthentication(""Bearer"")\r\n\t\t.AddBasic() // uses scheme ""Basic""\r\n\t\t.AddIdentityServerAuthentication(); // uses scheme ""Bearer""\r\n```\r\n\r\nMy controller looks like this\r\n\r\n```cs\r\n[Authorize]\r\n[Route("""")]\r\npublic class ValuesController : ControllerBase\r\n{\r\n    [HttpGet(""bar"")]\r\n    public void Bar()\r\n    {\r\n    }\r\n\r\n    [Authorize(AuthenticationSchemes = ""Basic"")]\r\n    [HttpGet(""foo"")]\r\n    public void Foo()\r\n    {\r\n    }\r\n}\r\n```\r\n\r\nAt first, when I call `/foo` using `Basic` authentication, the request will succeed. Only after I've called `/bar` using `Bearer` authentication, calling `/foo` with `Basic` authentication will fail with a 401.\r\n\r\nI've set breakpoints in the respective authentication handlers and I can confirm that the `Basic` handler is called on the first call but not on the last one.\r\n\r\nNow, the error can be reproduced without using `AddIdentityServerAuthentication()` by adding `[AllowAnonymous]` to the `Bar()` method. In that case, the following exception is thrown on the third call\r\n\r\n```\r\nSystem.InvalidOperationException: No authenticationScheme was specified, and there was no DefaultChallengeScheme found.\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)\r\n   at Microsoft.AspNetCore.Mvc.ChallengeResult.ExecuteResultAsync(ActionContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAlwaysRunResultFilters()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)\r\n\r\n```\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior: \r\n\r\n- Check out https://github.com/cypressious/AspNetcoreAuthIssue and run it\r\n- Call\r\n```\r\nlocalhost:5010/foo\r\nAuthorization: Basic YWRtaW46YWRtaW4=\r\n```\r\n- Call `localhost:5010/bar` \r\n- Call again\r\n```\r\nlocalhost:5010/foo\r\nAuthorization: Basic YWRtaW46YWRtaW4=\r\n```\r\n\r\n\r\n### Expected behavior\r\nThe last call to `localhost:5010/foo` succeeds\r\n\r\n\r\n### Additional context\r\n### global.json\r\n\r\n```json\r\n{\r\n  ""sdk"": {\r\n    ""version"": ""2.2.104""\r\n  }\r\n}\r\n```\r\n","cs\r\nservices.AddAuthentication(""Bearer"")\r\n\t\t.AddBasic() // uses scheme ""Basic""\r\n\t\t.AddIdentityServerAuthentication(); // uses scheme ""Bearer""\r\n"
9778,"Custom Simple Type Model Binder not working for string trimming.### Describe the bug\r\nI am trying to implement string trimming model binder, But the model binders `BindModelAsync` method never gets called. \r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core '2.1.1'\r\n#### TrimmingModelBinder\r\n\r\n\r\n#### TrimmingModelBinderProvider\r\n\r\n\r\n\r\n#### Startup.cs\r\n\r\n\r\n``` C#\r\nservices\r\n                .AddMvcCore()\r\n                .AddMvcOptions(options =>\r\n                {\r\n                    options.Filters.Add<ServiceClientExceptionFilter>();\r\n                    var simpleTypeModelBinderProvider = options.ModelBinderProviders.First(x => x.GetType() == typeof(SimpleTypeModelBinderProvider));\r\n                    var index = options.ModelBinderProviders.IndexOf(simpleTypeModelBinderProvider);\r\n                    options.ModelBinderProviders.Insert(0, new TrimmingModelBinderProvider());\r\n                })\r\n```\r\n\r\n\r\n### Expected behavior\r\nShould call the method of TrimmingModelBinder to bind trimmed string values to a models string properties.\r\n\r\n",investigate|Needs: Author Feedback|area-mvc,pranavkm,"### Describe the bug\r\nI am trying to implement string trimming model binder, But the model binders `BindModelAsync` method never gets called. \r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core '2.1.1'\r\n#### TrimmingModelBinder\r\n\r\n```C#\r\npublic class TrimmingModelBinder  : IModelBinder\r\n       {\r\n            private readonly IModelBinder FallbackBinder;\r\n\r\n        /// <summary>\r\n        /// \r\n        /// </summary>\r\n        /// <param name=""fallbackBinder""></param>        \r\n        public TrimmingModelBinder(IModelBinder fallbackBinder)\r\n        {\r\n            FallbackBinder = fallbackBinder ?? throw new ArgumentNullException(nameof(fallbackBinder));\r\n        }\r\n\r\n        /// <summary>\r\n        /// \r\n        /// </summary>\r\n        /// <param name=""bindingContext""></param>\r\n        /// <returns></returns>\r\n        public Task BindModelAsync(ModelBindingContext bindingContext)\r\n        {\r\n            if (bindingContext == null)\r\n            {\r\n                throw new ArgumentNullException(nameof(bindingContext));\r\n            }\r\n            var valueProviderResult = bindingContext.ValueProvider.GetValue(bindingContext.ModelName);\r\n            if (valueProviderResult != null &&\r\n              valueProviderResult.FirstValue is string str &&\r\n              !string.IsNullOrEmpty(str))\r\n            {\r\n                bindingContext.Result = ModelBindingResult.Success(str.Trim());\r\n                return Task.CompletedTask;\r\n            }\r\n            return FallbackBinder.BindModelAsync(bindingContext);\r\n        }\r\n    }\r\n```\r\n#### TrimmingModelBinderProvider\r\n\r\n```C#\r\n      public class TrimmingModelBinderProvider  : IModelBinderProvider\r\n    {\r\n        /// <summary>\r\n        /// \r\n        /// </summary>\r\n        /// <param name=""context""> context </param>\r\n        /// <returns></returns>\r\n        public IModelBinder GetBinder(ModelBinderProviderContext context)\r\n            {\r\n            if (context == null)\r\n            {\r\n                throw new ArgumentNullException(nameof(context));\r\n            }\r\n            if (!context.Metadata.IsComplexType && context.Metadata.ModelType == typeof(string))\r\n            {\r\n                var loggerFactory = context.Services.GetRequiredService<ILoggerFactory>();\r\n                return new TrimmingModelBinder(new SimpleTypeModelBinder(context.Metadata.ModelType, loggerFactory));\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n```\r\n\r\n#### Startup.cs\r\n\r\n\r\n``` C#\r\nservices\r\n                .AddMvcCore()\r\n                .AddMvcOptions(options =>\r\n                {\r\n                    options.Filters.Add<ServiceClientExceptionFilter>();\r\n                    var simpleTypeModelBinderProvider = options.ModelBinderProviders.First(x => x.GetType() == typeof(SimpleTypeModelBinderProvider));\r\n                    var index = options.ModelBinderProviders.IndexOf(simpleTypeModelBinderProvider);\r\n                    options.ModelBinderProviders.Insert(0, new TrimmingModelBinderProvider());\r\n                })\r\n```\r\n\r\n\r\n### Expected behavior\r\nShould call the method of TrimmingModelBinder to bind trimmed string values to a models string properties.\r\n\r\n","C#\r\npublic class TrimmingModelBinder  : IModelBinder\r\n       {\r\n            private readonly IModelBinder FallbackBinder;\r\n\r\n        /// <summary>\r\n        /// \r\n        /// </summary>\r\n        /// <param name=""fallbackBinder""></param>        \r\n        public TrimmingModelBinder(IModelBinder fallbackBinder)\r\n        {\r\n            FallbackBinder = fallbackBinder ?? throw new ArgumentNullException(nameof(fallbackBinder));\r\n        }\r\n\r\n        /// <summary>\r\n        /// \r\n        /// </summary>\r\n        /// <param name=""bindingContext""></param>\r\n        /// <returns></returns>\r\n        public Task BindModelAsync(ModelBindingContext bindingContext)\r\n        {\r\n            if (bindingContext == null)\r\n            {\r\n                throw new ArgumentNullException(nameof(bindingContext));\r\n            }\r\n            var valueProviderResult = bindingContext.ValueProvider.GetValue(bindingContext.ModelName);\r\n            if (valueProviderResult != null &&\r\n              valueProviderResult.FirstValue is string str &&\r\n              !string.IsNullOrEmpty(str))\r\n            {\r\n                bindingContext.Result = ModelBindingResult.Success(str.Trim());\r\n                return Task.CompletedTask;\r\n            }\r\n            return FallbackBinder.BindModelAsync(bindingContext);\r\n        }\r\n    }\r\n"
9758,"Endpoint routing chooses fallback route due to conflictThis is a follow-up from [a Stack Overflow question](https://stackoverflow.com/q/55855405/216074), reduced to a minimum repro, so you don\u2019t actually have to go through the question there.\r\n\r\nLet\u2019s take the following route configuration on an otherwise empty ASP.NET Core 2.2 project:\r\n\r\n\r\n\r\nAlong with three very simple controllers:\r\n\r\n\r\nAs you can see, there are three route templates which should match the following routes. These work:\r\n\r\n- `/Settings/Default` \u2192 `SettingsController.Default`\r\n- `/Settings/Categories/Add` \u2192 `CategoriesController.Add`\r\n- `/Foo` \u2192 `DefaultController.Gone`\r\n\r\nHowever, since the *SettingsRoute* has a default action of `Default` specified, `/Settings` should also trigger the `SettingsController.Default` action. Instead, endpoint routing picks the *FallbackRoute* here and goes to `DefaultController.Gone`.\r\n\r\nIf you remove the *FallbackRoute* or the *NestedRoute*, the `/Settings` path does work again correctly, so it appears to be a side effect of these three route definitions.\r\n\r\nI have been debugging through the route matcher now to figure out why this happens and for some reason the [`DfaMatcher`](https://github.com/aspnet/AspNetCore/blob/v2.2.4/src/Http/Routing/src/Matching/DfaMatcher.cs#L84) finds two candidates for the `/Settings` path, in this order:\r\n\r\n- Endpoint: `DefaultController.Gone`, Score: 0\r\n- Endpoint: `SettingsController.Default`, Score: 1\r\n\r\nSince the matcher then iterates through these candidates and appears to pick the first one that matches the route, it decides to use the `DefaultController.Gone` route, although the `SettingsController.Default` one would be the better choice.\r\n\r\nDuring initialization, the [`MvcEndpointDataSource`](https://github.com/aspnet/AspNetCore/blob/v2.2.4/src/Mvc/Mvc.Core/src/Internal/MvcEndpointDataSource.cs#L108) calculates the following five endpoints:\r\n\r\n- `CategoriesController.Add` \u2013 Order 1, RoutePattern: `Settings/Categories/Add`\r\n- `DefaultController.Gone` \u2013 Order: 1, RoutePattern: `{*url}`\r\n- `SettingsController.Default` \u2013 Order: 1, RoutePattern: `Settings/{action=Default}`\r\n- `SettingsController.Default` \u2013 Order: 2, RoutePattern: `Settings`\r\n- `SettingsController.Default` \u2013 Order: 3, RoutePattern: `Settings/Default`\r\n\r\nI was thinking that maybe this order was determining which candidate came first, so I moved the `DefaultController` declaration *after* the `SettingsController` (in a usual situation where each class is in its own type, the name would have to be changed since the file name order decides this). Sure enough, that moved the `DefaultController.Gone` endpoint to the end, but that didn\u2019t actually change the candidate order.\r\n\r\nSo I am a bit at loss now what else could determine the candidate order. I haven\u2019t digged deep enough into the matcher to tell.\r\n\r\nI do realize that the endpoint routing is known to be broken in certain situations in ASP.NET Core 2.2. And for what it\u2019s worth, this issue does not appear to exist in the current 3.0 preview (phew! \U0001f605). So it\u2019s maybe not worth to dig too deep into this, but I would still like to understand and see if we can\u2019t figure out a workaround (one that does not change the route templates).",investigate|area-mvc,rynowak,"This is a follow-up from [a Stack Overflow question](https://stackoverflow.com/q/55855405/216074), reduced to a minimum repro, so you don\u2019t actually have to go through the question there.\r\n\r\nLet\u2019s take the following route configuration on an otherwise empty ASP.NET Core 2.2 project:\r\n\r\n```c#\r\napp.UseMvc(routes =>\r\n{\r\n    routes.MapRoute(""SettingsRoute"", ""{controller}/{action=Default}"", null, new\r\n    {\r\n        controller = ""Settings""\r\n    });\r\n\r\n    routes.MapRoute(""NestedRoute"", ""Settings/{controller}/{action}"", null, new\r\n    {\r\n        controller = ""Categories""\r\n    });\r\n\r\n    routes.MapRoute(""FallbackRoute"", ""{*url}"", new\r\n    {\r\n        action = ""Gone"",\r\n        controller = ""Default""\r\n    });\r\n});\r\n```\r\n\r\nAlong with three very simple controllers:\r\n```c#\r\npublic class CategoriesController : Controller\r\n{\r\n    public IActionResult Add() => Content(""Category added"");\r\n}\r\n\r\npublic class DefaultController : Controller\r\n{\r\n    public IActionResult Gone() => Content(""Gone"");\r\n}\r\n\r\npublic class SettingsController : Controller\r\n{\r\n    public IActionResult Default() => Content(""Settings"");\r\n}\r\n```\r\n\r\nAs you can see, there are three route templates which should match the following routes. These work:\r\n\r\n- `/Settings/Default` \u2192 `SettingsController.Default`\r\n- `/Settings/Categories/Add` \u2192 `CategoriesController.Add`\r\n- `/Foo` \u2192 `DefaultController.Gone`\r\n\r\nHowever, since the *SettingsRoute* has a default action of `Default` specified, `/Settings` should also trigger the `SettingsController.Default` action. Instead, endpoint routing picks the *FallbackRoute* here and goes to `DefaultController.Gone`.\r\n\r\nIf you remove the *FallbackRoute* or the *NestedRoute*, the `/Settings` path does work again correctly, so it appears to be a side effect of these three route definitions.\r\n\r\nI have been debugging through the route matcher now to figure out why this happens and for some reason the [`DfaMatcher`](https://github.com/aspnet/AspNetCore/blob/v2.2.4/src/Http/Routing/src/Matching/DfaMatcher.cs#L84) finds two candidates for the `/Settings` path, in this order:\r\n\r\n- Endpoint: `DefaultController.Gone`, Score: 0\r\n- Endpoint: `SettingsController.Default`, Score: 1\r\n\r\nSince the matcher then iterates through these candidates and appears to pick the first one that matches the route, it decides to use the `DefaultController.Gone` route, although the `SettingsController.Default` one would be the better choice.\r\n\r\nDuring initialization, the [`MvcEndpointDataSource`](https://github.com/aspnet/AspNetCore/blob/v2.2.4/src/Mvc/Mvc.Core/src/Internal/MvcEndpointDataSource.cs#L108) calculates the following five endpoints:\r\n\r\n- `CategoriesController.Add` \u2013 Order 1, RoutePattern: `Settings/Categories/Add`\r\n- `DefaultController.Gone` \u2013 Order: 1, RoutePattern: `{*url}`\r\n- `SettingsController.Default` \u2013 Order: 1, RoutePattern: `Settings/{action=Default}`\r\n- `SettingsController.Default` \u2013 Order: 2, RoutePattern: `Settings`\r\n- `SettingsController.Default` \u2013 Order: 3, RoutePattern: `Settings/Default`\r\n\r\nI was thinking that maybe this order was determining which candidate came first, so I moved the `DefaultController` declaration *after* the `SettingsController` (in a usual situation where each class is in its own type, the name would have to be changed since the file name order decides this). Sure enough, that moved the `DefaultController.Gone` endpoint to the end, but that didn\u2019t actually change the candidate order.\r\n\r\nSo I am a bit at loss now what else could determine the candidate order. I haven\u2019t digged deep enough into the matcher to tell.\r\n\r\nI do realize that the endpoint routing is known to be broken in certain situations in ASP.NET Core 2.2. And for what it\u2019s worth, this issue does not appear to exist in the current 3.0 preview (phew! \U0001f605). So it\u2019s maybe not worth to dig too deep into this, but I would still like to understand and see if we can\u2019t figure out a workaround (one that does not change the route templates).","c#\r\napp.UseMvc(routes =>\r\n{\r\n    routes.MapRoute(""SettingsRoute"", ""{controller}/{action=Default}"", null, new\r\n    {\r\n        controller = ""Settings""\r\n    });\r\n\r\n    routes.MapRoute(""NestedRoute"", ""Settings/{controller}/{action}"", null, new\r\n    {\r\n        controller = ""Categories""\r\n    });\r\n\r\n    routes.MapRoute(""FallbackRoute"", ""{*url}"", new\r\n    {\r\n        action = ""Gone"",\r\n        controller = ""Default""\r\n    });\r\n});\r\n"
9637,".razor parsing forces code blocks, even in functions block### Describe the bug\r\nThe compiler does not allow ""single-statement control flow statements"" In the ""cshtml"" part of a .razor file. I understand that is required, but currently it also enforces this rule in the ""@functions"" block. My understanding was that in the @functions block any normal c# syntax can be used.\r\n\r\n### To Reproduce\r\n""dotnet new blazorserverside""\r\nEdit the ""components.razor"" file and replace the ""IncrementCount"" function with:\r\n\r\n\r\n\r\n### Expected behavior\r\nIt should not give a compile time syntax error\r\n",bug|Done|area-blazor,NTaylorMullen,"### Describe the bug\r\nThe compiler does not allow ""single-statement control flow statements"" In the ""cshtml"" part of a .razor file. I understand that is required, but currently it also enforces this rule in the ""@functions"" block. My understanding was that in the @functions block any normal c# syntax can be used.\r\n\r\n### To Reproduce\r\n""dotnet new blazorserverside""\r\nEdit the ""components.razor"" file and replace the ""IncrementCount"" function with:\r\n\r\n```csharp\r\n void IncrementCount()\r\n    {\r\n        if (true)\r\n        currentCount++;\r\n    }\r\n```\r\n\r\n### Expected behavior\r\nIt should not give a compile time syntax error\r\n",csharp\r\n void IncrementCount()\r\n    {\r\n        if (true)\r\n        currentCount++;\r\n    }\r\n
9609,"Blazor Generic-typed component with RenderFragment<int> failing at runtime### Describe the bug\r\n\r\nI have this Generic-typed Blazor component REP.RAZOR:\r\n\r\n\r\nWhen I use it from the parent like this:\r\n\r\n\r\nand the Testa class:\r\n\r\n\r\nAll compiles fine, but when running I get a runtime error:\r\n\r\nInvalidCastException: Unable to cast object of type 'Microsoft.AspNetCore.Components.RenderFragment`1[System.Object]' to type 'Microsoft.AspNetCore.Components.RenderFragment`1[System.Int32]'.\r\nMicrosoft.AspNetCore.Components.Reflection.MemberAssignment+PropertySetter<TTarget, TValue>.SetValue(object target, object value)\r\n\r\nI'm using the latest preview 4, with a Server Side Blazor project template.",bug|Done|area-blazor,ajaybhargavb,"### Describe the bug\r\n\r\nI have this Generic-typed Blazor component REP.RAZOR:\r\n```html\r\n@typeparam TItem\r\n\r\nTemplate1: @Template1(Item)\r\nTemplate2: @Template2(1)\r\n\r\n@functions\r\n{\r\n    [Parameter]\r\n    public RenderFragment<TItem> Template1 { get; set; }\r\n\r\n    [Parameter]\r\n    public RenderFragment<int> Template2 { get; set; }\r\n\r\n    [Parameter]\r\n    public TItem Item { get; set; }\r\n}\r\n```\r\n\r\nWhen I use it from the parent like this:\r\n\r\n```html\r\n<rep Item=""@q"">\r\n    <Template1 context=""generic"">\r\n        @generic.Name\r\n    </Template1>\r\n    <Template2 context=""anInt"">\r\n        Integer context: @anInt\r\n    </Template2>\r\n</rep>\r\n\r\n@functions\r\n{\r\n    Testa q = new Testa() { ID = 1, Name = ""TEST"" };\r\n}\r\n```\r\nand the Testa class:\r\n```html\r\npublic class Testa\r\n{\r\n        public string Name { get; set; }\r\n        public int ID { get; set; }\r\n}\r\n```\r\n\r\nAll compiles fine, but when running I get a runtime error:\r\n\r\nInvalidCastException: Unable to cast object of type 'Microsoft.AspNetCore.Components.RenderFragment`1[System.Object]' to type 'Microsoft.AspNetCore.Components.RenderFragment`1[System.Int32]'.\r\nMicrosoft.AspNetCore.Components.Reflection.MemberAssignment+PropertySetter<TTarget, TValue>.SetValue(object target, object value)\r\n\r\nI'm using the latest preview 4, with a Server Side Blazor project template.",html\r\n@typeparam TItem\r\n\r\nTemplate1: @Template1(Item)\r\nTemplate2: @Template2(1)\r\n\r\n@functions\r\n{\r\n    [Parameter]\r\n    public RenderFragment<TItem> Template1 { get; set; }\r\n\r\n    [Parameter]\r\n    public RenderFragment<int> Template2 { get; set; }\r\n\r\n    [Parameter]\r\n    public TItem Item { get; set; }\r\n}\r\n
9507,Lazy create StaticFileMiddleware statemachine* Lazy create StaticFileMiddleware statemachine\r\n\r\n@rynowak @JamesNK @Tratcher question...\r\n\r\n`dotnet new mvc` etc adds `app.UseStaticFiles();` prior to `app.UseRouting()` and `app.UseEndpoints()`  (also before auth) is this desirable?\r\n\r\nhttps://github.com/aspnet/AspNetCore/blob/8b536b08ca76126e58f662b7f500bb191116f2bd/src/ProjectTemplates/Web.ProjectTemplates/content/StarterWeb-CSharp/Startup.cs#L157-L174\r\n\r\ne.g. it outputs\r\n\r\nFor the call chain\r\n\r\n![image](https://user-images.githubusercontent.com/1142958/56378573-64fa6200-6205-11e9-86a4-9b015301da0b.png)\r\n,area-middleware,Tratcher,"* Lazy create StaticFileMiddleware statemachine\r\n\r\n@rynowak @JamesNK @Tratcher question...\r\n\r\n`dotnet new mvc` etc adds `app.UseStaticFiles();` prior to `app.UseRouting()` and `app.UseEndpoints()`  (also before auth) is this desirable?\r\n\r\nhttps://github.com/aspnet/AspNetCore/blob/8b536b08ca76126e58f662b7f500bb191116f2bd/src/ProjectTemplates/Web.ProjectTemplates/content/StarterWeb-CSharp/Startup.cs#L157-L174\r\n\r\ne.g. it outputs\r\n```csharp\r\napp.UseStaticFiles();\r\n\r\napp.UseCookiePolicy();\r\n\r\napp.UseRouting();\r\n\r\napp.UseAuthorization();\r\n\r\napp.UseEndpoints(endpoints =>\r\n{\r\n    endpoints.MapControllerRoute(\r\n        name: ""default"",\r\n        pattern: ""{controller=Home}/{action=Index}/{id?}"");\r\n    endpoints.MapRazorPages();\r\n});\r\n```\r\nFor the call chain\r\n\r\n![image](https://user-images.githubusercontent.com/1142958/56378573-64fa6200-6205-11e9-86a4-9b015301da0b.png)\r\n","csharp\r\napp.UseStaticFiles();\r\n\r\napp.UseCookiePolicy();\r\n\r\napp.UseRouting();\r\n\r\napp.UseAuthorization();\r\n\r\napp.UseEndpoints(endpoints =>\r\n{\r\n    endpoints.MapControllerRoute(\r\n        name: ""default"",\r\n        pattern: ""{controller=Home}/{action=Index}/{id?}"");\r\n    endpoints.MapRazorPages();\r\n});\r\n"
9468,DynamicPageEndpointMatcherPolicy has incorrect assertion when MapFallback is usedStartup code:\r\n\r\n\r\n\r\nHere's the result:\r\n\r\n![image](https://user-images.githubusercontent.com/174281/56313866-79a50000-6108-11e9-9444-742776e2cdd0.png)\r\n,bug|Done|area-mvc,rynowak,"Startup code:\r\n\r\n```C#\r\napp.UseEndpoints(endpoints =>\r\n{\r\n    endpoints.MapRazorPages();\r\n    endpoints.MapControllers();\r\n    endpoints.MapBlazorHub();\r\n    endpoints.MapFallbackToPage(""/Index"");\r\n});\r\n```\r\n\r\nHere's the result:\r\n\r\n![image](https://user-images.githubusercontent.com/174281/56313866-79a50000-6108-11e9-9444-742776e2cdd0.png)\r\n","C#\r\napp.UseEndpoints(endpoints =>\r\n{\r\n    endpoints.MapRazorPages();\r\n    endpoints.MapControllers();\r\n    endpoints.MapBlazorHub();\r\n    endpoints.MapFallbackToPage(""/Index"");\r\n});\r\n"
9365,"[Blazor] Scoped service multiple initializations in client side blazor### Describe the bug\r\nConsider the following scenario in a blazor client-side app:\r\n\r\n\r\n\r\nMyComponent.cshtml\r\n```xml\r\n@inject AppState state\r\n<h1>Component that injects AppState and contains ComponentThatUsesScopedService</h1>\r\n<ComponentThatUsesScopedService />\r\n```\r\n\r\nComponentThatUsesScopedService.cshtml\r\n```xml\r\n@inject ScopedService service\r\n<h1>ComponentWithScopedService</h1>\r\n```\r\n\r\n### Expected behavior\r\nAccording to [documentation](https://docs.microsoft.com/en-us/aspnet/core/blazor/dependency-injection?view=aspnetcore-3.0)\r\n\r\n```\r\nClient-side Blazor doesn't currently have the concept of DI scopes. Scoped behaves like \r\nSingleton. However, ASP.NET Core Razor Components support the Scoped lifetime. In a Razor \r\nComponent, a scoped service registration is scoped to the connection. For this reason, using \r\nscoped services is preferred for services that should be scoped to the current user, even if \r\nthe current intent is to run client-side in the browser.\r\n```\r\nThe `ScopedService` class should behave like a singleton and be created only once.\r\n\r\n### Actual behavior\r\n\r\nThe `ScopedService` class is created more than once:\r\n```\r\nWASM: Scoped Service created\r\nWASM: Scoped Service created\r\n```\r\n\r\nIs this behaviour intended ? If so then this is a problem for library authors that want to support both Blazor client-side and server-side and need to register services ""per-connection"" in the DI. \r\n\r\nIf the consumer of your library in a blazor client-side app uses singleton registration and depends on your scoped service, then this may lead to wierd bugs.",bug|Done|area-blazor|feature-blazor-wasm,pranavkm,"### Describe the bug\r\nConsider the following scenario in a blazor client-side app:\r\n\r\n```cs\r\npublic class ScopedService\r\n{\r\n    public ScopedService()\r\n    {\r\n        Console.WriteLine(""Scoped Service created"");\r\n    }\r\n}\r\n\r\npublic class AppState\r\n{\r\n    private readonly ScopedService scopedService;\r\n\r\n    public AppState(ScopedService scopedService)\r\n    {\r\n        this.scopedService = scopedService;\r\n    }\r\n}\r\n\r\npublic class Startup\r\n{\r\n    public void ConfigureServices(IServiceCollection services)\r\n    {\r\n        services.AddSingleton<AppState>();\r\n        services.AddScoped<ScopedService>();\r\n    }\r\n    //...\r\n}\r\n```\r\n\r\nMyComponent.cshtml\r\n```xml\r\n@inject AppState state\r\n<h1>Component that injects AppState and contains ComponentThatUsesScopedService</h1>\r\n<ComponentThatUsesScopedService />\r\n```\r\n\r\nComponentThatUsesScopedService.cshtml\r\n```xml\r\n@inject ScopedService service\r\n<h1>ComponentWithScopedService</h1>\r\n```\r\n\r\n### Expected behavior\r\nAccording to [documentation](https://docs.microsoft.com/en-us/aspnet/core/blazor/dependency-injection?view=aspnetcore-3.0)\r\n\r\n```\r\nClient-side Blazor doesn't currently have the concept of DI scopes. Scoped behaves like \r\nSingleton. However, ASP.NET Core Razor Components support the Scoped lifetime. In a Razor \r\nComponent, a scoped service registration is scoped to the connection. For this reason, using \r\nscoped services is preferred for services that should be scoped to the current user, even if \r\nthe current intent is to run client-side in the browser.\r\n```\r\nThe `ScopedService` class should behave like a singleton and be created only once.\r\n\r\n### Actual behavior\r\n\r\nThe `ScopedService` class is created more than once:\r\n```\r\nWASM: Scoped Service created\r\nWASM: Scoped Service created\r\n```\r\n\r\nIs this behaviour intended ? If so then this is a problem for library authors that want to support both Blazor client-side and server-side and need to register services ""per-connection"" in the DI. \r\n\r\nIf the consumer of your library in a blazor client-side app uses singleton registration and depends on your scoped service, then this may lead to wierd bugs.","cs\r\npublic class ScopedService\r\n{\r\n    public ScopedService()\r\n    {\r\n        Console.WriteLine(""Scoped Service created"");\r\n    }\r\n}\r\n\r\npublic class AppState\r\n{\r\n    private readonly ScopedService scopedService;\r\n\r\n    public AppState(ScopedService scopedService)\r\n    {\r\n        this.scopedService = scopedService;\r\n    }\r\n}\r\n\r\npublic class Startup\r\n{\r\n    public void ConfigureServices(IServiceCollection services)\r\n    {\r\n        services.AddSingleton<AppState>();\r\n        services.AddScoped<ScopedService>();\r\n    }\r\n    //...\r\n}\r\n"
9322,asp core 3.0  API Cant Return more than 120 item ### Describe the bug\r\nOn Blazor ( Asp.net Core hosted ) default  Template Cant produce more than 120 item  \r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Create new Blazor ( Asp.net Core hosted ) \r\n2. Go to Blazor.Server Project => controller >SampleDataController.cs\r\n3. replace WeatherForecasts Action With \r\n\r\n4. On browser console Failed to load resource: the server responded with a status of 500 (Internal Server Error)\r\n![image](https://user-images.githubusercontent.com/6240222/56030466-32d89400-5d1d-11e9-8221-54a3d8e25856.png)\r\nif you go to url/api/SampleData/WeatherForecasts  \r\n![image](https://user-images.githubusercontent.com/6240222/56030546-64515f80-5d1d-11e9-8232-e7735add6722.png)\r\n\r\n\r\n,:heavy_check_mark: Resolution: Duplicate|area-blazor,pranavkm,"### Describe the bug\r\nOn Blazor ( Asp.net Core hosted ) default  Template Cant produce more than 120 item  \r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Create new Blazor ( Asp.net Core hosted ) \r\n2. Go to Blazor.Server Project => controller >SampleDataController.cs\r\n3. replace WeatherForecasts Action With \r\n```C#\r\n public IEnumerable<WeatherForecast> WeatherForecasts()\r\n        {\r\n            var rng = new Random();\r\n            return Enumerable.Range(1, **500**).Select(index => new WeatherForecast\r\n            {\r\n                Date = DateTime.Now.AddDays(index),\r\n                TemperatureC = rng.Next(-20, 55),\r\n                Summary = Summaries[rng.Next(Summaries.Length)]\r\n            });\r\n        }\r\n```\r\n4. On browser console Failed to load resource: the server responded with a status of 500 (Internal Server Error)\r\n![image](https://user-images.githubusercontent.com/6240222/56030466-32d89400-5d1d-11e9-8221-54a3d8e25856.png)\r\nif you go to url/api/SampleData/WeatherForecasts  \r\n![image](https://user-images.githubusercontent.com/6240222/56030546-64515f80-5d1d-11e9-8232-e7735add6722.png)\r\n\r\n\r\n","C#\r\n public IEnumerable<WeatherForecast> WeatherForecasts()\r\n        {\r\n            var rng = new Random();\r\n            return Enumerable.Range(1, **500**).Select(index => new WeatherForecast\r\n            {\r\n                Date = DateTime.Now.AddDays(index),\r\n                TemperatureC = rng.Next(-20, 55),\r\n                Summary = Summaries[rng.Next(Summaries.Length)]\r\n            });\r\n        }\r\n"
9316,"AddServerSizeBlazor should return a builderThis will make it more seamless to wire up scale out providers and other potential SignalR options. Today to wire up the service in preview 4 it looks like this:\r\n\r\n\r\n\r\nAlternatively, if we don't want to expose the ISignalRBuilder then a more targeted builder might be useful if we want to add support for an `AddAzureSignalR` extension method anyways.\r\n\r\ncc @rynowak @javiercn @SteveSandersonMS @danroth27 @bradygaster ",Done|enhancement|area-blazor,rynowak,"This will make it more seamless to wire up scale out providers and other potential SignalR options. Today to wire up the service in preview 4 it looks like this:\r\n\r\n```C#\r\nservices.AddServerSideBlazor().AddSignalR().AddAzureSignalR();\r\n```\r\n\r\nAlternatively, if we don't want to expose the ISignalRBuilder then a more targeted builder might be useful if we want to add support for an `AddAzureSignalR` extension method anyways.\r\n\r\ncc @rynowak @javiercn @SteveSandersonMS @danroth27 @bradygaster ",C#\r\nservices.AddServerSideBlazor().AddSignalR().AddAzureSignalR();\r\n
9255,"Consider making SignInAsync throw for an unauthenticated identityYeah, I'll admit it. \U0001f622 I burned 1.5 hours trying to use this API and not knowing why it didn't work.\r\n\r\nThe difference here is between:\r\n\r\n\r\n\r\n\r\n\r\nThe shorter overload of `ClaimsIdentity` does the wrong thing for most cases. I'm also not sure if we should be validating whether scheme and the authentication scheme passed to `SignInAsync` should match.\r\n\r\n----\r\n\r\nSince there are use cases for `SignInAsync` with an unauthenticated identity, consider adding more parameters, or using a different method name for that case. Both of these can communicate that you're doing something non-default. \r\n\r\n/cc @HaoK @blowdart \r\n",Done|breaking-change|area-auth,HaoK,"Yeah, I'll admit it. \U0001f622 I burned 1.5 hours trying to use this API and not knowing why it didn't work.\r\n\r\nThe difference here is between:\r\n\r\n```C#\r\nvar identity = new ClaimsIdentity(new[] { new Claim(""ClaimA"", ""Value"") });\r\nawait HttpContext.SignInAsync(scheme: null, new ClaimsPrincipal(identity));\r\n```\r\n\r\n```C#\r\nvar identity = new ClaimsIdentity(new[] { new Claim(""ClaimA"", ""Value"") }, CookieAuthenticationDefaults.AuthenticationScheme);\r\nawait HttpContext.SignInAsync(scheme: null, new ClaimsPrincipal(identity));\r\n```\r\n\r\nThe shorter overload of `ClaimsIdentity` does the wrong thing for most cases. I'm also not sure if we should be validating whether scheme and the authentication scheme passed to `SignInAsync` should match.\r\n\r\n----\r\n\r\nSince there are use cases for `SignInAsync` with an unauthenticated identity, consider adding more parameters, or using a different method name for that case. Both of these can communicate that you're doing something non-default. \r\n\r\n/cc @HaoK @blowdart \r\n","C#\r\nvar identity = new ClaimsIdentity(new[] { new Claim(""ClaimA"", ""Value"") });\r\nawait HttpContext.SignInAsync(scheme: null, new ClaimsPrincipal(identity));\r\n"
9226,Update SampleDataController in blazorhosted template to use standard ApiController conventionsThe `SampleDataController` in the blazorhosted template doesn't follow our latest ApiController conventions.\r\n\r\nCurrent code:\r\n\r\n\r\n\r\nExpected code:\r\n\r\n\r\n\r\nWe should also update the routing setup in the Server project to call `MapControllers` instead of `MapDefaultControllerRoute` and call `AddControllers` instead of `AddMvc`.,Done|enhancement|area-blazor,ryanbrandenburg,"The `SampleDataController` in the blazorhosted template doesn't follow our latest ApiController conventions.\r\n\r\nCurrent code:\r\n\r\n```csharp\r\n    [Route(""api/[controller]"")]\r\n    public class SampleDataController : Controller\r\n    {\r\n        private static string[] Summaries = new[]\r\n        {\r\n            ""Freezing"", ""Bracing"", ""Chilly"", ""Cool"", ""Mild"", ""Warm"", ""Balmy"", ""Hot"", ""Sweltering"", ""Scorching""\r\n        };\r\n\r\n        [HttpGet(""[action]"")]\r\n        public IEnumerable<WeatherForecast> WeatherForecasts()\r\n        {\r\n            var rng = new Random();\r\n            return Enumerable.Range(1, 5).Select(index => new WeatherForecast\r\n            {\r\n                Date = DateTime.Now.AddDays(index),\r\n                TemperatureC = rng.Next(-20, 55),\r\n                Summary = Summaries[rng.Next(Summaries.Length)]\r\n            });\r\n        }\r\n    }\r\n```\r\n\r\nExpected code:\r\n\r\n```csharp\r\n    [Route(""api/SampleData/[controller]"")]\r\n    [ApiController]\r\n    public class WeatherForecastsController : ControllerBase\r\n    {\r\n        private static string[] Summaries = new[]\r\n        {\r\n            ""Freezing"", ""Bracing"", ""Chilly"", ""Cool"", ""Mild"", ""Warm"", ""Balmy"", ""Hot"", ""Sweltering"", ""Scorching""\r\n        };\r\n\r\n        [HttpGet]\r\n        public ActionResult<IEnumerable<WeatherForecast>> GetWeatherForecasts()\r\n        {\r\n            var rng = new Random();\r\n            return Enumerable.Range(1, 5).Select(index => new WeatherForecast\r\n            {\r\n                Date = DateTime.Now.AddDays(index),\r\n                TemperatureC = rng.Next(-20, 55),\r\n                Summary = Summaries[rng.Next(Summaries.Length)]\r\n            }).ToList();\r\n        }\r\n    }\r\n```\r\n\r\nWe should also update the routing setup in the Server project to call `MapControllers` instead of `MapDefaultControllerRoute` and call `AddControllers` instead of `AddMvc`.","csharp\r\n    [Route(""api/[controller]"")]\r\n    public class SampleDataController : Controller\r\n    {\r\n        private static string[] Summaries = new[]\r\n        {\r\n            ""Freezing"", ""Bracing"", ""Chilly"", ""Cool"", ""Mild"", ""Warm"", ""Balmy"", ""Hot"", ""Sweltering"", ""Scorching""\r\n        };\r\n\r\n        [HttpGet(""[action]"")]\r\n        public IEnumerable<WeatherForecast> WeatherForecasts()\r\n        {\r\n            var rng = new Random();\r\n            return Enumerable.Range(1, 5).Select(index => new WeatherForecast\r\n            {\r\n                Date = DateTime.Now.AddDays(index),\r\n                TemperatureC = rng.Next(-20, 55),\r\n                Summary = Summaries[rng.Next(Summaries.Length)]\r\n            });\r\n        }\r\n    }\r\n"
9195,"Endpoint routing selecting incorrect controller/action after 2.0 -> 2.2 upgrade### Describe the bug\r\nI ran into a scenario while migrating an app from 2.0 to 2.2. Basically a route that used to select a controller under an area, now is selecting a controller in the root `controllers` folder.\r\n\r\nHere is a repro:\r\n\r\n\r\n\r\nBefore using Endpoing Routing the url `/accounts/forgot-username` would match the ""accountsCatchAll"" and it would execute the `HomeController` under the ""Accounts"" area. After switching to endpoint routing the controller being picked up is the `HomeController` in the root controller folder (non-area controllers folder).\r\n\r\nThe issue goes away when I disable endpoint routing via: \r\n\r\n\r\n\r\ncc: @JamesNK",investigate|area-mvc,JamesNK,"### Describe the bug\r\nI ran into a scenario while migrating an app from 2.0 to 2.2. Basically a route that used to select a controller under an area, now is selecting a controller in the root `controllers` folder.\r\n\r\nHere is a repro:\r\n\r\n```cs\r\nusing Microsoft.AspNetCore.Builder;\r\nusing Microsoft.AspNetCore.Hosting;\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing Microsoft.Extensions.Configuration;\r\nusing Microsoft.Extensions.DependencyInjection;\r\n\r\nnamespace WebApplication1\r\n{\r\n    public class Startup\r\n    {\r\n        public Startup(IConfiguration configuration)\r\n        {\r\n            Configuration = configuration;\r\n        }\r\n\r\n        public IConfiguration Configuration { get; }\r\n\r\n        // This method gets called by the runtime. Use this method to add services to the container.\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_2);\r\n        }\r\n\r\n        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.\r\n        public void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n        {\r\n            app.UseMvc(routes =>\r\n            {\r\n                routes.MapRoute(\r\n                    name: ""areaRoute"",\r\n                    template: ""{area:exists}/{controller=Home}/{action=Index}"");\r\n\r\n                routes.MapRoute(\r\n                    name: ""accountsCatchAll"",\r\n                    template: ""Accounts/{*path}"",\r\n                    defaults: new { area = ""Accounts"", controller = ""Home"", action = ""Index"" });\r\n\r\n                routes.MapRoute(\r\n                    name: ""default"",\r\n                    template: ""{controller=Home}/{action=Index}/{id?}"");\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n//Imagine this is in /WebApplication1/Controllers/HomeController.cs\r\nnamespace WebApplication1.Controllers\r\n{\r\n    public class HomeController : Controller\r\n    {\r\n        public IActionResult Index() => Content(""Home/Index"");\r\n    }\r\n}\r\n\r\nnamespace WebApplication1.Areas.Accounts.Controllers\r\n{\r\n    //This is in /WebApplication1/Areas/Accounts/Controllers/HomeController.cs\r\n    [Area(""Accounts"")]\r\n    public class HomeController : Controller\r\n    {\r\n        public IActionResult Index() => Content(""Accounts/Home/Index"");\r\n    }\r\n\r\n    //This is in /WebApplication1/Areas/Accounts/Controllers/OtherController.cs\r\n    [Area(""Accounts"")]\r\n    public class OtherController : Controller\r\n    {\r\n        public IActionResult Index() => Content(""Accounts/Other/Index"");\r\n    }\r\n}\r\n\r\n\r\n```\r\n\r\nBefore using Endpoing Routing the url `/accounts/forgot-username` would match the ""accountsCatchAll"" and it would execute the `HomeController` under the ""Accounts"" area. After switching to endpoint routing the controller being picked up is the `HomeController` in the root controller folder (non-area controllers folder).\r\n\r\nThe issue goes away when I disable endpoint routing via: \r\n\r\n```cs\r\nservices.AddMvc(options =>options.EnableEndpointRouting = false);\r\n```\r\n\r\ncc: @JamesNK","cs\r\nusing Microsoft.AspNetCore.Builder;\r\nusing Microsoft.AspNetCore.Hosting;\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing Microsoft.Extensions.Configuration;\r\nusing Microsoft.Extensions.DependencyInjection;\r\n\r\nnamespace WebApplication1\r\n{\r\n    public class Startup\r\n    {\r\n        public Startup(IConfiguration configuration)\r\n        {\r\n            Configuration = configuration;\r\n        }\r\n\r\n        public IConfiguration Configuration { get; }\r\n\r\n        // This method gets called by the runtime. Use this method to add services to the container.\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_2);\r\n        }\r\n\r\n        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.\r\n        public void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n        {\r\n            app.UseMvc(routes =>\r\n            {\r\n                routes.MapRoute(\r\n                    name: ""areaRoute"",\r\n                    template: ""{area:exists}/{controller=Home}/{action=Index}"");\r\n\r\n                routes.MapRoute(\r\n                    name: ""accountsCatchAll"",\r\n                    template: ""Accounts/{*path}"",\r\n                    defaults: new { area = ""Accounts"", controller = ""Home"", action = ""Index"" });\r\n\r\n                routes.MapRoute(\r\n                    name: ""default"",\r\n                    template: ""{controller=Home}/{action=Index}/{id?}"");\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n//Imagine this is in /WebApplication1/Controllers/HomeController.cs\r\nnamespace WebApplication1.Controllers\r\n{\r\n    public class HomeController : Controller\r\n    {\r\n        public IActionResult Index() => Content(""Home/Index"");\r\n    }\r\n}\r\n\r\nnamespace WebApplication1.Areas.Accounts.Controllers\r\n{\r\n    //This is in /WebApplication1/Areas/Accounts/Controllers/HomeController.cs\r\n    [Area(""Accounts"")]\r\n    public class HomeController : Controller\r\n    {\r\n        public IActionResult Index() => Content(""Accounts/Home/Index"");\r\n    }\r\n\r\n    //This is in /WebApplication1/Areas/Accounts/Controllers/OtherController.cs\r\n    [Area(""Accounts"")]\r\n    public class OtherController : Controller\r\n    {\r\n        public IActionResult Index() => Content(""Accounts/Other/Index"");\r\n    }\r\n}\r\n\r\n\r\n"
9114,"Can no longer use templated parameters on components in a library projectAgain, maybe this will get fixed by the ongoing SDK work, but raising this to track it anyway. Apologies if I'm being excessively fussy.\r\n\r\nI've not been successful in upgrading my Material Design components library to work with the preview 4 code due to the following.\r\n\r\n### Repro\r\n\r\n* Using .NET Core 3.0.100-preview4-011074 and Microsoft.AspNetCore.Blazor.Templates.0.9.0-preview4-19204-04, create a new Blazor (client-side) standalone and Blazor library alongside each other:\r\n    * `dotnet new blazor -o MyStandalone`\r\n    * `dotnet new blazorlib -o MyBlazorLib`\r\n* Apply workarounds to the Blazor standalone app so you can run it\r\n    * Add `<RazorLangVersion>3.0</RazorLangVersion>` and `<GenerateRazorAssemblyInfo>false</GenerateRazorAssemblyInfo>` to its csproj\r\n    * Check it builds and runs\r\n* Apply workarounds to the Blazor library project so you can build it\r\n    * Add `<RazorLangVersion>3.0</RazorLangVersion>` and `<GenerateRazorAssemblyInfo>false</GenerateRazorAssemblyInfo>` to its csproj\r\n    * Check it builds\r\n* Add a project reference from `MyStandalone` to `MyBlazorLib`\r\n* In `MyStandalone`'s root `_Imports.razor`, add `@using MyBlazorLib`\r\n* In `MyStandalone`'s `Index.razor`, add a `<Component1 />`\r\n    * See it runs and renders the component from the library correctly\r\n* In `Component1.razor`, try to add two parameters:\r\n\r\n\r\n\r\n* **Problem 1:** For some reason, `ParameterAttribute` and `RenderFragment` aren't in scope, even though (AFAIK) the compiler is meant to add `@using Microsoft.AspNetCore.Components` implicitly\r\n    * Workaround: Explicitly add `@using Microsoft.AspNetCore.Components` to the top of `Component1.razor`\r\n* Now try to pass values for these parameters. Back in the other project's `Index.razor`, see that it is aware that both parameters exist:\r\n\r\n![image](https://user-images.githubusercontent.com/1101362/55638377-eb06b980-57be-11e9-92fd-4497e7d4b685.png)\r\n\r\n* You can successfully pass a value for `SomeString`. See it lights up correctly:\r\n\r\n![image](https://user-images.githubusercontent.com/1101362/55638703-ba734f80-57bf-11e9-8278-3d0e94567d6b.png)\r\n\r\n* **Problem 2:** You *cannot* pass a value for `SomeDateThing`. Intellisense doesn't show it as an option, and it doesn't light up in purple:\r\n\r\n![image](https://user-images.githubusercontent.com/1101362/55638433-17bad100-57bf-11e9-8ae8-14178a59f987.png)\r\n\r\nIt's not just a VS thing. It's really broken at compile-time. If you try to reference the `@context` value (since this is a parameterised template), the compiler doesn't know what you're talking about. The build will fail.\r\n\r\n![image](https://user-images.githubusercontent.com/1101362/55638503-4042cb00-57bf-11e9-976f-6153c9d8da19.png)\r\n\r\n* **Problem 3** The error list shows completely different errors. The build output only gives one error (`The name 'context' does not exist in the current context`), but VS shows:\r\n\r\n![image](https://user-images.githubusercontent.com/1101362/55638600-7bdd9500-57bf-11e9-9a53-a230544d0180.png)\r\n\r\n@rynowak @pranavkm ",bug|Done|area-blazor,pranavkm|ajaybhargavb,"Again, maybe this will get fixed by the ongoing SDK work, but raising this to track it anyway. Apologies if I'm being excessively fussy.\r\n\r\nI've not been successful in upgrading my Material Design components library to work with the preview 4 code due to the following.\r\n\r\n### Repro\r\n\r\n* Using .NET Core 3.0.100-preview4-011074 and Microsoft.AspNetCore.Blazor.Templates.0.9.0-preview4-19204-04, create a new Blazor (client-side) standalone and Blazor library alongside each other:\r\n    * `dotnet new blazor -o MyStandalone`\r\n    * `dotnet new blazorlib -o MyBlazorLib`\r\n* Apply workarounds to the Blazor standalone app so you can run it\r\n    * Add `<RazorLangVersion>3.0</RazorLangVersion>` and `<GenerateRazorAssemblyInfo>false</GenerateRazorAssemblyInfo>` to its csproj\r\n    * Check it builds and runs\r\n* Apply workarounds to the Blazor library project so you can build it\r\n    * Add `<RazorLangVersion>3.0</RazorLangVersion>` and `<GenerateRazorAssemblyInfo>false</GenerateRazorAssemblyInfo>` to its csproj\r\n    * Check it builds\r\n* Add a project reference from `MyStandalone` to `MyBlazorLib`\r\n* In `MyStandalone`'s root `_Imports.razor`, add `@using MyBlazorLib`\r\n* In `MyStandalone`'s `Index.razor`, add a `<Component1 />`\r\n    * See it runs and renders the component from the library correctly\r\n* In `Component1.razor`, try to add two parameters:\r\n\r\n```cshtml\r\n@functions {\r\n    [Parameter] string SomeString { get; set; }\r\n    [Parameter] RenderFragment<DateTime> SomeDateThing { get; set; }\r\n}\r\n```\r\n\r\n* **Problem 1:** For some reason, `ParameterAttribute` and `RenderFragment` aren't in scope, even though (AFAIK) the compiler is meant to add `@using Microsoft.AspNetCore.Components` implicitly\r\n    * Workaround: Explicitly add `@using Microsoft.AspNetCore.Components` to the top of `Component1.razor`\r\n* Now try to pass values for these parameters. Back in the other project's `Index.razor`, see that it is aware that both parameters exist:\r\n\r\n![image](https://user-images.githubusercontent.com/1101362/55638377-eb06b980-57be-11e9-92fd-4497e7d4b685.png)\r\n\r\n* You can successfully pass a value for `SomeString`. See it lights up correctly:\r\n\r\n![image](https://user-images.githubusercontent.com/1101362/55638703-ba734f80-57bf-11e9-8278-3d0e94567d6b.png)\r\n\r\n* **Problem 2:** You *cannot* pass a value for `SomeDateThing`. Intellisense doesn't show it as an option, and it doesn't light up in purple:\r\n\r\n![image](https://user-images.githubusercontent.com/1101362/55638433-17bad100-57bf-11e9-8ae8-14178a59f987.png)\r\n\r\nIt's not just a VS thing. It's really broken at compile-time. If you try to reference the `@context` value (since this is a parameterised template), the compiler doesn't know what you're talking about. The build will fail.\r\n\r\n![image](https://user-images.githubusercontent.com/1101362/55638503-4042cb00-57bf-11e9-976f-6153c9d8da19.png)\r\n\r\n* **Problem 3** The error list shows completely different errors. The build output only gives one error (`The name 'context' does not exist in the current context`), but VS shows:\r\n\r\n![image](https://user-images.githubusercontent.com/1101362/55638600-7bdd9500-57bf-11e9-9a53-a230544d0180.png)\r\n\r\n@rynowak @pranavkm ",cshtml\r\n@functions {\r\n    [Parameter] string SomeString { get; set; }\r\n    [Parameter] RenderFragment<DateTime> SomeDateThing { get; set; }\r\n}\r\n
9061,"Supporting calling non-generic instance methods on generic types ### Describe the bug\r\nI have a generic component wich need some Js interaction. My component is an autocomplete wich listen on the keypress event to launch research. Whe  i try invoke c# method from Js, I have this following Js error \r\n""Error: System.InvalidOperationException: Late bound operations cannot be performed on types or methods for which ContainsGenericParameters is true.\r\n""\r\n### To Reproduce\r\n\r\n#### create a generic component, which contain an input type text \r\n\r\n```razor\r\n@typeparam TItem \r\n@inherits AutoCompleteViewModel<TItem>\r\n<input type=""text"" id=""@Id"" class=""form-control"" value=""@Value""> `\r\n```\r\n\r\n#### register js on render\r\n\r\n\r\n```js\r\nfunction listenAutoComplete(id, control) {\r\n    $(""#"" + id).keyup(function () {\r\n        var value = $(this).val();\r\n        control.invokeMethodAsync('SynchroniseValue', value);\r\n    });\r\n}\r\n```\r\n\r\n### Expected behavior\r\nHave a way to call C# method without error \r\n\r\n### Additional context\r\nMy first idea was to use the key-* event of razor, but i was unable to have a satisfaying behavior with ths events (unable to retrieve the current value of my input, binding seem only fire when control lost focus), so i decided to switch on js.\r\nIf you have another solution, i take it ;-)\r\n",bug|Done|area-blazor|component ecosystem,pranavkm,"### Describe the bug\r\nI have a generic component wich need some Js interaction. My component is an autocomplete wich listen on the keypress event to launch research. Whe  i try invoke c# method from Js, I have this following Js error \r\n""Error: System.InvalidOperationException: Late bound operations cannot be performed on types or methods for which ContainsGenericParameters is true.\r\n""\r\n### To Reproduce\r\n\r\n#### create a generic component, which contain an input type text \r\n\r\n```razor\r\n@typeparam TItem \r\n@inherits AutoCompleteViewModel<TItem>\r\n<input type=""text"" id=""@Id"" class=""form-control"" value=""@Value""> `\r\n```\r\n\r\n#### register js on render\r\n```csharp\r\n protected override async Task OnAfterRenderAsync()\r\n        {\r\n            this.JsRuntime.InvokeAsync<object>(""listenAutoComplete"", this.Id, new DotNetObjectRef(this));\r\n            await base.OnAfterRenderAsync();\r\n        }\r\n\r\n[JSInvokable]\r\n        public void SynchroniseValue(string value)\r\n        {\r\n            if(this.Value != value)\r\n            {\r\n                this.Value = value;\r\n                this.LaunchResearch();\r\n            }\r\n        }\r\n```\r\n\r\n```js\r\nfunction listenAutoComplete(id, control) {\r\n    $(""#"" + id).keyup(function () {\r\n        var value = $(this).val();\r\n        control.invokeMethodAsync('SynchroniseValue', value);\r\n    });\r\n}\r\n```\r\n\r\n### Expected behavior\r\nHave a way to call C# method without error \r\n\r\n### Additional context\r\nMy first idea was to use the key-* event of razor, but i was unable to have a satisfaying behavior with ths events (unable to retrieve the current value of my input, binding seem only fire when control lost focus), so i decided to switch on js.\r\nIf you have another solution, i take it ;-)\r\n","csharp\r\n protected override async Task OnAfterRenderAsync()\r\n        {\r\n            this.JsRuntime.InvokeAsync<object>(""listenAutoComplete"", this.Id, new DotNetObjectRef(this));\r\n            await base.OnAfterRenderAsync();\r\n        }\r\n\r\n[JSInvokable]\r\n        public void SynchroniseValue(string value)\r\n        {\r\n            if(this.Value != value)\r\n            {\r\n                this.Value = value;\r\n                this.LaunchResearch();\r\n            }\r\n        }\r\n"
9053,Template grammar issue in comment for auth optionsHere:\r\n\r\nhttps://github.com/aspnet/AspNetCore/blob/master/src/ProjectTemplates/Web.ProjectTemplates/content/StarterWeb-CSharp/Startup.cs#L107\r\n\r\n\r\n\r\nShould probably be:\r\n\r\n\r\n,Done|task|area-mvc,mkArtakMSFT,"Here:\r\n\r\nhttps://github.com/aspnet/AspNetCore/blob/master/src/ProjectTemplates/Web.ProjectTemplates/content/StarterWeb-CSharp/Startup.cs#L107\r\n\r\n```c#\r\n                    // If your application needs to do authenticate single users, add your user validation below.\r\n```\r\n\r\nShould probably be:\r\n\r\n```c#\r\n                    // If your application needs to authenticate single users, add your user validation below.\r\n```\r\n","c#\r\n                    // If your application needs to do authenticate single users, add your user validation below.\r\n"
9041,"Endpoint routing should complain if you do not have middleware configuredAs part of #8387, we are going to make MVC rely on the Auth and Cors middlewares to perform work rather than rely on filters when endpoint routing is enabled. Doing this is fairly straightforward, we need to ensure that the right endpoint metadata is available, and the middleware is configured.\r\n\r\nA fall-out of this choice is that we need to guarantee that the auth or cors middleware was configured in the request pipeline failing which the presence of these attributes would have done nothing. \r\n\r\nOne design that seems promising for this is for `EndpointRoutingMiddleware` to complain if the auth or cors middleware isn't configured. Psuedo-code:\r\n\r\n\r\n\r\nEndpoint routing does not currently reference Auth or Cors and it would be preferable to leave it so. \r\n",Done|area-mvc,pranavkm,"As part of #8387, we are going to make MVC rely on the Auth and Cors middlewares to perform work rather than rely on filters when endpoint routing is enabled. Doing this is fairly straightforward, we need to ensure that the right endpoint metadata is available, and the middleware is configured.\r\n\r\nA fall-out of this choice is that we need to guarantee that the auth or cors middleware was configured in the request pipeline failing which the presence of these attributes would have done nothing. \r\n\r\nOne design that seems promising for this is for `EndpointRoutingMiddleware` to complain if the auth or cors middleware isn't configured. Psuedo-code:\r\n\r\n```C#\r\nif (!context.Items.ContainsKey(AuthorizationMiddlewareInvokedKey) && HasAuthAttribute(endpoint))\r\n{\r\n   throw;\r\n}\r\n```\r\n\r\nEndpoint routing does not currently reference Auth or Cors and it would be preferable to leave it so. \r\n",C#\r\nif (!context.Items.ContainsKey(AuthorizationMiddlewareInvokedKey) && HasAuthAttribute(endpoint))\r\n{\r\n   throw;\r\n}\r\n
8969,"Current usage of Utf8JsonReader needs to use TextEquals (e.g. NegotiateProtocol/etc.)Currently, consumers of Utf8JsonReader are comparing the ValueSpan/ValueSequence directly (using SequenceEqual). This could be problematic if the payload contained escaped data which would be incorrectly flagged as not matching (when it should).\r\n\r\nFor example, the following should be re-written to use the new `TextEquals` APIs:\r\nhttps://github.com/aspnet/AspNetCore/blob/9de42d516e6ee9c8eb17700e134f3ac8a7a682ff/src/SignalR/common/Http.Connections.Common/src/NegotiateProtocol.cs#L215-L217\r\n\r\n\r\n\r\nSimilarly here/elsewhere:\r\nhttps://github.com/aspnet/AspNetCore/blob/9de42d516e6ee9c8eb17700e134f3ac8a7a682ff/src/SignalR/common/SignalR.Common/src/Protocol/HandshakeProtocol.cs#L122-L124\r\n\r\n\r\nSee https://github.com/dotnet/corefx/issues/34938 for more context.\r\n\r\ncc @BrennanConroy, @JamesNK  ",area-signalr|accepted,BrennanConroy,"Currently, consumers of Utf8JsonReader are comparing the ValueSpan/ValueSequence directly (using SequenceEqual). This could be problematic if the payload contained escaped data which would be incorrectly flagged as not matching (when it should).\r\n\r\nFor example, the following should be re-written to use the new `TextEquals` APIs:\r\nhttps://github.com/aspnet/AspNetCore/blob/9de42d516e6ee9c8eb17700e134f3ac8a7a682ff/src/SignalR/common/Http.Connections.Common/src/NegotiateProtocol.cs#L215-L217\r\n\r\n```C#\r\nif (reader.TextEquals(TransportPropertyNameBytes))\r\n```\r\n\r\nSimilarly here/elsewhere:\r\nhttps://github.com/aspnet/AspNetCore/blob/9de42d516e6ee9c8eb17700e134f3ac8a7a682ff/src/SignalR/common/SignalR.Common/src/Protocol/HandshakeProtocol.cs#L122-L124\r\n\r\n\r\nSee https://github.com/dotnet/corefx/issues/34938 for more context.\r\n\r\ncc @BrennanConroy, @JamesNK  ",C#\r\nif (reader.TextEquals(TransportPropertyNameBytes))\r\n
8959,"Razor Page Type in PageActionDescriptorIn the `ControllerActionDescriptor` I have access to the attributes that have decorated on the controllers and action. I use this option for implementing the dynamic permission scenario and with `GetCustomAttribute` I fetch the `AuthorizeAttribute` that has decorated on my controllers and actions.\r\n\r\nNow, I want to use this feature for the projects that use Razor Pages instead of MVC. So here I need to to use the `PageActionDescriptor` rather `ControllerActionDescriptor` than for the Razor Pages. The information that PageActionDescriptor Gives me are above:\r\n\r\n\r\nI've tried following code for getting `AuthorizeAttribute`:\r\n\r\n\r\nI've faced with the null value and in the debugging there hadn't been any Attribute, It's clear cuz the descriptor isn't the Razor Page Type.\r\n\r\nHere I need to access the Razor Page Type for getting the decorated attributes and there aren't any properties for this fact.\r\n\r\n_Note that the AuthorizeAttribute isn't there in the `FilterDescriptors` property if you want to forward me to the [doc](https://docs.microsoft.com/en-us/aspnet/core/razor-pages/filter?view=aspnetcore-2.2#authorize-filter-attribute)._\r\n\r\nVersions: \r\n```\r\nASP.NET Core 2.1 +\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview4-011004\r\n Commit:    563371c23a\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview4-011004\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview4-27529-01\r\n  Commit:  4626102114\r\n```",question|area-mvc,mkArtakMSFT,"In the `ControllerActionDescriptor` I have access to the attributes that have decorated on the controllers and action. I use this option for implementing the dynamic permission scenario and with `GetCustomAttribute` I fetch the `AuthorizeAttribute` that has decorated on my controllers and actions.\r\n```c#\r\ndescriptor.ControllerTypeInfo.GetCustomAttribute<AuthorizeAttribute>()?\r\n     .Policy == ConstantPolicies.DynamicPermission\r\n     \r\ndescriptor.MethodInfo.GetCustomAttribute<AuthorizeAttribute>()?\r\n     .Policy == ConstantPolicies.DynamicPermission;\r\n```\r\nNow, I want to use this feature for the projects that use Razor Pages instead of MVC. So here I need to to use the `PageActionDescriptor` rather `ControllerActionDescriptor` than for the Razor Pages. The information that PageActionDescriptor Gives me are above:\r\n\r\n```c#\r\npublic string AreaName { get; set; }\r\n        \r\npublic string DisplayName { get; set; }\r\n\r\npublic string ViewEnginePath { get; set; }\r\n\r\npublic IList<ParameterDescriptor> Parameters { get; set; }\r\n\r\npublic IList<ParameterDescriptor> BoundProperties { get; set; }\r\n\r\npublic IList<FilterDescriptor> FilterDescriptors { get; set; }\r\n\r\n// more\r\n```\r\nI've tried following code for getting `AuthorizeAttribute`:\r\n\r\n```c#\r\ndescriptor.GetType().GetCustomAttribute<AuthorizeAttribute>()?\r\n    .Policy ==  ConstantPolicies.DynamicPermission;\r\n```\r\nI've faced with the null value and in the debugging there hadn't been any Attribute, It's clear cuz the descriptor isn't the Razor Page Type.\r\n\r\nHere I need to access the Razor Page Type for getting the decorated attributes and there aren't any properties for this fact.\r\n\r\n_Note that the AuthorizeAttribute isn't there in the `FilterDescriptors` property if you want to forward me to the [doc](https://docs.microsoft.com/en-us/aspnet/core/razor-pages/filter?view=aspnetcore-2.2#authorize-filter-attribute)._\r\n\r\nVersions: \r\n```\r\nASP.NET Core 2.1 +\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview4-011004\r\n Commit:    563371c23a\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview4-011004\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview4-27529-01\r\n  Commit:  4626102114\r\n```",c#\r\ndescriptor.ControllerTypeInfo.GetCustomAttribute<AuthorizeAttribute>()?\r\n     .Policy == ConstantPolicies.DynamicPermission\r\n     \r\ndescriptor.MethodInfo.GetCustomAttribute<AuthorizeAttribute>()?\r\n     .Policy == ConstantPolicies.DynamicPermission;\r\n
8945,".NET Core Worker not call ExecuteTask### Describe the bug\r\nI have create a worker using ""dotnet new worker"" but using code bellow no events are written to EventLog:\r\n\r\nprogram.cs\r\n``\r\n\r\nworker.cs\r\n``\r\nAttaching debug session to installed service, nothing happen!",Done|Docs|area-hosting|area-networking,analogrelay,"### Describe the bug\r\nI have create a worker using ""dotnet new worker"" but using code bellow no events are written to EventLog:\r\n\r\nprogram.cs\r\n````csharp\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.IO;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.Extensions.Configuration;\r\nusing Microsoft.Extensions.DependencyInjection;\r\nusing Microsoft.Extensions.Hosting;\r\nusing Microsoft.Extensions.Logging;\r\nusing Microsoft.Extensions.Logging.EventLog;\r\n\r\nnamespace CoreWindowsService\r\n{\r\n    public class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            CreateHostBuilder(args).Build().Run();\r\n        }\r\n\r\n        public static IHostBuilder CreateHostBuilder(string[] args) =>\r\n            Host.CreateDefaultBuilder(args)\r\n                .UseServiceBaseLifetime()\r\n                .ConfigureLogging(loggerFactory => loggerFactory\r\n                    .AddEventLog(new EventLogSettings() {SourceName = ""CoreWindowsService""}))\r\n                .ConfigureServices(services =>\r\n                {\r\n                    services.AddHostedService<Worker>();\r\n                });\r\n    }\r\n}\r\n````\r\n\r\nworker.cs\r\n````csharp\r\nusing System;\r\nusing System.IO;\r\nusing System.Threading;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.Extensions.Hosting;\r\nusing Microsoft.Extensions.Logging;\r\n\r\nnamespace CoreWindowsService\r\n{\r\n    public class Worker : BackgroundService\r\n    {\r\n        private readonly ILogger<Worker> _logger;\r\n\r\n        public Worker(ILogger<Worker> logger)\r\n        {\r\n            _logger = logger;\r\n        }\r\n\r\n        public override async Task StartAsync(CancellationToken cancellationToken)\r\n        {\r\n            _logger.LogInformation($""Iniciado: {DateTime.Now}"");\r\n            await Task.CompletedTask;\r\n        }\r\n\r\n        public override async Task StopAsync(CancellationToken cancellationToken)\r\n        {\r\n            _logger.LogInformation($""Parado: {DateTime.Now}"");\r\n            await Task.CompletedTask;\r\n        }\r\n\r\n        protected override async Task ExecuteAsync(CancellationToken stoppingToken)\r\n        {\r\n            while (!stoppingToken.IsCancellationRequested)\r\n            {\r\n                _logger.LogInformation($""Executando: {DateTime.Now}"");\r\n                await Task.Delay(1000, stoppingToken);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n````\r\nAttaching debug session to installed service, nothing happen!","csharp\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.IO;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.Extensions.Configuration;\r\nusing Microsoft.Extensions.DependencyInjection;\r\nusing Microsoft.Extensions.Hosting;\r\nusing Microsoft.Extensions.Logging;\r\nusing Microsoft.Extensions.Logging.EventLog;\r\n\r\nnamespace CoreWindowsService\r\n{\r\n    public class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            CreateHostBuilder(args).Build().Run();\r\n        }\r\n\r\n        public static IHostBuilder CreateHostBuilder(string[] args) =>\r\n            Host.CreateDefaultBuilder(args)\r\n                .UseServiceBaseLifetime()\r\n                .ConfigureLogging(loggerFactory => loggerFactory\r\n                    .AddEventLog(new EventLogSettings() {SourceName = ""CoreWindowsService""}))\r\n                .ConfigureServices(services =>\r\n                {\r\n                    services.AddHostedService<Worker>();\r\n                });\r\n    }\r\n}\r\n"
8902,"Support strongly typed builders with IEndpointConventionBuilderMap extensions that hang off `IEndpointRouteBuilder` return `IEndpointConventionBuilder`. This is fine and good.\r\n\r\nCan we imagine scenarios where someone wants to return a more strongly typed builder? For example, from gRPC's `MapGrpcService` I return an `GrpcEndpointRouteBuilder`. It implements convention builder but there is also some gRPC specific stuff on there, and gRPC extension methods.\r\n\r\n\r\n\r\nToday all our `IEndpointConventionBuilder` extension methods return `IEndpointConventionBuilder` which would make using a strongly typed builder difficult.\r\n\r\n\r\n\r\nShould our extension methods be more like:\r\n\r\n\r\n\r\n// @davidfowl @rynowak ",Done|enhancement|area-mvc,JamesNK,"Map extensions that hang off `IEndpointRouteBuilder` return `IEndpointConventionBuilder`. This is fine and good.\r\n\r\nCan we imagine scenarios where someone wants to return a more strongly typed builder? For example, from gRPC's `MapGrpcService` I return an `GrpcEndpointRouteBuilder`. It implements convention builder but there is also some gRPC specific stuff on there, and gRPC extension methods.\r\n\r\n```cs\r\npublic class GrpcEndpointRouteBuilder : IEndpointConventionBuilder\r\n{\r\n    public GrpcEndpointRouteBuilder ConfigureCrazyGrpcStuff(Action a)\r\n    {\r\n        a();\r\n        return this;\r\n    }\r\n}\r\n```\r\n\r\nToday all our `IEndpointConventionBuilder` extension methods return `IEndpointConventionBuilder` which would make using a strongly typed builder difficult.\r\n\r\n```cs\r\nroutes.MapGrpcService<MyService>()\r\n    .RequireAuthorization(""policy"")\r\n    .ConfigureCrazyGrpcStuff(() => {}) // error, reference is no longer the gRPC builder\r\n```\r\n\r\nShould our extension methods be more like:\r\n\r\n```cs\r\npublic TBuilder RequireAuthorization<TBuilder>(TBuilder builder, string policyName) where TBuilder : IEndpointConventionBuilder\r\n{\r\n    // stuff\r\n    return builder;\r\n}\r\n```\r\n\r\n// @davidfowl @rynowak ",cs\r\npublic class GrpcEndpointRouteBuilder : IEndpointConventionBuilder\r\n{\r\n    public GrpcEndpointRouteBuilder ConfigureCrazyGrpcStuff(Action a)\r\n    {\r\n        a();\r\n        return this;\r\n    }\r\n}\r\n
8847,"ControllerBase.Ok(object value) responds with 204 status code when value is null### Describe the bug\r\nReturning Ok(null) from a controller action results in a 204 status code, rather than a 200. I'm not sure if this in intended, but it's not what I would expect.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core '2.2'\r\n2. Create a controller with the following method:\r\n\r\n3. Make a HTTP Get request to the endpoint where x in the query string is true. The response status code will be 204.\r\n4. Make a HTTP Get request to the endpoint where x in the query string is false. The response status code will be 200 as expected.\r\n\r\n### Expected behavior\r\nResponse status code should always be 200 when returning `Ok()` or `Ok(object value)`, regardless of if value is null.\r\n",bug|:heavy_check_mark: Resolution: By Design|Status: Resolved|feature-mvc-formatting|severity-minor|affected-medium|feature-mvc-execution-pipeline|area-web-frameworks,brunolins16,"### Describe the bug\r\nReturning Ok(null) from a controller action results in a 204 status code, rather than a 200. I'm not sure if this in intended, but it's not what I would expect.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core '2.2'\r\n2. Create a controller with the following method:\r\n```C#\r\n[HttpGet]\r\npublic async Task<IActionResult> Test(bool x)\r\n{\r\n    if (x)\r\n    {\r\n        return Ok(null);\r\n    }\r\n    else\r\n    {\r\n        return Ok(new { });\r\n    }\r\n}\r\n```\r\n3. Make a HTTP Get request to the endpoint where x in the query string is true. The response status code will be 204.\r\n4. Make a HTTP Get request to the endpoint where x in the query string is false. The response status code will be 200 as expected.\r\n\r\n### Expected behavior\r\nResponse status code should always be 200 when returning `Ok()` or `Ok(object value)`, regardless of if value is null.\r\n",C#\r\n[HttpGet]\r\npublic async Task<IActionResult> Test(bool x)\r\n{\r\n    if (x)\r\n    {\r\n        return Ok(null);\r\n    }\r\n    else\r\n    {\r\n        return Ok(new { });\r\n    }\r\n}\r\n
8681,Expose ConnectionId on SignalR ClientsWe've had users ask about how to get a client's connectionId Our current guidance to users on how to get it is to create a Hub method to return it to them e.g.\r\n\r\n\r\nWhich is less than ideal.\r\n\r\nAnother thing we planned on doing for the `onReconnected` events is making it have a single parameter which would be the client's new connectionId. \r\n\r\n- [x] .NET\r\n- [x] Java\r\n- [x] JavaScript,Done|area-signalr|feature-client-java|feature-client-net|feature-client-javascript|accepted,mikaelm12,We've had users ask about how to get a client's connectionId Our current guidance to users on how to get it is to create a Hub method to return it to them e.g.\r\n\r\n```csharp\r\npublic string GetConnectionId() \r\n{\r\n    return Context.ConnectionId\r\n}\r\n\r\n```\r\nWhich is less than ideal.\r\n\r\nAnother thing we planned on doing for the `onReconnected` events is making it have a single parameter which would be the client's new connectionId. \r\n\r\n- [x] .NET\r\n- [x] Java\r\n- [x] JavaScript,csharp\r\npublic string GetConnectionId() \r\n{\r\n    return Context.ConnectionId\r\n}\r\n\r\n
8653,"Make HttpMethodActionConstraint public in Core 3.0### Is your feature request related to a problem? Please describe.\r\nI'm making my own ApplicationModelProvider. Before Core 3.0 I used an HttpMethodActionConstraint in my ActionModels to filter out actions by http method.\r\n\r\nIn Core 3.0 HttpMethodActionConstraint was made an internal class. Why?\r\n\r\nExample: 'm trying to do\r\n\r\n\r\n\r\n### Describe the solution you'd like\r\nI want to use an existing reusable class ``HttpMethodActionConstraint`` from ``Microsoft.AspNetCore.Mvc.ActionConstraints`` instead of making my own.\r\n\r\n### Describe alternatives you've considered\r\nalternative solution. Copy/Paste source of ``Microsoft.AspNetCore.Mvc.ActionConstraints.HttpMethodActionConstraint`` in my project\r\n\r\n### Additional context\r\nCustom ApplicationModelProvider is used for integration with database-provided model. I don't need an AspNetCore's class-based model, but want to use all other stuff. AppModels are great and limitation of their's building blocks is making me sad.\r\n",Done|task|area-mvc,rynowak,"### Is your feature request related to a problem? Please describe.\r\nI'm making my own ApplicationModelProvider. Before Core 3.0 I used an HttpMethodActionConstraint in my ActionModels to filter out actions by http method.\r\n\r\nIn Core 3.0 HttpMethodActionConstraint was made an internal class. Why?\r\n\r\nExample: 'm trying to do\r\n\r\n```c#\r\nvar selectorModel = new SelectorModel();\r\nselectorModel.ActionConstraints.Add(new HttpMethodActionConstraint(httpMethods));\r\n```\r\n\r\n### Describe the solution you'd like\r\nI want to use an existing reusable class ``HttpMethodActionConstraint`` from ``Microsoft.AspNetCore.Mvc.ActionConstraints`` instead of making my own.\r\n\r\n### Describe alternatives you've considered\r\nalternative solution. Copy/Paste source of ``Microsoft.AspNetCore.Mvc.ActionConstraints.HttpMethodActionConstraint`` in my project\r\n\r\n### Additional context\r\nCustom ApplicationModelProvider is used for integration with database-provided model. I don't need an AspNetCore's class-based model, but want to use all other stuff. AppModels are great and limitation of their's building blocks is making me sad.\r\n",c#\r\nvar selectorModel = new SelectorModel();\r\nselectorModel.ActionConstraints.Add(new HttpMethodActionConstraint(httpMethods));\r\n
8645,"ViewComponent can't have Invoke[Async] use a parameter named ""content"" when using TagHelper Syntax### Describe the bug\r\n\r\nWhen the ViewComponent's `Invoke` or `InvokeAsync` method has a parameter `content` *and* the ViewComponent is invoked with the TagHelper Syntax `<vc:\u2026` then the generated code throws a compile-time error.\r\n\r\n### To Reproduce\r\n\r\nUsing .NET Core SDK (3.0.100-preview3-010431) with Microsoft.NETCore.App 3.0.0-preview3-27503-5\r\n\r\nViewComponent:\r\n\r\nCall in Razorpage:\r\n\r\n\r\nGenerated Code:  \r\n\r\n\r\n### Expected behavior\r\n\r\nNo error ;)\r\n\r\n### Additional context\r\n\r\nI stumbled upon this error when building a minimal test case for something else ;)\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n",bug|Done|area-mvc,NTaylorMullen,"### Describe the bug\r\n\r\nWhen the ViewComponent's `Invoke` or `InvokeAsync` method has a parameter `content` *and* the ViewComponent is invoked with the TagHelper Syntax `<vc:\u2026` then the generated code throws a compile-time error.\r\n\r\n### To Reproduce\r\n\r\nUsing .NET Core SDK (3.0.100-preview3-010431) with Microsoft.NETCore.App 3.0.0-preview3-27503-5\r\n\r\nViewComponent:\r\n```C#\r\npublic class ExampleViewComponent : ViewComponent\r\n    {\r\n        public async Task<IViewComponentResult> InvokeAsync(string content)\r\n        {\r\n            return View(""Default"",content);\r\n        }\r\n    }\r\n```\r\nCall in Razorpage:\r\n```HTML\r\n<vc:example content=""This is bold.""></vc:example>\r\n```\r\n\r\nGenerated Code:  \r\n```C#\r\nvar content = await _helper.InvokeAsync(""Example"", new { content });\r\n```\r\n\r\n### Expected behavior\r\n\r\nNo error ;)\r\n\r\n### Additional context\r\n\r\nI stumbled upon this error when building a minimal test case for something else ;)\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n","C#\r\npublic class ExampleViewComponent : ViewComponent\r\n    {\r\n        public async Task<IViewComponentResult> InvokeAsync(string content)\r\n        {\r\n            return View(""Default"",content);\r\n        }\r\n    }\r\n"
8639,"We should prevent self-closing tag helpers compile timeI'm targeting ASP.NET Core 3.0 preview3.\r\nHere is my page model:\r\n\r\n\r\n\r\nAnd here is my Index.cshtml:\r\n\r\n\r\n\r\nFirst, my `select` tag helper is self-closing, and that results in improper rendering:\r\n\r\n\r\n\r\nAs soon as I change the tag helper to have a separate closing tag, things will work just fine:\r\n",bug|area-mvc,NTaylorMullen,"I'm targeting ASP.NET Core 3.0 preview3.\r\nHere is my page model:\r\n\r\n```csharp\r\nusing Microsoft.AspNetCore.Mvc.RazorPages;\r\nusing Microsoft.AspNetCore.Mvc.Rendering;\r\nusing System.Collections.Generic;\r\n\r\nnamespace WebApplication11.Pages\r\n{\r\n    public class IndexModel : PageModel\r\n    {\r\n        public void OnGet()\r\n        {\r\n        }\r\n\r\n        public string ItemsList { get => ""asdf""; }\r\n\r\n        public IEnumerable<SelectListItem> Items\r\n        {\r\n            get => new SelectListItem[] {\r\n                    new SelectListItem(""item 1"", ""1""),\r\n                    new SelectListItem(""item 2"", ""2""),\r\n                    new SelectListItem(""item 3"", ""3"")\r\n                };\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nAnd here is my Index.cshtml:\r\n\r\n```cshtml\r\n@page\r\n@model IndexModel\r\n@{\r\n    ViewData[""Title""] = ""Home page"";\r\n}\r\n\r\n<div class=""text-center"">\r\n    <h1 class=""display-4"">Welcome</h1>\r\n    <p>Learn about <a href=""https://docs.microsoft.com/aspnet/core"">building Web apps with ASP.NET Core</a>.</p>\r\n    <select asp-for=""ItemsList"" asp-items=""Model.Items"" />\r\n</div>\r\n```\r\n\r\nFirst, my `select` tag helper is self-closing, and that results in improper rendering:\r\n\r\n```html\r\n<select id=""ItemsList"" name=""ItemsList"">\r\n            \xa9 2019 - WebApplication11 - Privacy\r\n        <script src=""/lib/jquery/dist/jquery.js""></script>\r\n        <script src=""/lib/bootstrap/dist/js/bootstrap.bundle.js""></script>\r\n    <script src=""/js/site.js?v=dLGP40S79Xnx6GqUthRF6NWvjvhQ1nOvdVSwaNcgG18""></script>\r\n</select>\r\n```\r\n\r\nAs soon as I change the tag helper to have a separate closing tag, things will work just fine:\r\n```cshtml\r\n<select asp-for=""ItemsList"" asp-items=""Model.Items""></select>\r\n```","csharp\r\nusing Microsoft.AspNetCore.Mvc.RazorPages;\r\nusing Microsoft.AspNetCore.Mvc.Rendering;\r\nusing System.Collections.Generic;\r\n\r\nnamespace WebApplication11.Pages\r\n{\r\n    public class IndexModel : PageModel\r\n    {\r\n        public void OnGet()\r\n        {\r\n        }\r\n\r\n        public string ItemsList { get => ""asdf""; }\r\n\r\n        public IEnumerable<SelectListItem> Items\r\n        {\r\n            get => new SelectListItem[] {\r\n                    new SelectListItem(""item 1"", ""1""),\r\n                    new SelectListItem(""item 2"", ""2""),\r\n                    new SelectListItem(""item 3"", ""3"")\r\n                };\r\n        }\r\n    }\r\n}\r\n"
8596,"Razor Components - Parameters passed through RenderComponentAsync are lost after Prerendering### Describe the bug\r\nParameters passed through RenderComponentAsync are lost immediately after prerendering.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\nRazor Components Preview3 0.9\r\n`@(await Html.RenderComponentAsync<html>(new { Example = ""something"" }))`\r\n\r\n`[Parameter] private string Example {get; set;}` is null after prerendering is finished.\r\n\r\n### Expected behavior\r\nFor passed parameters to persist after prerendering is finished.\r\n\r\n\r\nThis is probably an actual issue (it could just be countless hours of sleep derivation at this point).\r\n\r\nI figured out a workaround after posting this by creating a component and juggling the parameters; but the reality is the way I was trying to initially do this should have worked out of the box. Whenever I passed `Example` into the Cascade, it would always be null after Prerendering was finished.\r\n\r\n\r\nTo give you an idea of the weirdness I'm doing at 4:40 AM...\r\nThis works as expected, when inside of Body.razor you pass the reference forward as a CascadeValue so that the children Components can get access to the Metatags object.\r\n\r\nSo yeah, as of 5:40 AM I now have fully proper SEO.. without any weird hacking up Index.cshtml and using unclosed tags.\r\n\r\n\r\n\r\n)",area-blazor,javiercn,"### Describe the bug\r\nParameters passed through RenderComponentAsync are lost immediately after prerendering.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\nRazor Components Preview3 0.9\r\n`@(await Html.RenderComponentAsync<html>(new { Example = ""something"" }))`\r\n\r\n`[Parameter] private string Example {get; set;}` is null after prerendering is finished.\r\n\r\n### Expected behavior\r\nFor passed parameters to persist after prerendering is finished.\r\n\r\n\r\nThis is probably an actual issue (it could just be countless hours of sleep derivation at this point).\r\n\r\nI figured out a workaround after posting this by creating a component and juggling the parameters; but the reality is the way I was trying to initially do this should have worked out of the box. Whenever I passed `Example` into the Cascade, it would always be null after Prerendering was finished.\r\n\r\n\r\nTo give you an idea of the weirdness I'm doing at 4:40 AM...\r\nThis works as expected, when inside of Body.razor you pass the reference forward as a CascadeValue so that the children Components can get access to the Metatags object.\r\n\r\nSo yeah, as of 5:40 AM I now have fully proper SEO.. without any weird hacking up Index.cshtml and using unclosed tags.\r\n\r\n```C#\r\n    public class html : ComponentBase\r\n    {\r\n        public static string HeadTXT = File.ReadAllText(""head.htm"");\r\n        Metatags meta = new Metatags() { Title = ""zzzzzzzz"" };\r\n        protected override void BuildRenderTree(RenderTreeBuilder builder)\r\n        {\r\n            builder.OpenElement(0, ""head"");\r\n            builder.AddMarkupContent(1, HeadTXT);\r\n            builder.OpenComponent<Head>(2);\r\n            builder.AddAttribute(3, ""MetaInfo"", meta);\r\n            builder.CloseComponent();\r\n            builder.CloseElement();\r\n\r\n            builder.OpenElement(4, ""body"");\r\n            builder.OpenComponent<Body>(5);\r\n            builder.AddAttribute(6, ""MetaInfo"", meta);\r\n            builder.CloseComponent();\r\n            builder.AddMarkupContent(7, ""<script src=\\""_framework/components.server.js\\""></script>"");\r\n            builder.CloseElement();\r\n\r\n        }\r\n    }\r\n\r\n```\r\n\r\n)","C#\r\n    public class html : ComponentBase\r\n    {\r\n        public static string HeadTXT = File.ReadAllText(""head.htm"");\r\n        Metatags meta = new Metatags() { Title = ""zzzzzzzz"" };\r\n        protected override void BuildRenderTree(RenderTreeBuilder builder)\r\n        {\r\n            builder.OpenElement(0, ""head"");\r\n            builder.AddMarkupContent(1, HeadTXT);\r\n            builder.OpenComponent<Head>(2);\r\n            builder.AddAttribute(3, ""MetaInfo"", meta);\r\n            builder.CloseComponent();\r\n            builder.CloseElement();\r\n\r\n            builder.OpenElement(4, ""body"");\r\n            builder.OpenComponent<Body>(5);\r\n            builder.AddAttribute(6, ""MetaInfo"", meta);\r\n            builder.CloseComponent();\r\n            builder.AddMarkupContent(7, ""<script src=\\""_framework/components.server.js\\""></script>"");\r\n            builder.CloseElement();\r\n\r\n        }\r\n    }\r\n\r\n"
8546,"Class project why need add Microsoft.AspNetCore.MVC ProjectReference in aspnetcore2.2 if already included Microsoft.AspNetCore.App 2.2.0[c# - aspnetcore web project import another project's controller - Stack Overflow](https://stackoverflow.com/questions/55175398/aspnetcore-web-project-import-another-projects-controller)\r\n\r\n### two project's csproj and version :\r\n\r\n\r\nAspNetCore Web Project\r\n```\r\n<Project Sdk=""Microsoft.NET.Sdk.Web"">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.2</TargetFramework>\r\n    <AspNetCoreHostingModel>InProcess</AspNetCoreHostingModel>\r\n  </PropertyGroup>\r\n\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=""Microsoft.AspNetCore.App"" />\r\n    <PackageReference Include=""Microsoft.AspNetCore.Razor.Design"" Version=""2.2.0"" PrivateAssets=""All"" />\r\n  </ItemGroup>\r\n\r\n\r\n  <ItemGroup>\r\n    <ProjectReference Include=""..\\Controller\\Controller.csproj"" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nController Project\r\n\r\n```xml\r\n<Project Sdk=""Microsoft.NET.Sdk"">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.2</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=""Microsoft.AspNetCore.App""/>\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n\r\n### Controller Project Code\r\n\r\n\r\n\r\n[https://i.stack.imgur.com/zmYxW.png](https://i.stack.imgur.com/zmYxW.png)\r\n\r\n### Question\r\n\r\nif run AspNetCore Web Project it'll get `HTTP ERROR 404`.\r\n\r\nI need to add `<PackageReference Include=""Microsoft.AspNetCore.MVC""/>` in cspoj \r\nto run successfully.\r\n\r\n```\r\n<Project Sdk=""Microsoft.NET.Sdk"">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.2</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=""Microsoft.AspNetCore.App""/>\r\n    <PackageReference Include=""Microsoft.AspNetCore.MVC"" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nBut Isn't [NuGet | Microsoft.AspNetCore.App 2.2.0](https://www.nuget.org/packages/Microsoft.AspNetCore.App/2.2.0) already included `Microsoft.AspNetCore.MVC`,Why i need to add again?\r\n\r\n[![enter image description here][1]][1]\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/y1pkP.png",investigate|area-mvc,pranavkm,"[c# - aspnetcore web project import another project's controller - Stack Overflow](https://stackoverflow.com/questions/55175398/aspnetcore-web-project-import-another-projects-controller)\r\n\r\n### two project's csproj and version :\r\n\r\n\r\nAspNetCore Web Project\r\n```\r\n<Project Sdk=""Microsoft.NET.Sdk.Web"">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.2</TargetFramework>\r\n    <AspNetCoreHostingModel>InProcess</AspNetCoreHostingModel>\r\n  </PropertyGroup>\r\n\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=""Microsoft.AspNetCore.App"" />\r\n    <PackageReference Include=""Microsoft.AspNetCore.Razor.Design"" Version=""2.2.0"" PrivateAssets=""All"" />\r\n  </ItemGroup>\r\n\r\n\r\n  <ItemGroup>\r\n    <ProjectReference Include=""..\\Controller\\Controller.csproj"" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nController Project\r\n\r\n```xml\r\n<Project Sdk=""Microsoft.NET.Sdk"">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.2</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=""Microsoft.AspNetCore.App""/>\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n\r\n### Controller Project Code\r\n\r\n```C#\r\nusing Microsoft.AspNetCore.Mvc;\r\n\r\npublic class HomeController : Controller\r\n{\r\n    public IActionResult Index()\r\n    {\r\n        return Content(""Hello S.O"");\r\n    }\r\n}\r\n\r\n```\r\n\r\n[https://i.stack.imgur.com/zmYxW.png](https://i.stack.imgur.com/zmYxW.png)\r\n\r\n### Question\r\n\r\nif run AspNetCore Web Project it'll get `HTTP ERROR 404`.\r\n\r\nI need to add `<PackageReference Include=""Microsoft.AspNetCore.MVC""/>` in cspoj \r\nto run successfully.\r\n\r\n```\r\n<Project Sdk=""Microsoft.NET.Sdk"">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.2</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=""Microsoft.AspNetCore.App""/>\r\n    <PackageReference Include=""Microsoft.AspNetCore.MVC"" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nBut Isn't [NuGet | Microsoft.AspNetCore.App 2.2.0](https://www.nuget.org/packages/Microsoft.AspNetCore.App/2.2.0) already included `Microsoft.AspNetCore.MVC`,Why i need to add again?\r\n\r\n[![enter image description here][1]][1]\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/y1pkP.png","C#\r\nusing Microsoft.AspNetCore.Mvc;\r\n\r\npublic class HomeController : Controller\r\n{\r\n    public IActionResult Index()\r\n    {\r\n        return Content(""Hello S.O"");\r\n    }\r\n}\r\n\r\n"
8502,"InputCheckbox does not set initial value### Describe the bug\r\nWhen creating a InputCheckbox where value is true the checkbox is still unchecked.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Create a simple component\r\n\r\n\r\n### Expected behavior\r\nThe checkbox should be checked\r\n\r\n### Additional context\r\n```xml\r\n<PackageReference Include=""Microsoft.AspNetCore.Blazor"" Version=""0.9.0-preview3-19154-02"" />\r\n<PackageReference Include=""Microsoft.AspNetCore.Blazor.Build"" Version=""0.9.0-preview3-19154-02"" PrivateAssets=""all"" />\r\n```\r\n",investigate|area-blazor,SteveSandersonMS,"### Describe the bug\r\nWhen creating a InputCheckbox where value is true the checkbox is still unchecked.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Create a simple component\r\n```csharp\r\n<EditForm Model=""this"">\r\n    <h4>Checkbox</h4>\r\n    <InputCheckbox bind-Value=""@Visible""></InputCheckbox>\r\n</EditForm>\r\n\r\n@functions{\r\n    [Parameter]\r\n    protected bool Visible { get; set; } = true;\r\n}\r\n```\r\n\r\n### Expected behavior\r\nThe checkbox should be checked\r\n\r\n### Additional context\r\n```xml\r\n<PackageReference Include=""Microsoft.AspNetCore.Blazor"" Version=""0.9.0-preview3-19154-02"" />\r\n<PackageReference Include=""Microsoft.AspNetCore.Blazor.Build"" Version=""0.9.0-preview3-19154-02"" PrivateAssets=""all"" />\r\n```\r\n","csharp\r\n<EditForm Model=""this"">\r\n    <h4>Checkbox</h4>\r\n    <InputCheckbox bind-Value=""@Visible""></InputCheckbox>\r\n</EditForm>\r\n\r\n@functions{\r\n    [Parameter]\r\n    protected bool Visible { get; set; } = true;\r\n}\r\n"
8480,"Many-to-many relation: JsonSerializer ReferenceLoopHandling.Ignore not working as expectedI have an issue with the ASP.NET Core JsonSerializer. It keeps running into an infinite reference loop even though I explicitly set the ReferenceLoopHandling property to ReferenceLoopHandling.Ignore.\r\n\r\n### Serializer settings\r\n\r\n\r\n\r\n### First part of the relationship\r\n\r\n\r\n\r\n### Second part of the relationship\r\n\r\n\r\n\r\n### The join table\r\n\r\n\r\n\r\n### The db sets\r\n\r\n\r\n\r\n### Fluent API\r\n\r\n\r\n\r\n### The Query\r\n\r\n\r\n\r\n\r\n\r\n### What I have tried so far\r\n1. Do a Select on the IQueryable. I know that works, but I don't like it partly because it is slower and not really the thing I want.\r\n\r\n2. Give the models the JsonObject(IsReference = true) property. That actually broke the loop. So the serializer must be aware of the reference loop. But ReferenceLoopHandling = Ingore did not work for me. And also I don't want to have reference in my JSON. I want the serializer to stop going further down the hierarchy when it sees a self reference.\r\n\r\n3. Give the models JsonObject(ItemReferenceLoopHandle = Ignore) property. Did not work at all, totally ignored.\r\n\r\n4. Set global JsonConvert settings. Also did not work.\r\n\r\n5. I tried this with the MySql Pomelo provider and the official Sql Server provider. But the database does not really matter here I guess.\r\n\r\n### To be clear\r\nThe parent child relation in the categories seems to work. So it must be something with the join table.\r\n\r\nQueries like that work perfectly fine:\r\n\r\n\r\n\r\n### Technical details\r\nEF Core version: 2.2.0\r\nASP.NET Core version: 2.2.0\r\nDatabase Provider: Pomelo.EntityFrameworkCore.MySql 2.2.0\r\nOperating system: Windows 10\r\nIDE: (e.g. Visual Studio 2017)\r\n",:heavy_check_mark: Resolution: By Design|area-mvc,pranavkm,"I have an issue with the ASP.NET Core JsonSerializer. It keeps running into an infinite reference loop even though I explicitly set the ReferenceLoopHandling property to ReferenceLoopHandling.Ignore.\r\n\r\n### Serializer settings\r\n\r\n```c#\r\nservices.AddMvc(\r\n        options =>\r\n        {\r\n          options.Filters.Add(new CorsAuthorizationFilterFactory(""AllowAnyOrigin""));\r\n          options.CacheProfiles.Add(\r\n            ""Default"",\r\n            new CacheProfile()\r\n            {\r\n              Duration = 60\r\n            });\r\n          options.CacheProfiles.Add(\r\n            ""Never"",\r\n            new CacheProfile()\r\n            {\r\n              Location = ResponseCacheLocation.None,\r\n              NoStore = true\r\n            });\r\n        }).SetCompatibilityVersion(CompatibilityVersion.Version_2_2).AddJsonOptions(\r\n        options =>\r\n        {\r\n          options.SerializerSettings.Formatting = Formatting.Indented;\r\n          options.SerializerSettings.ContractResolver = new CamelCasePropertyNamesContractResolver();\r\n          options.SerializerSettings.ReferenceLoopHandling = ReferenceLoopHandling.Ignore;\r\n        });\r\n```\r\n\r\n### First part of the relationship\r\n\r\n```c#\r\n  public class Brand\r\n  {\r\n    /// <summary>\r\n    /// Gets or sets the categories.\r\n    /// </summary>\r\n    /// <value>\r\n    /// The categories.\r\n    /// </value>\r\n    public ICollection<BrandCategoryJoin> BrandCategoryJoins { get; set; }\r\n\r\n    /// <summary>\r\n    /// Gets or sets the identifier.\r\n    /// </summary>\r\n    /// <value>\r\n    /// The identifier.\r\n    /// </value>\r\n    [Key]\r\n    public long Id { get; set; }\r\n\r\n    /// <summary>\r\n    /// Gets or sets the name.\r\n    /// </summary>\r\n    /// <value>\r\n    /// The name.\r\n    /// </value>\r\n    [MaxLength(255)]\r\n    public string Name { get; set; }\r\n  }\r\n```\r\n\r\n### Second part of the relationship\r\n\r\n```c#\r\n  public class Category\r\n  {\r\n    /// <summary>\r\n    /// Gets or sets the children.\r\n    /// </summary>\r\n    /// <value>\r\n    /// The children.\r\n    /// </value>\r\n    public ICollection<Category> Children { get; set; }\r\n\r\n    /// <summary>\r\n    /// Gets or sets the brands.\r\n    /// </summary>\r\n    /// <value>\r\n    /// The brands.\r\n    /// </value>\r\n    public ICollection<BrandCategoryJoin> BrandCategoryJoins { get; set; }\r\n\r\n    /// <summary>\r\n    /// Gets or sets the identifier.\r\n    /// </summary>\r\n    /// <value>\r\n    /// The identifier.\r\n    /// </value>\r\n    [Key]\r\n    public long Id { get; set; }\r\n\r\n    /// <summary>\r\n    /// Gets or sets the name.\r\n    /// </summary>\r\n    /// <value>\r\n    /// The name.\r\n    /// </value>\r\n    [MaxLength(255)]\r\n    public string Name { get; set; }\r\n\r\n    /// <summary>\r\n    /// Gets or sets the parent.\r\n    /// </summary>\r\n    /// <value>\r\n    /// The parent.\r\n    /// </value>\r\n    [ForeignKey(""ParentFk"")]\r\n    public Category Parent { get; set; }\r\n\r\n    /// <summary>\r\n    /// Gets or sets the parent foreign key.\r\n    /// </summary>\r\n    /// <value>\r\n    /// The parent foreign key.\r\n    /// </value>\r\n    public long? ParentFk { get; set; }\r\n  }\r\n```\r\n\r\n### The join table\r\n\r\n```c#\r\n  public class BrandCategoryJoin\r\n  {\r\n    /// <summary>\r\n    /// Gets or sets the brand.\r\n    /// </summary>\r\n    /// <value>\r\n    /// The brand.\r\n    /// </value>\r\n    [ForeignKey(""BrandFk"")]\r\n    public Brand Brand { get; set; }\r\n\r\n    /// <summary>\r\n    /// Gets or sets the brand foreign key.\r\n    /// </summary>\r\n    /// <value>\r\n    /// The brand foreign key.\r\n    /// </value>\r\n    public long BrandFk { get; set; }\r\n\r\n    /// <summary>\r\n    /// Gets or sets the category.\r\n    /// </summary>\r\n    /// <value>\r\n    /// The category.\r\n    /// </value>\r\n    [ForeignKey(""CategoryFk"")]\r\n    public Category Category { get; set; }\r\n\r\n    /// <summary>\r\n    /// Gets or sets the category foreign key.\r\n    /// </summary>\r\n    /// <value>\r\n    /// The category foreign key.\r\n    /// </value>\r\n    public long CategoryFk { get; set; }\r\n  }\r\n```\r\n\r\n### The db sets\r\n\r\n```c#\r\n    /// <summary>\r\n    /// Gets or sets the brand.\r\n    /// </summary>\r\n    /// <value>\r\n    /// The brands.\r\n    /// </value>\r\n    public virtual DbSet<Brand> Brand { get; set; }\r\n\r\n    /// <summary>\r\n    /// Gets or sets the category.\r\n    /// </summary>\r\n    /// <value>\r\n    /// The category.\r\n    /// </value>\r\n    public virtual DbSet<Category> Category { get; set; }\r\n\r\n    /// <summary>\r\n    /// Gets or sets the brand category join.\r\n    /// </summary>\r\n    /// <value>\r\n    /// The brand category join.\r\n    /// </value>\r\n    public virtual DbSet<BrandCategoryJoin> BrandCategoryJoin { get; set; }\r\n```\r\n\r\n### Fluent API\r\n\r\n```c#\r\n    private ModelBuilder BuildBrand(ModelBuilder builder)\r\n    {\r\n      builder.Entity<Brand>(\r\n        entity =>\r\n        {\r\n          entity.HasIndex(e => e.Name).IsUnique(true);\r\n        });\r\n\r\n      return builder;\r\n    }\r\n\t\r\n    private ModelBuilder BuildCategory(ModelBuilder builder)\r\n    {\r\n      builder.Entity<Category>(\r\n        entity =>\r\n        {\r\n          entity.HasIndex(\r\n            e => new\r\n            {\r\n              e.Name,\r\n            }).IsUnique(true);\r\n\r\n          // 1 parent category -> n sub-category (children)\r\n          entity.HasMany(e => e.Children)\r\n                .WithOne(e => e.Parent)\r\n                .HasForeignKey(e => e.ParentFk)\r\n                .OnDelete(DeleteBehavior.Restrict);\r\n        });\r\n\r\n      return builder;\r\n    }\r\n\t\r\n    private ModelBuilder BuildBrandCategoryJoin(ModelBuilder builder)\r\n    {\r\n      builder.Entity<BrandCategoryJoin>(\r\n        entity =>\r\n        {\r\n          entity.HasKey(\r\n            e => new\r\n            {\r\n              e.BrandFk,\r\n              e.CategoryFk\r\n            });\r\n\r\n          // n brands -> n categories, brands can share the same categories\r\n          entity.HasOne(e => e.Brand)\r\n                .WithMany(e => e.BrandCategoryJoins)\r\n                .HasForeignKey(e => e.BrandFk)\r\n                .OnDelete(DeleteBehavior.Restrict);\r\n\r\n          entity.HasOne(e => e.Category)\r\n                .WithMany(e => e.BrandCategoryJoins)\r\n                .HasForeignKey(e => e.CategoryFk)\r\n                .OnDelete(DeleteBehavior.Restrict);\r\n        });\r\n\r\n      return builder;\r\n    }\r\n```\r\n\r\n### The Query\r\n\r\n```c#\r\n    [HttpGet]\r\n    public IQueryable<Brand> ReadAll()\r\n    {\r\n      return this.Context.Brand.AsNoTracking()\r\n        .Include(b => b.BrandCategoryJoins)\r\n        .ThenInclude(b => b.Category);\r\n    }\r\n```\r\n\r\n```c#\r\n```\r\n\r\n### What I have tried so far\r\n1. Do a Select on the IQueryable. I know that works, but I don't like it partly because it is slower and not really the thing I want.\r\n\r\n2. Give the models the JsonObject(IsReference = true) property. That actually broke the loop. So the serializer must be aware of the reference loop. But ReferenceLoopHandling = Ingore did not work for me. And also I don't want to have reference in my JSON. I want the serializer to stop going further down the hierarchy when it sees a self reference.\r\n\r\n3. Give the models JsonObject(ItemReferenceLoopHandle = Ignore) property. Did not work at all, totally ignored.\r\n\r\n4. Set global JsonConvert settings. Also did not work.\r\n\r\n5. I tried this with the MySql Pomelo provider and the official Sql Server provider. But the database does not really matter here I guess.\r\n\r\n### To be clear\r\nThe parent child relation in the categories seems to work. So it must be something with the join table.\r\n\r\nQueries like that work perfectly fine:\r\n\r\n```c#\r\n    [HttpGet]\r\n    public IQueryable<Category> ReadAllRoots()\r\n    {\r\n      return this.Context.Category.AsNoTracking()\r\n        .Include(c => c.Children)\r\n        .Where(c => c.ParentFk == null);\r\n    }\r\n```\r\n\r\n### Technical details\r\nEF Core version: 2.2.0\r\nASP.NET Core version: 2.2.0\r\nDatabase Provider: Pomelo.EntityFrameworkCore.MySql 2.2.0\r\nOperating system: Windows 10\r\nIDE: (e.g. Visual Studio 2017)\r\n","c#\r\nservices.AddMvc(\r\n        options =>\r\n        {\r\n          options.Filters.Add(new CorsAuthorizationFilterFactory(""AllowAnyOrigin""));\r\n          options.CacheProfiles.Add(\r\n            ""Default"",\r\n            new CacheProfile()\r\n            {\r\n              Duration = 60\r\n            });\r\n          options.CacheProfiles.Add(\r\n            ""Never"",\r\n            new CacheProfile()\r\n            {\r\n              Location = ResponseCacheLocation.None,\r\n              NoStore = true\r\n            });\r\n        }).SetCompatibilityVersion(CompatibilityVersion.Version_2_2).AddJsonOptions(\r\n        options =>\r\n        {\r\n          options.SerializerSettings.Formatting = Formatting.Indented;\r\n          options.SerializerSettings.ContractResolver = new CamelCasePropertyNamesContractResolver();\r\n          options.SerializerSettings.ReferenceLoopHandling = ReferenceLoopHandling.Ignore;\r\n        });\r\n"
8441,React template fails to restore Restoring packages for \r\n\r\n\r\n\r\nSeems to be due to this\r\n\r\n**Unable to find package Microsoft.AspNetCore.Mvc.ViewFeatures** with version (>= 3.0.0-preview4-t000)\r\n\r\nThe only package references are spaservices and newtonsoftjson,:heavy_check_mark: Resolution: Duplicate|area-infrastructure,pranavkm, Restoring packages for \r\n\r\n```console\r\n/work/AspNetCore/src/ProjectTemplates/test/bin/Debug/netcoreapp3.0/TestTemplates/AspNet.Template.937009/AspNet.Template.937009.csproj...\r\n /work/AspNetCore/src/ProjectTemplates/test/bin/Debug/netcoreapp3.0/TestTemplates/AspNet.Template.937009/AspNet.Template.937009.csproj : error NU1102: Unable to find package Microsoft.AspNetCore.Mvc.ViewFeatures with version (>= 3.0.0-preview4-t000)\r\n /work/AspNetCore/src/ProjectTemplates/test/bin/Debug/netcoreapp3.0/TestTemplates/AspNet.Template.937009/AspNet.Template.937009.csproj : error NU1102:   - Found 2241 version(s) in https://dotnet.myget.org/F/aspnetcore-dev/api/v3/index.json [ Nearest version: 3.0.0-preview4-19123-01 ]\r\n /work/AspNetCore/src/ProjectTemplates/test/bin/Debug/netcoreapp3.0/TestTemplates/AspNet.Template.937009/AspNet.Template.937009.csproj : error NU1102:   - Found 115 version(s) in dotnet-core [ Nearest version: 3.0.0-preview4-19121-14 ]\r\n /work/AspNetCore/src/ProjectTemplates/test/bin/Debug/netcoreapp3.0/TestTemplates/AspNet.Template.937009/AspNet.Template.937009.csproj : error NU1102:   - Found 90 version(s) in https://dotnet.myget.org/F/dotnet-core/api/v3/index.json [ Nearest version: 2.2.0 ]\r\n /work/AspNetCore/src/ProjectTemplates/test/bin/Debug/netcoreapp3.0/TestTemplates/AspNet.Template.937009/AspNet.Template.937009.csproj : error NU1102:   -\r\n```\r\n\r\nSeems to be due to this\r\n\r\n**Unable to find package Microsoft.AspNetCore.Mvc.ViewFeatures** with version (>= 3.0.0-preview4-t000)\r\n\r\nThe only package references are spaservices and newtonsoftjson,console\r\n/work/AspNetCore/src/ProjectTemplates/test/bin/Debug/netcoreapp3.0/TestTemplates/AspNet.Template.937009/AspNet.Template.937009.csproj...\r\n /work/AspNetCore/src/ProjectTemplates/test/bin/Debug/netcoreapp3.0/TestTemplates/AspNet.Template.937009/AspNet.Template.937009.csproj : error NU1102: Unable to find package Microsoft.AspNetCore.Mvc.ViewFeatures with version (>= 3.0.0-preview4-t000)\r\n /work/AspNetCore/src/ProjectTemplates/test/bin/Debug/netcoreapp3.0/TestTemplates/AspNet.Template.937009/AspNet.Template.937009.csproj : error NU1102:   - Found 2241 version(s) in https://dotnet.myget.org/F/aspnetcore-dev/api/v3/index.json [ Nearest version: 3.0.0-preview4-19123-01 ]\r\n /work/AspNetCore/src/ProjectTemplates/test/bin/Debug/netcoreapp3.0/TestTemplates/AspNet.Template.937009/AspNet.Template.937009.csproj : error NU1102:   - Found 115 version(s) in dotnet-core [ Nearest version: 3.0.0-preview4-19121-14 ]\r\n /work/AspNetCore/src/ProjectTemplates/test/bin/Debug/netcoreapp3.0/TestTemplates/AspNet.Template.937009/AspNet.Template.937009.csproj : error NU1102:   - Found 90 version(s) in https://dotnet.myget.org/F/dotnet-core/api/v3/index.json [ Nearest version: 2.2.0 ]\r\n /work/AspNetCore/src/ProjectTemplates/test/bin/Debug/netcoreapp3.0/TestTemplates/AspNet.Template.937009/AspNet.Template.937009.csproj : error NU1102:   -\r\n
8407,"UI refresh or binding does not seem to work in razor components in ASP.NET CORE 3.0 preview 3Hi,\r\n\r\nI have installed the latest preview of Visual Studio 2019 (Version 16.0.0 Preview 4.1 SVC1) and of the .NET Core SDK (3.0.100-preview3-010431), as well as the latest Blazor extension (16.0.19154.2) and templates (0.9.0-preview3-19154-02).\r\n\r\nWhen initiating a new **razorcomponents** projet using the CLI tooling and the new templates, I can start the project without any issue.\r\n\r\nThe data fetching is working just fine:\r\n![image](https://user-images.githubusercontent.com/13146868/54140900-ebf93500-4424-11e9-9370-40412b4a3ce8.png)\r\n\r\nBut it seems the UI refresh when using events (like click) or the databinding is not working properly. When using the Counter page, the counter does not increment when clicking on the button:\r\n![image](https://user-images.githubusercontent.com/13146868/54141024-26fb6880-4425-11e9-82b0-ee52c3522db6.png)\r\n\r\nI also tried updating an existing blazor (server-side hosted) application from previous beta (0.7) that used to work to the razorcomponents model but I have the same issues: data-binding or UI refresh does not seem to work anymore. The application is launching and loading data just fine. It's only the logic in the razor pages using binding that does not work anymore.\r\n\r\nFor instance, the following code does not work as expected:\r\n\r\n\r\nI am missing something here?\r\n",question|area-blazor,javiercn,"Hi,\r\n\r\nI have installed the latest preview of Visual Studio 2019 (Version 16.0.0 Preview 4.1 SVC1) and of the .NET Core SDK (3.0.100-preview3-010431), as well as the latest Blazor extension (16.0.19154.2) and templates (0.9.0-preview3-19154-02).\r\n\r\nWhen initiating a new **razorcomponents** projet using the CLI tooling and the new templates, I can start the project without any issue.\r\n\r\nThe data fetching is working just fine:\r\n![image](https://user-images.githubusercontent.com/13146868/54140900-ebf93500-4424-11e9-9370-40412b4a3ce8.png)\r\n\r\nBut it seems the UI refresh when using events (like click) or the databinding is not working properly. When using the Counter page, the counter does not increment when clicking on the button:\r\n![image](https://user-images.githubusercontent.com/13146868/54141024-26fb6880-4425-11e9-82b0-ee52c3522db6.png)\r\n\r\nI also tried updating an existing blazor (server-side hosted) application from previous beta (0.7) that used to work to the razorcomponents model but I have the same issues: data-binding or UI refresh does not seem to work anymore. The application is launching and loading data just fine. It's only the logic in the razor pages using binding that does not work anymore.\r\n\r\nFor instance, the following code does not work as expected:\r\n```csharp\r\n@page ""/""\r\n\r\n<input type=""checkbox"" bind=@IsSelected />\r\n\r\n<p>Checkbox Selected: @IsSelected</p>\r\n\r\n@functions {\r\n    private bool IsSelected { get; set; } = false;\r\n}\r\n```\r\n\r\nI am missing something here?\r\n","csharp\r\n@page ""/""\r\n\r\n<input type=""checkbox"" bind=@IsSelected />\r\n\r\n<p>Checkbox Selected: @IsSelected</p>\r\n\r\n@functions {\r\n    private bool IsSelected { get; set; } = false;\r\n}\r\n"
8393,"Hash routing to named element### Describe the bug\r\n\r\nI cannot use an html anchor to navigate to a specific html element of a page. \r\n\r\n### To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\nGiven there is a Blazor page that looks like the following: \r\n\r\n```razor\r\n@layout MainLayout\r\n@page ""/foo""\r\n\r\n<nav>\r\n    <!-- One version I've tried -->\r\n    <a href=""#bar"">Bar</a>\r\n\r\n    <!-- Another version I've tried -->\r\n    <NavLink href=""#bar"">Bar</NavLink>\r\n\r\n    @* ... *@\r\n</nav>\r\n\r\n@* ... *@\r\n\r\n<section>\r\n    <h2 id=""bar"">Bar</h2>\r\n     @* ... *@\r\n</section>\r\n```\r\n\r\nWhen I click the link to Bar, i get redirected to the route `http://localhost:5000/foo#bar`, but will be at the top of the page. The fragment of the route is not used for selection of a specific HTML element. \r\n\r\n### Expected behavior\r\n\r\nThe browser should scroll down to the proper element, as specified by the [Element Selector](https://www.w3.org/TR/selectors-3/). \r\n\r\nIn cases where the fragment of the URL is used for other purposes, ie. for OAuth, it should be possible to overwrite the default Blazor router behavior. The behavior should be set on a per-page and per-app level. \r\n\r\n### Workaround\r\n\r\nThe proposed workaround does not work, since the browser crashes and is only for illustration.\r\n\r\nThe current workaround is to write explicit code that interprets the URL. In the example above, we could use a little bit of JavaScript and then call that from our Blazor code: \r\n\r\n\r\n\r\n```razor\r\n@inject Microsoft.AspNetCore.Components.Services.IUriHelper UriHelper\r\n\r\n@functions {\r\n    protected override void OnInit()\r\n    {\r\n        NavigateToElement();\r\n        UriHelper.OnLocationChanged += OnLocationChanges;\r\n    }\r\n\r\n    private void OnLocationChanges(object sender, string location) => NavigateToElement();\r\n\r\n    private void NavigateToElement()\r\n    {\r\n        var url = UriHelper.GetAbsoluteUri();\r\n        var fragment = new Uri(url).Fragment;\r\n\r\n        if(string.IsNullOrEmpty(fragment))\r\n        {\r\n            return;\r\n        }\r\n\r\n        var elementId = fragment.StartsWith(""#"") ? fragment.Substring(1) : fragment;\r\n\r\n        if(string.IsNullOrEmpty(elementId))\r\n        {\r\n            return;\r\n        }\r\n    \r\n        ScrollToElementId(elementId);\r\n    }\r\n\r\n    private static bool ScrollToElementId(string elementId)\r\n    {\r\n        return JSRuntime.Current.InvokeAsync<bool>(""scrollToElementId"", elementId).GetAwaiter().GetResult();\r\n    }\r\n}\r\n```\r\n\r\n### Additional context\r\n\r\n`blazor 0.8.0-preview-19104-04`\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview-010184\r\n Commit:    c57bde4593\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010184\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview-27324-5\r\n  Commit:  63a01b08e5\r\n\r\n.NET Core SDKs installed:\r\n  2.1.600-preview-009426 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview-010184 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview-19075-0444 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27324-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview-27325-3 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```",enhancement|area-blazor|affected-most|severity-minor|Priority:1|feature-blazor-builtin-components,surayya-MS,"### Describe the bug\r\n\r\nI cannot use an html anchor to navigate to a specific html element of a page. \r\n\r\n### To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\nGiven there is a Blazor page that looks like the following: \r\n\r\n```razor\r\n@layout MainLayout\r\n@page ""/foo""\r\n\r\n<nav>\r\n    <!-- One version I've tried -->\r\n    <a href=""#bar"">Bar</a>\r\n\r\n    <!-- Another version I've tried -->\r\n    <NavLink href=""#bar"">Bar</NavLink>\r\n\r\n    @* ... *@\r\n</nav>\r\n\r\n@* ... *@\r\n\r\n<section>\r\n    <h2 id=""bar"">Bar</h2>\r\n     @* ... *@\r\n</section>\r\n```\r\n\r\nWhen I click the link to Bar, i get redirected to the route `http://localhost:5000/foo#bar`, but will be at the top of the page. The fragment of the route is not used for selection of a specific HTML element. \r\n\r\n### Expected behavior\r\n\r\nThe browser should scroll down to the proper element, as specified by the [Element Selector](https://www.w3.org/TR/selectors-3/). \r\n\r\nIn cases where the fragment of the URL is used for other purposes, ie. for OAuth, it should be possible to overwrite the default Blazor router behavior. The behavior should be set on a per-page and per-app level. \r\n\r\n### Workaround\r\n\r\nThe proposed workaround does not work, since the browser crashes and is only for illustration.\r\n\r\nThe current workaround is to write explicit code that interprets the URL. In the example above, we could use a little bit of JavaScript and then call that from our Blazor code: \r\n\r\n```html\r\n<!-- in index.html -->\r\n<script>\r\n        window.scrollToElementId = (elementId) => {\r\n            console.info('scrolling to element', elementId);\r\n            var element = document.getElementById(elementId);\r\n            if(!element)\r\n            {\r\n                console.warn('element was not found', elementId);\r\n                return false;\r\n            }\r\n            element.scrollIntoView();\r\n            return true;\r\n        }\r\n</script>\r\n```\r\n\r\n```razor\r\n@inject Microsoft.AspNetCore.Components.Services.IUriHelper UriHelper\r\n\r\n@functions {\r\n    protected override void OnInit()\r\n    {\r\n        NavigateToElement();\r\n        UriHelper.OnLocationChanged += OnLocationChanges;\r\n    }\r\n\r\n    private void OnLocationChanges(object sender, string location) => NavigateToElement();\r\n\r\n    private void NavigateToElement()\r\n    {\r\n        var url = UriHelper.GetAbsoluteUri();\r\n        var fragment = new Uri(url).Fragment;\r\n\r\n        if(string.IsNullOrEmpty(fragment))\r\n        {\r\n            return;\r\n        }\r\n\r\n        var elementId = fragment.StartsWith(""#"") ? fragment.Substring(1) : fragment;\r\n\r\n        if(string.IsNullOrEmpty(elementId))\r\n        {\r\n            return;\r\n        }\r\n    \r\n        ScrollToElementId(elementId);\r\n    }\r\n\r\n    private static bool ScrollToElementId(string elementId)\r\n    {\r\n        return JSRuntime.Current.InvokeAsync<bool>(""scrollToElementId"", elementId).GetAwaiter().GetResult();\r\n    }\r\n}\r\n```\r\n\r\n### Additional context\r\n\r\n`blazor 0.8.0-preview-19104-04`\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview-010184\r\n Commit:    c57bde4593\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010184\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview-27324-5\r\n  Commit:  63a01b08e5\r\n\r\n.NET Core SDKs installed:\r\n  2.1.600-preview-009426 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview-010184 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview-19075-0444 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27324-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview-27325-3 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```","html\r\n<!-- in index.html -->\r\n<script>\r\n        window.scrollToElementId = (elementId) => {\r\n            console.info('scrolling to element', elementId);\r\n            var element = document.getElementById(elementId);\r\n            if(!element)\r\n            {\r\n                console.warn('element was not found', elementId);\r\n                return false;\r\n            }\r\n            element.scrollIntoView();\r\n            return true;\r\n        }\r\n</script>\r\n"
8388,"The Asp.Net Web Api get request cannot return a result larger than 20K### Describe the bug\r\nThe Asp.Net Web Api get request cannot return a result larger than 20K.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core '3.0.0-preview3-19153-02' with VS 2019 v 16.0.0 Preview 4.1\r\n2. Run this cmd ```dotnet new blazorhosted```\r\n3. With these code changes\r\nChange the Range from 5 to 200 in the following line.\r\n\r\nThe line should look like this\r\n\r\n4. Run the App\r\nClick on the ""Fetch Data"" nav menu item.\r\n\r\n5. See error\r\nNo data is displayed.\r\n\r\n### Expected behavior\r\n1. The page should display 200 lines of WeatherForecast Data\r\n2. I would expect to see an exception.\r\n\r\n### Screenshots\r\nN/A\r\n### Additional context\r\nThis worked in asp.net core preview 2\r\nSome investigation showed that the call to the WebApi\r\n\r\nwas returning garbage.\r\n\r\nOutput of `dotnet --info`\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600-preview-009472 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600-preview-009497 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.103 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\n",:heavy_check_mark: Resolution: Duplicate|investigate|area-blazor,javiercn,"### Describe the bug\r\nThe Asp.Net Web Api get request cannot return a result larger than 20K.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core '3.0.0-preview3-19153-02' with VS 2019 v 16.0.0 Preview 4.1\r\n2. Run this cmd ```dotnet new blazorhosted```\r\n3. With these code changes\r\nChange the Range from 5 to 200 in the following line.\r\n```C#\r\nreturn Enumerable.Range(1, 5).Select(index => new WeatherForecast\r\n```\r\nThe line should look like this\r\n```C#\r\nreturn Enumerable.Range(1, 200).Select(index => new WeatherForecast\r\n```\r\n4. Run the App\r\nClick on the ""Fetch Data"" nav menu item.\r\n\r\n5. See error\r\nNo data is displayed.\r\n\r\n### Expected behavior\r\n1. The page should display 200 lines of WeatherForecast Data\r\n2. I would expect to see an exception.\r\n\r\n### Screenshots\r\nN/A\r\n### Additional context\r\nThis worked in asp.net core preview 2\r\nSome investigation showed that the call to the WebApi\r\n```C#\r\nforecasts = await Http.GetJsonAsync<WeatherForecast[]>(""api/SampleData/WeatherForecasts"");\r\n```\r\nwas returning garbage.\r\n\r\nOutput of `dotnet --info`\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600-preview-009472 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600-preview-009497 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.103 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\n","C#\r\nreturn Enumerable.Range(1, 5).Select(index => new WeatherForecast\r\n"
8374,"Reuse previous materialized stringsFor each request from the browser a lot of repeated headers are sent that are identical to the previous request. This results in a lot of string allocations, especially for `Accept`, `Cookie` and `User-Agent` when materializing these values.\r\n\r\nThis change drops the sustained allocations to zero bytes/s for middleware with Json TE headers (e.g. 320MB less per 1M requests); will also drop header string allocation for MVC etc by the same amount.\r\n\r\n![image](https://user-images.githubusercontent.com/1142958/55302126-9fa78080-5437-11e9-9976-77ad6fac8fa9.png)\r\n\r\nWhich fits with the goals of aspnet applications being able to run under lower memory conditions (See: [""Proposal for .NET Core GC Support for Docker Limits""](https://github.com/dotnet/designs/blob/261698cb9c56bab0bc7b54b938fa097d729a144f/proposed/support-for-docker-limits.md))\r\n\r\n![image](https://user-images.githubusercontent.com/1142958/54391486-de4de480-469c-11e9-83af-5bd60cfaf02f.png)\r\n\r\nThis PR introduces `DisableStringReuse` which went `false` to reduces allocations for repeated request headers.\r\n\r\n\r\n\r\nPre\r\n```\r\n               Method |              |       Mean |        Op/s |   Gen 0 | Allocated |\r\n--------------------- |------------- |-----------:|------------:|--------:|----------:|\r\n PlaintextTechEmpower |              |   650.1 ns | 1,538,199.2 |  8.3008 |    168 KB |\r\n           LiveAspNet |              | 1,487.8 ns |   672,119.6 | 26.3672 |    504 KB |\r\n```\r\nPost\r\n```\r\n               Method | ReuseHeaders |       Mean |        Op/s |   Gen 0 | Allocated |\r\n--------------------- |------------- |-----------:|------------:|--------:|----------:|\r\n PlaintextTechEmpower |        False |   593.3 ns | 1,685,440.5 |  7.3242 |    144 KB |\r\n           LiveAspNet |        False | 1,092.5 ns |   915,301.9 | 22.4609 |    440 KB |\r\n                      |              |            |             |         |           |\r\n PlaintextTechEmpower |         True |   526.0 ns | 1,901,193.1 |       - |       0 B |\r\n           LiveAspNet |         True |   871.9 ns | 1,146,875.8 |       - |       0 B |\r\n```\r\nThis change drops ~320MB of allocations for ~1M requests of non-pipelined Json TE benchmark\r\n```\r\nwrk -c 128 -t 4 -d 45 -H ""Accept: application/json,text/html;q=0.9,application/xhtml+xml;q=0.9,application/xml;q=0.8,*/*;q=0.7"" -H ""Connection: keep-alive"" http://127.0.0.1:5001\r\n```\r\n\r\nAddresses #8372",area-networking,halter73|Tratcher,"For each request from the browser a lot of repeated headers are sent that are identical to the previous request. This results in a lot of string allocations, especially for `Accept`, `Cookie` and `User-Agent` when materializing these values.\r\n\r\nThis change drops the sustained allocations to zero bytes/s for middleware with Json TE headers (e.g. 320MB less per 1M requests); will also drop header string allocation for MVC etc by the same amount.\r\n\r\n![image](https://user-images.githubusercontent.com/1142958/55302126-9fa78080-5437-11e9-9976-77ad6fac8fa9.png)\r\n\r\nWhich fits with the goals of aspnet applications being able to run under lower memory conditions (See: [""Proposal for .NET Core GC Support for Docker Limits""](https://github.com/dotnet/designs/blob/261698cb9c56bab0bc7b54b938fa097d729a144f/proposed/support-for-docker-limits.md))\r\n\r\n![image](https://user-images.githubusercontent.com/1142958/54391486-de4de480-469c-11e9-83af-5bd60cfaf02f.png)\r\n\r\nThis PR introduces `DisableStringReuse` which went `false` to reduces allocations for repeated request headers.\r\n\r\n```csharp\r\npublic partial class KestrelServerOptions\r\n{\r\n/// <summary>\r\n/// Gets or sets a value that controls whether the string values materialized\r\n/// will be reused across requests; if they match, or if the strings will always be reallocated.\r\n/// </summary>\r\n/// <remarks>\r\n/// Defaults to false.\r\n/// </remarks>\r\npublic bool DisableStringReuse { get; set; } = false;\r\n}\r\n```\r\n\r\nPre\r\n```\r\n               Method |              |       Mean |        Op/s |   Gen 0 | Allocated |\r\n--------------------- |------------- |-----------:|------------:|--------:|----------:|\r\n PlaintextTechEmpower |              |   650.1 ns | 1,538,199.2 |  8.3008 |    168 KB |\r\n           LiveAspNet |              | 1,487.8 ns |   672,119.6 | 26.3672 |    504 KB |\r\n```\r\nPost\r\n```\r\n               Method | ReuseHeaders |       Mean |        Op/s |   Gen 0 | Allocated |\r\n--------------------- |------------- |-----------:|------------:|--------:|----------:|\r\n PlaintextTechEmpower |        False |   593.3 ns | 1,685,440.5 |  7.3242 |    144 KB |\r\n           LiveAspNet |        False | 1,092.5 ns |   915,301.9 | 22.4609 |    440 KB |\r\n                      |              |            |             |         |           |\r\n PlaintextTechEmpower |         True |   526.0 ns | 1,901,193.1 |       - |       0 B |\r\n           LiveAspNet |         True |   871.9 ns | 1,146,875.8 |       - |       0 B |\r\n```\r\nThis change drops ~320MB of allocations for ~1M requests of non-pipelined Json TE benchmark\r\n```\r\nwrk -c 128 -t 4 -d 45 -H ""Accept: application/json,text/html;q=0.9,application/xhtml+xml;q=0.9,application/xml;q=0.8,*/*;q=0.7"" -H ""Connection: keep-alive"" http://127.0.0.1:5001\r\n```\r\n\r\nAddresses #8372","csharp\r\npublic partial class KestrelServerOptions\r\n{\r\n/// <summary>\r\n/// Gets or sets a value that controls whether the string values materialized\r\n/// will be reused across requests; if they match, or if the strings will always be reallocated.\r\n/// </summary>\r\n/// <remarks>\r\n/// Defaults to false.\r\n/// </remarks>\r\npublic bool DisableStringReuse { get; set; } = false;\r\n}\r\n"
8352,"Remove extra empty line in Razor Pages Startup.cs before call to '.AddMvc()'Before this line:\r\nhttps://github.com/aspnet/AspNetCore/blob/bc009fc0f180532e003b7d3e466c5a1a2456a630/src/ProjectTemplates/Web.ProjectTemplates/content/RazorPagesWeb-CSharp/Startup.cs#L131\r\n\r\nDepending on options, it ends up generating two empty lines between services:\r\n\r\n\r\n\r\nI believe you get this state when selecting Individual Auth.",Done|area-mvc,ryanbrandenburg,"Before this line:\r\nhttps://github.com/aspnet/AspNetCore/blob/bc009fc0f180532e003b7d3e466c5a1a2456a630/src/ProjectTemplates/Web.ProjectTemplates/content/RazorPagesWeb-CSharp/Startup.cs#L131\r\n\r\nDepending on options, it ends up generating two empty lines between services:\r\n\r\n```c#\r\n            services.AddDefaultIdentity<IdentityUser>()\r\n                .AddDefaultUI(UIFramework.Bootstrap4)\r\n                .AddEntityFrameworkStores<ApplicationDbContext>();\r\n\r\n\r\n            services.AddMvc()\r\n                .AddNewtonsoftJson();\r\n```\r\n\r\nI believe you get this state when selecting Individual Auth.",c#\r\n            services.AddDefaultIdentity<IdentityUser>()\r\n                .AddDefaultUI(UIFramework.Bootstrap4)\r\n                .AddEntityFrameworkStores<ApplicationDbContext>();\r\n\r\n\r\n            services.AddMvc()\r\n                .AddNewtonsoftJson();\r\n
8336,"[Components] `EventCallback<T>` changes the `RenderTreeBuilder.AddAttribute(object)` behavior### Describe the bug\r\nThe introduction of `EventCallback<T>` in #6351 changes the behavior of `RenderTreeBuilder.AddAttribute(object)` such that calls that were previously treated as delegates \u2014\xa0an `onclick` attribute, for example \u2014 now fall back to a `ToString()` call.\r\n\r\nThis breaks code between Blazor 0.8 and 0.9, and doesn't appear to be the intended behavior of the `AddAttribute(object)` overload. [There still _exists_ a case for delegates](https://github.com/aspnet/AspNetCore/blob/98fe8a8328a0b41ac776a1ccdc71943de8093440/src/Components/Components/src/RenderTree/RenderTreeBuilder.cs#L386), but it doesn't seem to be used any more:\r\n\r\n\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core: 3.0.0-preview3-19153-02\r\n2. Run this code:\r\n\r\n\r\n\r\n### Expected behavior\r\n`param.Value` should be recognized as a delegate.\r\n\r\n### Actual behavior\r\n`RenderTreeBuilder` falls back to treating `param.Value` as an unrecognized object, and calls `ToString()` on it.\r\n\r\nTherefore, in the generated DOM in the browser looks something like:\r\n\r\n\r\n\r\n### Additional context\r\nThis came up in the _BlazorStrap_ project, and is tracked there as https://github.com/chanan/BlazorStrap/issues/42.",bug|Done|area-blazor,rynowak,"### Describe the bug\r\nThe introduction of `EventCallback<T>` in #6351 changes the behavior of `RenderTreeBuilder.AddAttribute(object)` such that calls that were previously treated as delegates \u2014\xa0an `onclick` attribute, for example \u2014 now fall back to a `ToString()` call.\r\n\r\nThis breaks code between Blazor 0.8 and 0.9, and doesn't appear to be the intended behavior of the `AddAttribute(object)` overload. [There still _exists_ a case for delegates](https://github.com/aspnet/AspNetCore/blob/98fe8a8328a0b41ac776a1ccdc71943de8093440/src/Components/Components/src/RenderTree/RenderTreeBuilder.cs#L386), but it doesn't seem to be used any more:\r\n\r\n```csharp\r\n// BUG: Action<UIMouseEventArgs> in Blazor 0.8 _was_ a MulticastDelegate\r\n// but EventCallback<UIMouseEventArgs> is not!\r\nelse if (value is MulticastDelegate)\r\n{\r\n    Append(RenderTreeFrame.Attribute(sequence, name, value));\r\n}\r\n```\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core: 3.0.0-preview3-19153-02\r\n2. Run this code:\r\n\r\n```csharp\r\n        protected override void BuildRenderTree(RenderTreeBuilder builder)\r\n        {\r\n            base.BuildRenderTree(builder);\r\n            builder.OpenElement(0, ""MyCustomTag"");\r\n\r\n            var param = new KeyValuePair<string, object>(""onclick"", \r\n                EventCallback.Factory.Create<UIMouseEventArgs>(this, s => { }));\r\n\r\n            builder.AddAttribute(2, param.Key, param.Value);\r\n            builder.CloseElement();\r\n        }\r\n```\r\n\r\n### Expected behavior\r\n`param.Value` should be recognized as a delegate.\r\n\r\n### Actual behavior\r\n`RenderTreeBuilder` falls back to treating `param.Value` as an unrecognized object, and calls `ToString()` on it.\r\n\r\nTherefore, in the generated DOM in the browser looks something like:\r\n\r\n```html\r\n<button\r\nonclick=""Microsoft.AspNetCore.Components.EventCallback`1[[Microsoft.AspNetCore.Components.UIMouseEventArgs,\r\nMicrosoft.AspNetCore.Components,\r\nVersion=3.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]"">\r\n```\r\n\r\n### Additional context\r\nThis came up in the _BlazorStrap_ project, and is tracked there as https://github.com/chanan/BlazorStrap/issues/42.","csharp\r\n// BUG: Action<UIMouseEventArgs> in Blazor 0.8 _was_ a MulticastDelegate\r\n// but EventCallback<UIMouseEventArgs> is not!\r\nelse if (value is MulticastDelegate)\r\n{\r\n    Append(RenderTreeFrame.Attribute(sequence, name, value));\r\n}\r\n"
8317,"FileNotFoundException after copying and renaming a cshtml file in a Blazor appHere's what I did that resulted in this exception:\r\n- Create a new Blazor 0.9.0 standalone app in VS2019 Preview channel\r\n- Copy and paste *Index.cshtml* (generated name is *Index - Copy.cshtml*) and rename it to *Todos.cshtml*\r\n- Update the contents of *Todos.cshtml* with:\r\n\r\n  \r\n\r\n- Run the app and browse to /todos\r\n\r\nException from ActivityLog.xml\r\n\r\n```\r\nError encountered from project 'C:\\Users\\daroth\\Source\\Repos\\WebApplication6\\WebApplication6\\WebApplication6.csproj': System.IO.FileNotFoundException: Could not find file 'C:\\Users\\daroth\\Source\\Repos\\WebApplication6\\WebApplication6\\Pages\\Index - Copy.cshtml'. File name: 'C:\\Users\\daroth\\Source\\Repos\\WebApplication6\\WebApplication6\\Pages\\Index - Copy.cshtml'    at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)    at System.IO.FileInfo.get_Length()    at Roslyn.Utilities.FileUtilities.GetFileLength(String fullPath)    at Microsoft.CodeAnalysis.FileTextLoader.ValidateFileLength(Workspace workspace, String path)    at Microsoft.CodeAnalysis.FileTextLoader.<LoadTextAndVersionAsync>d__8.MoveNext() --- End of stack trace from previous location where exception was thrown ---    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at Microsoft.CodeAnalysis.Razor.ProjectSystem.DefaultProjectSnapshotManager.<>c__DisplayClass20_0.<<DocumentClosed>b__0>d.MoveNext() --- End of stack trace from previous location where exception was thrown ---    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at Microsoft.CodeAnalysis.Razor.ProjectSystem.DocumentState.<GetTextVersionAsync>d__25.MoveNext() --- End of stack trace from previous location where exception was thrown ---    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)    at Microsoft.CodeAnalysis.Razor.ProjectSystem.DocumentState.ComputedStateTracker.<GetGeneratedOutputAndVersionCoreAsync>d__7.MoveNext() --- End of stack trace from previous location where exception was thrown ---    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at Microsoft.CodeAnalysis.Razor.ProjectSystem.DefaultDocumentSnapshot.<GetGeneratedOutputAsync>d__20.MoveNext() --- End of stack trace from previous location where exception was thrown ---    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at Microsoft.CodeAnalysis.Razor.BackgroundDocumentGenerator.<ProcessDocument>d__39.MoveNext() --- End of stack trace from previous location where exception was thrown ---    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at Microsoft.CodeAnalysis.Razor.BackgroundDocumentGenerator.<TimerTick>d__43.MoveNext()\r\n```\r\n\r\n\r\n",investigate|area-blazor,ajaybhargavb,"Here's what I did that resulted in this exception:\r\n- Create a new Blazor 0.9.0 standalone app in VS2019 Preview channel\r\n- Copy and paste *Index.cshtml* (generated name is *Index - Copy.cshtml*) and rename it to *Todos.cshtml*\r\n- Update the contents of *Todos.cshtml* with:\r\n\r\n  ```cshtml\r\n  @page ""/todos""\r\n  <h1>Todos</h1>\r\n  ```\r\n\r\n- Run the app and browse to /todos\r\n\r\nException from ActivityLog.xml\r\n\r\n```\r\nError encountered from project 'C:\\Users\\daroth\\Source\\Repos\\WebApplication6\\WebApplication6\\WebApplication6.csproj': System.IO.FileNotFoundException: Could not find file 'C:\\Users\\daroth\\Source\\Repos\\WebApplication6\\WebApplication6\\Pages\\Index - Copy.cshtml'. File name: 'C:\\Users\\daroth\\Source\\Repos\\WebApplication6\\WebApplication6\\Pages\\Index - Copy.cshtml'    at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)    at System.IO.FileInfo.get_Length()    at Roslyn.Utilities.FileUtilities.GetFileLength(String fullPath)    at Microsoft.CodeAnalysis.FileTextLoader.ValidateFileLength(Workspace workspace, String path)    at Microsoft.CodeAnalysis.FileTextLoader.<LoadTextAndVersionAsync>d__8.MoveNext() --- End of stack trace from previous location where exception was thrown ---    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at Microsoft.CodeAnalysis.Razor.ProjectSystem.DefaultProjectSnapshotManager.<>c__DisplayClass20_0.<<DocumentClosed>b__0>d.MoveNext() --- End of stack trace from previous location where exception was thrown ---    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at Microsoft.CodeAnalysis.Razor.ProjectSystem.DocumentState.<GetTextVersionAsync>d__25.MoveNext() --- End of stack trace from previous location where exception was thrown ---    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)    at Microsoft.CodeAnalysis.Razor.ProjectSystem.DocumentState.ComputedStateTracker.<GetGeneratedOutputAndVersionCoreAsync>d__7.MoveNext() --- End of stack trace from previous location where exception was thrown ---    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at Microsoft.CodeAnalysis.Razor.ProjectSystem.DefaultDocumentSnapshot.<GetGeneratedOutputAsync>d__20.MoveNext() --- End of stack trace from previous location where exception was thrown ---    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at Microsoft.CodeAnalysis.Razor.BackgroundDocumentGenerator.<ProcessDocument>d__39.MoveNext() --- End of stack trace from previous location where exception was thrown ---    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at Microsoft.CodeAnalysis.Razor.BackgroundDocumentGenerator.<TimerTick>d__43.MoveNext()\r\n```\r\n\r\n\r\n","cshtml\r\n  @page ""/todos""\r\n  <h1>Todos</h1>\r\n  "
8274,"Tasks returned from JSRuntime.InvokeAsync during OnInitAsync never finishes in preview3### Describe the bug\r\nTasks returned from JSRuntime.InvokeAsync during second call to OnInitAsync (after prerendering) never finishes.\r\n\r\n### To Reproduce\r\nCreate a new razorcomponents project.\r\n\r\nAdd a js interop function to Index.cshtml and disable prerendering\r\n\r\n\r\n\r\nCall js interop during OnAsyncInit in Index.razor\r\n\r\n```razor\r\n<h1>@Greeting!</h1>\r\n\r\nWelcome to your new app.\r\n\r\n@functions {\r\n    string Greeting;\r\n\r\n    protected override async Task OnInitAsync()\r\n    {\r\n        try\r\n        {\r\n            Console.WriteLine(""Calling browser"");\r\n            Greeting = await JSRuntime.InvokeAsync<string>(""interopDuringOnInit"");\r\n            Console.WriteLine(""Returned from browser"");\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            Console.WriteLine(""Could not invoke interop during OnInit, "" + ex.ToString());\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nWhen OnInitAsync is called as part of an initial load (prerendering disabled) the task never finishes, This leaves the circuit hanging, and no further events are processed.\r\n\r\nIf this component is loaded from a `IUriHelper.OnLocationChange`, the above code works as expected. ",bug|Done|area-blazor,SteveSandersonMS|javiercn,"### Describe the bug\r\nTasks returned from JSRuntime.InvokeAsync during second call to OnInitAsync (after prerendering) never finishes.\r\n\r\n### To Reproduce\r\nCreate a new razorcomponents project.\r\n\r\nAdd a js interop function to Index.cshtml and disable prerendering\r\n\r\n```html\r\n    <script>\r\n        window.interopDuringOnInit = function() {\r\n            return ""Hello World"";\r\n        }\r\n    </script>\r\n\r\n    <app></app>\r\n\r\n    <script src=""_framework/components.server.js""></script>\r\n```\r\n\r\nCall js interop during OnAsyncInit in Index.razor\r\n\r\n```razor\r\n<h1>@Greeting!</h1>\r\n\r\nWelcome to your new app.\r\n\r\n@functions {\r\n    string Greeting;\r\n\r\n    protected override async Task OnInitAsync()\r\n    {\r\n        try\r\n        {\r\n            Console.WriteLine(""Calling browser"");\r\n            Greeting = await JSRuntime.InvokeAsync<string>(""interopDuringOnInit"");\r\n            Console.WriteLine(""Returned from browser"");\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            Console.WriteLine(""Could not invoke interop during OnInit, "" + ex.ToString());\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nWhen OnInitAsync is called as part of an initial load (prerendering disabled) the task never finishes, This leaves the circuit hanging, and no further events are processed.\r\n\r\nIf this component is loaded from a `IUriHelper.OnLocationChange`, the above code works as expected. ","html\r\n    <script>\r\n        window.interopDuringOnInit = function() {\r\n            return ""Hello World"";\r\n        }\r\n    </script>\r\n\r\n    <app></app>\r\n\r\n    <script src=""_framework/components.server.js""></script>\r\n"
8251,"Custom Header for localization### Is your feature request related to a problem? Please describe.\r\nI know the implementation of https://github.com/aspnet/AspNetCore/blob/c95ee2b051814b787b07f55ff224d03d550aafeb/src/Middleware/Localization/src/AcceptLanguageHeaderRequestCultureProvider.cs is great and using accept language is perfect but currently I'm migrating a legacy app who was built to use a custom header ""lang"" to use localization. I am moving forward the project from asp.net to asp.net core but It wasn't designed with many SOLID practices.\r\n\r\nI want to change less componts I can because I don't know currently the impact of changing the header and where it is used in the code, currently fighting with a lot of static HttpContext calls \U0001f44e .hahaha\r\n\r\n### Describe the solution you'd like\r\nWhat about if we can add a property to that class to take the language from a custom header instead, if so I can use this implementation and keep the header until I know it is safe to change it.\r\n\r\nIf you think it does make sense I can apply the change and do the proper tests.\r\n\r\n\r\nI'm thinking in  something like CookieName in CookieRequestCultureProvider\r\n\r\n\r\nor  a new implementation of the provider something like\r\n\r\n\r\n\r\nThanks.\r\n",help wanted|enhancement|:heavy_check_mark: Resolution: Won't Fix|area-mvc,ryanbrandenburg,"### Is your feature request related to a problem? Please describe.\r\nI know the implementation of https://github.com/aspnet/AspNetCore/blob/c95ee2b051814b787b07f55ff224d03d550aafeb/src/Middleware/Localization/src/AcceptLanguageHeaderRequestCultureProvider.cs is great and using accept language is perfect but currently I'm migrating a legacy app who was built to use a custom header ""lang"" to use localization. I am moving forward the project from asp.net to asp.net core but It wasn't designed with many SOLID practices.\r\n\r\nI want to change less componts I can because I don't know currently the impact of changing the header and where it is used in the code, currently fighting with a lot of static HttpContext calls \U0001f44e .hahaha\r\n\r\n### Describe the solution you'd like\r\nWhat about if we can add a property to that class to take the language from a custom header instead, if so I can use this implementation and keep the header until I know it is safe to change it.\r\n\r\nIf you think it does make sense I can apply the change and do the proper tests.\r\n\r\n\r\nI'm thinking in  something like CookieName in CookieRequestCultureProvider\r\n```C#\r\n            app.UseRequestLocalization(new RequestLocalizationOptions\r\n            {\r\n                RequestCultureProviders = new List<IRequestCultureProvider>\r\n                {\r\n                    new AcceptLanguageHeaderRequestCultureProvider\r\n                    {\r\n                          HeaderKey = ""lang""\r\n                    }\r\n                }\r\n            });\r\n```\r\n\r\nor  a new implementation of the provider something like\r\n\r\n```C#\r\n            app.UseRequestLocalization(new RequestLocalizationOptions\r\n            {\r\n                RequestCultureProviders = new List<IRequestCultureProvider>\r\n                {\r\n                    new AcceptHeaderRequestCultureProvider(""lang"")\r\n                }\r\n            });\r\n```\r\n\r\nThanks.\r\n","C#\r\n            app.UseRequestLocalization(new RequestLocalizationOptions\r\n            {\r\n                RequestCultureProviders = new List<IRequestCultureProvider>\r\n                {\r\n                    new AcceptLanguageHeaderRequestCultureProvider\r\n                    {\r\n                          HeaderKey = ""lang""\r\n                    }\r\n                }\r\n            });\r\n"
8232,"Support 'key' to guarantee preservation of elements/componentsThis is inspired by, and would basically be equivalent to, the `key` feature in React. It provides a way to tell the system how you want it to preserve child element/component instances when diffing a list.\r\n\r\n### Use case\r\n\r\nConsider the existing situation where you *don't* have this feature:\r\n\r\n\r\n\r\nIf you add a new flight into the middle of the `Flights` list, what you'd want is that all the existing `DetailsCard` instances are unaffected, and one new `DetailsCard` gets created and put into the rendered output.\r\n\r\nTo visualize this, if `Flights` previously contained `[F0, F1, F2]`, then this is the **before** state:\r\n\r\n * DetailsCard0, with Flight=F0\r\n * DetailsCard1, with Flight=F1\r\n * DetailsCard2, with Flight=F2\r\n\r\n... and this is the **desired after** state, given we insert a new item `FNew` at index 1:\r\n\r\n * DetailsCard0, with Flight=F0\r\n * DetailsCardNew, with Flight=FNew\r\n * DetailsCard1, with Flight=F1\r\n * DetailsCard2, with Flight=F2\r\n\r\nHowever, the **actual after** state with the present diff algorithm is this:\r\n\r\n * DetailsCard0, with Flight=F0\r\n * DetailsCard1, with Flight=FNew\r\n * DetailsCard2, with Flight=F1\r\n * DetailsCardNew, with Flight=F2\r\n\r\nThe system has no way to know that DetailsCard2 or DetailsCard3 should preserve their associations with their older Flight instances, so it just re-associates them with whatever Flight matches their position in the list. As a result, DetailsCard1 and DetailsCard2 rebuild themselves completely using new data, which is wasteful and sometimes even leads to user-visible problems (e.g., input focus is unexpectedly lost).\r\n\r\n#### Fixing this with 'key'\r\n\r\nThe developer should be able to make their app more efficient (and sometimes, better behaving) using `key` like this:\r\n\r\n\r\n\r\nHere, `key` is a new built-in intrinsic that you can use on **any component**, or **any element**. The result of this will be that you do get the **desired after** state shown above.\r\n\r\nTo achieve this, the diff algorithm:\r\n\r\n  * Notices if you've supplied a `key`, then from that point onwards within the current parent frame (in the above example, the `<div>`), it changes the rules for retaining child elements/components\r\n  * In this mode, previous child elements/components are reused if and only if their old frames have the same `key` value as the new frames.\r\n  * That is, use of `key` is a equally a way of guaranteeing the *non-preservation* of children that don't match existing frames\r\n    * As a further improvement, we might want to refine this by saying we *can* preserve any instances where both old and new don't have any `key` specified, like the system already does. Not sure whether that will complicate the implementation. It would improve efficiency in cases where you have a lot of top-level elements/components within a `@foreach` block, and are only using `key` for some of them.\r\n  * If the `key` value is an `int`, we can use and compare it directly (and can store such values on the `RenderTreeFrame` without additional boxing). For other types, we'll have to call `GetHashCode` to get an `int`. We can accept `null` and give it some arbitrary int value (e.g., `0`). Alternatively, we could consider doing reference comparisons for other types, as the perf would be improved but it might surprise people that we don't respect `GetHashCode`.\r\n  * If the `key` values aren't unique within a given parent, this is an anomalous case, and preservation behavior is undefined. We'll probably preserve the first instance for each nonunique key value, and then create new instances for the rest. As long as the output is legal (like it already is) we don't have to define the rules more precisely.\r\n  * If the `key` values match a certain old and new frame, but those frames aren't candidates for retention (e.g., they are different types of child component or element), this is a anomalous case, and the system will do whatever's easiest to implement while still being legal diff output. For example, we might consider that key value to be ""used up"" even though we don't retain the child (because it was incompatible).\r\n\r\nImplementation note: Naively, this can be achieved either by a nested loop (for each new output frame, scan the old frames to find one with a matching key, and somehow track which ones were used already), or by a hash join (while processing, build a dictionary of the old frames by key, then iterate over the output frames to attach the corresponding children or create new children when there isn't a match). However we would want to avoid allocations, so might need some shared dictionary within the diff context.\r\n\r\nTo be clear, even though the example above uses `key` on a component, you could equally use it on plain HTML elements, e.g.:\r\n\r\n\r\n\r\nThis is valuable because it ensures you preserve things like focus, cursor position, visibility state of tooltips, etc., if the system injects new items into the list while the user is interacting with it.\r\n\r\n### Why can't the system do this automatically? Why does the developer have to specify `key` explicitly?\r\n\r\nTheoretically we could make this more automatic, using either of these techniques:\r\n\r\n * Within a `@foreach (var x in ...) { ... }` block, we could implicitly put a `key=@x` on the first top-level component/element in the block. Drawbacks:\r\n    * Adding another top-level thing might break your app by changing retention behavior, which is surprising and weird\r\n    * It adds diff cost in all cases, even when there's no benefit\r\n * Or, we make the default retention logic more sophisticated, so that even without any `key`, it tries to find the optimal old-new matches by diffing the attributes and picking matches to minimize edit distance.\r\n    * I think it's obvious that we're not going to want to add this extra diff cost in all cases, especially given how it makes the behavior harder to predict. People would end up with really obscure, hard-to-repro bugs where the retention behavior switches around depending on user-entered data.",Done|enhancement|Components Big Rock|area-blazor,SteveSandersonMS,"This is inspired by, and would basically be equivalent to, the `key` feature in React. It provides a way to tell the system how you want it to preserve child element/component instances when diffing a list.\r\n\r\n### Use case\r\n\r\nConsider the existing situation where you *don't* have this feature:\r\n\r\n```html\r\n<div>\r\n    @foreach (var flight in Flights)\r\n    {\r\n        <DetailsCard Flight=""@flight"" />\r\n    }\r\n</div>\r\n```\r\n\r\nIf you add a new flight into the middle of the `Flights` list, what you'd want is that all the existing `DetailsCard` instances are unaffected, and one new `DetailsCard` gets created and put into the rendered output.\r\n\r\nTo visualize this, if `Flights` previously contained `[F0, F1, F2]`, then this is the **before** state:\r\n\r\n * DetailsCard0, with Flight=F0\r\n * DetailsCard1, with Flight=F1\r\n * DetailsCard2, with Flight=F2\r\n\r\n... and this is the **desired after** state, given we insert a new item `FNew` at index 1:\r\n\r\n * DetailsCard0, with Flight=F0\r\n * DetailsCardNew, with Flight=FNew\r\n * DetailsCard1, with Flight=F1\r\n * DetailsCard2, with Flight=F2\r\n\r\nHowever, the **actual after** state with the present diff algorithm is this:\r\n\r\n * DetailsCard0, with Flight=F0\r\n * DetailsCard1, with Flight=FNew\r\n * DetailsCard2, with Flight=F1\r\n * DetailsCardNew, with Flight=F2\r\n\r\nThe system has no way to know that DetailsCard2 or DetailsCard3 should preserve their associations with their older Flight instances, so it just re-associates them with whatever Flight matches their position in the list. As a result, DetailsCard1 and DetailsCard2 rebuild themselves completely using new data, which is wasteful and sometimes even leads to user-visible problems (e.g., input focus is unexpectedly lost).\r\n\r\n#### Fixing this with 'key'\r\n\r\nThe developer should be able to make their app more efficient (and sometimes, better behaving) using `key` like this:\r\n\r\n```html\r\n<div>\r\n    @foreach (var flight in Flights)\r\n    {\r\n        <DetailsCard key=""@flight"" Flight=""@flight"" />\r\n    }\r\n</div>\r\n```\r\n\r\nHere, `key` is a new built-in intrinsic that you can use on **any component**, or **any element**. The result of this will be that you do get the **desired after** state shown above.\r\n\r\nTo achieve this, the diff algorithm:\r\n\r\n  * Notices if you've supplied a `key`, then from that point onwards within the current parent frame (in the above example, the `<div>`), it changes the rules for retaining child elements/components\r\n  * In this mode, previous child elements/components are reused if and only if their old frames have the same `key` value as the new frames.\r\n  * That is, use of `key` is a equally a way of guaranteeing the *non-preservation* of children that don't match existing frames\r\n    * As a further improvement, we might want to refine this by saying we *can* preserve any instances where both old and new don't have any `key` specified, like the system already does. Not sure whether that will complicate the implementation. It would improve efficiency in cases where you have a lot of top-level elements/components within a `@foreach` block, and are only using `key` for some of them.\r\n  * If the `key` value is an `int`, we can use and compare it directly (and can store such values on the `RenderTreeFrame` without additional boxing). For other types, we'll have to call `GetHashCode` to get an `int`. We can accept `null` and give it some arbitrary int value (e.g., `0`). Alternatively, we could consider doing reference comparisons for other types, as the perf would be improved but it might surprise people that we don't respect `GetHashCode`.\r\n  * If the `key` values aren't unique within a given parent, this is an anomalous case, and preservation behavior is undefined. We'll probably preserve the first instance for each nonunique key value, and then create new instances for the rest. As long as the output is legal (like it already is) we don't have to define the rules more precisely.\r\n  * If the `key` values match a certain old and new frame, but those frames aren't candidates for retention (e.g., they are different types of child component or element), this is a anomalous case, and the system will do whatever's easiest to implement while still being legal diff output. For example, we might consider that key value to be ""used up"" even though we don't retain the child (because it was incompatible).\r\n\r\nImplementation note: Naively, this can be achieved either by a nested loop (for each new output frame, scan the old frames to find one with a matching key, and somehow track which ones were used already), or by a hash join (while processing, build a dictionary of the old frames by key, then iterate over the output frames to attach the corresponding children or create new children when there isn't a match). However we would want to avoid allocations, so might need some shared dictionary within the diff context.\r\n\r\nTo be clear, even though the example above uses `key` on a component, you could equally use it on plain HTML elements, e.g.:\r\n\r\n```html\r\n@foreach (var todo in TodoItems)\r\n{\r\n    <input key=""@todo.Id"" bind=""@todo.Text"" />\r\n}\r\n```\r\n\r\nThis is valuable because it ensures you preserve things like focus, cursor position, visibility state of tooltips, etc., if the system injects new items into the list while the user is interacting with it.\r\n\r\n### Why can't the system do this automatically? Why does the developer have to specify `key` explicitly?\r\n\r\nTheoretically we could make this more automatic, using either of these techniques:\r\n\r\n * Within a `@foreach (var x in ...) { ... }` block, we could implicitly put a `key=@x` on the first top-level component/element in the block. Drawbacks:\r\n    * Adding another top-level thing might break your app by changing retention behavior, which is surprising and weird\r\n    * It adds diff cost in all cases, even when there's no benefit\r\n * Or, we make the default retention logic more sophisticated, so that even without any `key`, it tries to find the optimal old-new matches by diffing the attributes and picking matches to minimize edit distance.\r\n    * I think it's obvious that we're not going to want to add this extra diff cost in all cases, especially given how it makes the behavior harder to predict. People would end up with really obscure, hard-to-repro bugs where the retention behavior switches around depending on user-entered data.","html\r\n<div>\r\n    @foreach (var flight in Flights)\r\n    {\r\n        <DetailsCard Flight=""@flight"" />\r\n    }\r\n</div>\r\n"
8189,"Add and document the pattern for forms and validation in components with collections of itemsConsider a model like:\r\n\r\n\r\nHow we would write a form that lets you add a dynamic number of emergency contacts? I tried this during some app building time, and there are some problems with it that we could make better.\r\n\r\n## Issue 1\r\n\r\nDoing the most obvious thing with a collection throws an IndexOutOfRangeException.\r\n\r\n![image](https://user-images.githubusercontent.com/1430011/53763865-a8308980-3e80-11e9-844b-f090f8cf5bf6.png)\r\n\r\nThis works fine if you do it like this:\r\n\r\n![image](https://user-images.githubusercontent.com/1430011/53763898-bbdbf000-3e80-11e9-8b94-09fde7b7549f.png)\r\n\r\n## Issue 2\r\n\r\nValidation doesn't automatically traverse the members of something so you have to manually add validation support for any sattelite objects you want validated.\r\n\r\nExample: https://github.com/rynowak/ComponentFunTime/blob/master/Components/Shared/EmployeeEditor.razor#L85",bug|Needs: Design|area-blazor,pranavkm,"Consider a model like:\r\n```C#\r\n\r\npublic class Person\r\n{\r\n    public string Name { get; set; }\r\n\r\n    public List<Contact> EmergencyContacts { get; set;  }\r\n}\r\n\r\npublic class EmergencyContact\r\n{\r\n    public string Name { get; set; }\r\n\r\n    public string PhoneNumber { get; set; }\r\n}\r\n```\r\n\r\nHow we would write a form that lets you add a dynamic number of emergency contacts? I tried this during some app building time, and there are some problems with it that we could make better.\r\n\r\n## Issue 1\r\n\r\nDoing the most obvious thing with a collection throws an IndexOutOfRangeException.\r\n\r\n![image](https://user-images.githubusercontent.com/1430011/53763865-a8308980-3e80-11e9-844b-f090f8cf5bf6.png)\r\n\r\nThis works fine if you do it like this:\r\n\r\n![image](https://user-images.githubusercontent.com/1430011/53763898-bbdbf000-3e80-11e9-8b94-09fde7b7549f.png)\r\n\r\n## Issue 2\r\n\r\nValidation doesn't automatically traverse the members of something so you have to manually add validation support for any sattelite objects you want validated.\r\n\r\nExample: https://github.com/rynowak/ComponentFunTime/blob/master/Components/Shared/EmployeeEditor.razor#L85",C#\r\n\r\npublic class Person\r\n{\r\n    public string Name { get; set; }\r\n\r\n    public List<Contact> EmergencyContacts { get; set;  }\r\n}\r\n\r\npublic class EmergencyContact\r\n{\r\n    public string Name { get; set; }\r\n\r\n    public string PhoneNumber { get; set; }\r\n}\r\n
8161,"Razor SDK shouldn't generate the MVC recompilation attributes unless its necessary### Describe the bug\r\nA web SDK project that targets `netcoreapp3.0` with no razor files will unconditionally have these attributes:\r\n\r\n\r\n\r\nThis adds extra runtime references to types that are probably not used. \r\n\r\nThis logic needs to be updated to consider whether you have any `.cshtml` files, and/or be based on some explicit gesture in the project file, or just obsoleted.\r\n\r\nBasing this on the presence of `.cshtml` files could cause issues in the case will cause issues in the following cases:\r\n1. You have no cshtml files at build time, and you are using runtime compilation when published\r\n2. Youe **application** is an F#/VB project, referencing class libraries for views, and you are using runtime compilation\r\n\r\nIt's also an impactful change, because it requires evaluating an item group to evaluate a property, which means that it has to be in a target. \r\n\r\n-----\r\n\r\nThe `RelatedAssemblyPartAttibute` is purely for discovery of compiled views/pages and should be made conditional without reservation.\r\n\r\nThe `Razor.Hosting` attributes are for the settings used by runtime compilation. We could consider obsoleting these now that runtime compilation is outside the shared framework. However - we need to consider the impact on downlevel. If this logic is inside the `Razor.Design` package in 2.1/2.2 we can remove it from the SDK and say that it's not needed/supported in 3.0.",bug|Done|area-mvc,pranavkm,"### Describe the bug\r\nA web SDK project that targets `netcoreapp3.0` with no razor files will unconditionally have these attributes:\r\n\r\n```C#\r\n[assembly: Microsoft.AspNetCore.Mvc.ApplicationParts.RelatedAssemblyAttribute(""SampleApp.Views"")]\r\n[assembly: Microsoft.AspNetCore.Razor.Hosting.RazorLanguageVersionAttribute(""3.0"")]\r\n[assembly: Microsoft.AspNetCore.Razor.Hosting.RazorConfigurationNameAttribute(""MVC-3.0"")]\r\n[assembly: Microsoft.AspNetCore.Razor.Hosting.RazorExtensionAssemblyNameAttribute(""MVC-3.0"", ""Microsoft.AspNetCore.Mvc.Razor.Extensions"")]\r\n```\r\n\r\nThis adds extra runtime references to types that are probably not used. \r\n\r\nThis logic needs to be updated to consider whether you have any `.cshtml` files, and/or be based on some explicit gesture in the project file, or just obsoleted.\r\n\r\nBasing this on the presence of `.cshtml` files could cause issues in the case will cause issues in the following cases:\r\n1. You have no cshtml files at build time, and you are using runtime compilation when published\r\n2. Youe **application** is an F#/VB project, referencing class libraries for views, and you are using runtime compilation\r\n\r\nIt's also an impactful change, because it requires evaluating an item group to evaluate a property, which means that it has to be in a target. \r\n\r\n-----\r\n\r\nThe `RelatedAssemblyPartAttibute` is purely for discovery of compiled views/pages and should be made conditional without reservation.\r\n\r\nThe `Razor.Hosting` attributes are for the settings used by runtime compilation. We could consider obsoleting these now that runtime compilation is outside the shared framework. However - we need to consider the impact on downlevel. If this logic is inside the `Razor.Design` package in 2.1/2.2 we can remove it from the SDK and say that it's not needed/supported in 3.0.","C#\r\n[assembly: Microsoft.AspNetCore.Mvc.ApplicationParts.RelatedAssemblyAttribute(""SampleApp.Views"")]\r\n[assembly: Microsoft.AspNetCore.Razor.Hosting.RazorLanguageVersionAttribute(""3.0"")]\r\n[assembly: Microsoft.AspNetCore.Razor.Hosting.RazorConfigurationNameAttribute(""MVC-3.0"")]\r\n[assembly: Microsoft.AspNetCore.Razor.Hosting.RazorExtensionAssemblyNameAttribute(""MVC-3.0"", ""Microsoft.AspNetCore.Mvc.Razor.Extensions"")]\r\n"
8142,Buffering the entire request body in the pipe does not return the buffered data on the next read### Describe the bug\r\nBuffering a content-length request body to the end doesn't return the buffered data after reading.\r\n\r\n### To Reproduce\r\n\r\n\r\n\r\nReading the request body hangs in the second middleware.\r\n\r\n### Expected behavior\r\nThe api/values end point should parse the buffered body \r\n\r\n,bug|Done|area-networking,jkotalik,"### Describe the bug\r\nBuffering a content-length request body to the end doesn't return the buffered data after reading.\r\n\r\n### To Reproduce\r\n\r\n```C#\r\nusing System;\r\nusing System.Buffers;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.AspNetCore.Builder;\r\nusing Microsoft.AspNetCore.Hosting;\r\nusing Microsoft.AspNetCore.Http;\r\nusing Microsoft.Extensions.DependencyInjection;\r\nusing Microsoft.Extensions.Hosting;\r\n\r\nnamespace WebApplication101\r\n{\r\n    public class Startup\r\n    {\r\n        // This method gets called by the runtime. Use this method to add services to the container.\r\n        // For more information on how to configure your application, visit https://go.microsoft.com/fwlink/?LinkID=398940\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n        }\r\n\r\n        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.\r\n        public void Configure(IApplicationBuilder app, IWebHostEnvironment env)\r\n        {\r\n            if (env.IsDevelopment())\r\n            {\r\n                app.UseDeveloperExceptionPage();\r\n            }\r\n\r\n            app.Use(async (context, next) =>\r\n            {\r\n                if (context.Request.ContentLength is null)\r\n                {\r\n                    await next();\r\n                    return;\r\n                }\r\n\r\n                await context.Request.BufferAsync();\r\n\r\n                await next();\r\n            });\r\n\r\n            app.UseRouting(routes =>\r\n            {\r\n                routes.MapGet(""/"", async context =>\r\n                {\r\n                    await context.Response.WriteAsync(""Hello World!"");\r\n                });\r\n\r\n                routes.MapPost(""/api/values"", async context =>\r\n                {\r\n                    var result = await context.Request.BodyPipe.ReadAsync();\r\n                    var buffer = result.Buffer;\r\n\r\n                    var value = Encoding.UTF8.GetString(buffer.ToArray());\r\n\r\n                    await context.Response.WriteAsync(value);\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    public static class RequestBufferingExtensions\r\n    {\r\n        public static async Task BufferAsync(this HttpRequest request)\r\n        {\r\n            // Buffer the entire request body into the pipe\r\n            var cancellationToken = request.HttpContext.RequestAborted;\r\n\r\n            while (true)\r\n            {\r\n                var result = await request.BodyPipe.ReadAsync(cancellationToken);\r\n                var buffer = result.Buffer;\r\n                request.BodyPipe.AdvanceTo(buffer.Start, buffer.End);\r\n\r\n                if (result.IsCompleted)\r\n                {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nReading the request body hangs in the second middleware.\r\n\r\n### Expected behavior\r\nThe api/values end point should parse the buffered body \r\n\r\n","C#\r\nusing System;\r\nusing System.Buffers;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.AspNetCore.Builder;\r\nusing Microsoft.AspNetCore.Hosting;\r\nusing Microsoft.AspNetCore.Http;\r\nusing Microsoft.Extensions.DependencyInjection;\r\nusing Microsoft.Extensions.Hosting;\r\n\r\nnamespace WebApplication101\r\n{\r\n    public class Startup\r\n    {\r\n        // This method gets called by the runtime. Use this method to add services to the container.\r\n        // For more information on how to configure your application, visit https://go.microsoft.com/fwlink/?LinkID=398940\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n        }\r\n\r\n        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.\r\n        public void Configure(IApplicationBuilder app, IWebHostEnvironment env)\r\n        {\r\n            if (env.IsDevelopment())\r\n            {\r\n                app.UseDeveloperExceptionPage();\r\n            }\r\n\r\n            app.Use(async (context, next) =>\r\n            {\r\n                if (context.Request.ContentLength is null)\r\n                {\r\n                    await next();\r\n                    return;\r\n                }\r\n\r\n                await context.Request.BufferAsync();\r\n\r\n                await next();\r\n            });\r\n\r\n            app.UseRouting(routes =>\r\n            {\r\n                routes.MapGet(""/"", async context =>\r\n                {\r\n                    await context.Response.WriteAsync(""Hello World!"");\r\n                });\r\n\r\n                routes.MapPost(""/api/values"", async context =>\r\n                {\r\n                    var result = await context.Request.BodyPipe.ReadAsync();\r\n                    var buffer = result.Buffer;\r\n\r\n                    var value = Encoding.UTF8.GetString(buffer.ToArray());\r\n\r\n                    await context.Response.WriteAsync(value);\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    public static class RequestBufferingExtensions\r\n    {\r\n        public static async Task BufferAsync(this HttpRequest request)\r\n        {\r\n            // Buffer the entire request body into the pipe\r\n            var cancellationToken = request.HttpContext.RequestAborted;\r\n\r\n            while (true)\r\n            {\r\n                var result = await request.BodyPipe.ReadAsync(cancellationToken);\r\n                var buffer = result.Buffer;\r\n                request.BodyPipe.AdvanceTo(buffer.Start, buffer.End);\r\n\r\n                if (result.IsCompleted)\r\n                {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n"
7946,"More options for configuring services for WebApplicationFactory.### Is your feature request related to a problem? Please describe.\r\n \r\nI'm am trying to create integration tests of the controller, but I need to mock some of the dependencies registered in `Startup` class. Currently the only possible option of customisation is via call `builder.ConfigureServices` inside overriden method `ConfigureWebHost`. \r\nHowever, if the set of mocked dependencies changes from test to test it requires creation of multiple descendants of `WebApplicationFactory<TStartup>`.\r\n\r\nThere is one more problem. I use `SimpleInjector` DI container which is stored in property `Container` of `Startup` class. It means I have to access `Startup` class in order to configure registrations of mocks. (I don't want to expose `Container` as a `static` property as it brings potential problems with parallel test runs.)\r\n\r\n### Describe the solution you'd like\r\nI would like `WebApplicationFactory<TStartup>` class to have constructor with this signature and corresponding behaviour:\r\n\r\n",question|area-mvc,javiercn,"### Is your feature request related to a problem? Please describe.\r\n \r\nI'm am trying to create integration tests of the controller, but I need to mock some of the dependencies registered in `Startup` class. Currently the only possible option of customisation is via call `builder.ConfigureServices` inside overriden method `ConfigureWebHost`. \r\nHowever, if the set of mocked dependencies changes from test to test it requires creation of multiple descendants of `WebApplicationFactory<TStartup>`.\r\n\r\nThere is one more problem. I use `SimpleInjector` DI container which is stored in property `Container` of `Startup` class. It means I have to access `Startup` class in order to configure registrations of mocks. (I don't want to expose `Container` as a `static` property as it brings potential problems with parallel test runs.)\r\n\r\n### Describe the solution you'd like\r\nI would like `WebApplicationFactory<TStartup>` class to have constructor with this signature and corresponding behaviour:\r\n\r\n```CSharp\r\npublic WebApplicationFactory<TStartup>(\r\n    Action<IServiceCollection, TStartup> configureServices)\r\n```","CSharp\r\npublic WebApplicationFactory<TStartup>(\r\n    Action<IServiceCollection, TStartup> configureServices)\r\n"
7852,"ClientHandler seems to be duplicating the Host header### Describe the bug\r\nI was testing a scenario *(unit test with xUnit)* using [TestServer](https://github.com/aspnet/AspNetCore/blob/93a24b03bbda1aa0ab9b553a50b70dd36d554934/src/Hosting/TestHost/src/TestServer.cs) where I have a web host that listens to an incoming request then echos back some information about the request to the client.  \r\nOne of this information is the `Host` header.\r\nIn my case the host is listening on `proxy.com` but it doesn't really matter as I was getting the same problem regardless of the chosen domain.\r\nI always get back the value: `proxy.com,proxy.com` so it seems the header value is duplicated twice or copied twice.\r\n\r\n\r\n### To Reproduce\r\nCode is roughly the following:\r\n\r\n### Expected behavior\r\n`Host` header to have the value `proxy.com:5000`\r\n\r\n### Additional context\r\nI am using JetBrains Rider and I tried to step into the code and I saw the following:\r\nThis is a snippet from decompiled code of [ClientHandler](https://github.com/aspnet/AspNetCore/blob/f06e1822f50c033504610d3ffd04cd463f8db6d4/src/Hosting/TestHost/src/ClientHandler.cs)\r\n\r\nI see the `Host` header is appended too after it is set explicitly initially in the preceding code which seems to explain the issue I am facing *(partly)*\r\nChecking the [official source code](https://github.com/aspnet/AspNetCore/blob/f06e1822f50c033504610d3ffd04cd463f8db6d4/src/Hosting/TestHost/src/ClientHandler.cs#L69) on the GitHub repository yields this:\r\n\r\nAnd here the order looks *CORRECT*\r\n\r\nThis is where I get confused. I don't really know if I am doing something wrong or the compiler is re-ordering the code or is it Rider's decompiler fault or something else completely?\r\nThank you for your help",bug|area-hosting|area-networking,Tratcher,"### Describe the bug\r\nI was testing a scenario *(unit test with xUnit)* using [TestServer](https://github.com/aspnet/AspNetCore/blob/93a24b03bbda1aa0ab9b553a50b70dd36d554934/src/Hosting/TestHost/src/TestServer.cs) where I have a web host that listens to an incoming request then echos back some information about the request to the client.  \r\nOne of this information is the `Host` header.\r\nIn my case the host is listening on `proxy.com` but it doesn't really matter as I was getting the same problem regardless of the chosen domain.\r\nI always get back the value: `proxy.com,proxy.com` so it seems the header value is duplicated twice or copied twice.\r\n\r\n\r\n### To Reproduce\r\nCode is roughly the following:\r\n```c#\r\n[Fact]\r\npublic async Task ShouldEchoBackCorrectInformation()\r\n{\r\n    // Build Proxy TestServer\r\n    var proxyWebHostBuilder = new WebHostBuilder()\r\n        .UseStartup<ProxyStartup>()\r\n        .UseUrls(""http://proxy.com:5000"");\r\n    var proxyTestServer = new TestServer(proxyWebHostBuilder);\r\n\r\n    // Get HttpClient make a request to the proxy\r\n    var httpClient = new HttpClient(proxyTestServer.CreateHandler());\r\n    var response = await httpClient.GetAsync(""http://proxy.com:5000/"");\r\n    var responseText = await response.Content.ReadAsStringAsync();\r\n    responseText.Should().Contain(""Hi from Host ProxyHost"");\r\n    responseText.Should().Contain(""RequestUrl=http://proxy.com:5000/"");\r\n}\r\n\r\npublic class ProxyStartup\r\n{\r\n    app.Run(async context =>\r\n    {\r\n        context.Response.ContentType = ""text/plain"";\r\n        await context.Response.WriteAsync($""Hi from Host ProxyHost\\n"");\r\n        await context.Response.WriteAsync($""RequestUrl={context.Request.GetEncodedUrl()}\\n"");\r\n        await context.Response.WriteAsync($""PathBase={context.Request.PathBase}\\n"");\r\n        foreach (var requestHeader in context.Request.Headers)\r\n        {\r\n            await context.Response.WriteAsync(\r\n                $""{requestHeader.Key}={string.Join("","", requestHeader.Value)}\\n"");\r\n        }\r\n    });\r\n}\r\n```\r\n### Expected behavior\r\n`Host` header to have the value `proxy.com:5000`\r\n\r\n### Additional context\r\nI am using JetBrains Rider and I tried to step into the code and I saw the following:\r\nThis is a snippet from decompiled code of [ClientHandler](https://github.com/aspnet/AspNetCore/blob/f06e1822f50c033504610d3ffd04cd463f8db6d4/src/Hosting/TestHost/src/ClientHandler.cs)\r\n```c#\r\ncontextBuilder.Configure((Action<HttpContext>) (context =>\r\n      {\r\n        HttpRequest request1 = context.Request;\r\n        request1.Protocol = ""HTTP/"" + request.Version.ToString(2);\r\n        request1.Method = request.Method.ToString();\r\n        request1.Scheme = request.RequestUri.Scheme;\r\n        request1.Host = HostString.FromUriComponent(request.RequestUri);\r\n        if (request.RequestUri.IsDefaultPort)\r\n          request1.Host = new HostString(request1.Host.Host);\r\n        request1.Path = PathString.FromUriComponent(request.RequestUri);\r\n        request1.PathBase = PathString.Empty;\r\n        PathString remaining;\r\n        if (request1.Path.StartsWithSegments(this._pathBase, out remaining))\r\n        {\r\n          request1.Path = remaining;\r\n          request1.PathBase = this._pathBase;\r\n        }\r\n        request1.QueryString = QueryString.FromUriComponent(request.RequestUri);\r\n        foreach (KeyValuePair<string, IEnumerable<string>> header in (HttpHeaders) request.Headers)\r\n          request1.Headers.Append(header.Key, (StringValues) header.Value.ToArray<string>());\r\n        if (requestContent != null)\r\n        {\r\n          foreach (KeyValuePair<string, IEnumerable<string>> header in (HttpHeaders) requestContent.Headers)\r\n            request1.Headers.Append(header.Key, (StringValues) header.Value.ToArray<string>());\r\n        }\r\n        if (body.CanSeek)\r\n          body.Seek(0L, SeekOrigin.Begin);\r\n        request1.Body = body;\r\n        responseBody = context.Response.Body;\r\n      }));\r\n```\r\nI see the `Host` header is appended too after it is set explicitly initially in the preceding code which seems to explain the issue I am facing *(partly)*\r\nChecking the [official source code](https://github.com/aspnet/AspNetCore/blob/f06e1822f50c033504610d3ffd04cd463f8db6d4/src/Hosting/TestHost/src/ClientHandler.cs#L69) on the GitHub repository yields this:\r\n```c#\r\ncontextBuilder.Configure(context =>\r\n            {\r\n                var req = context.Request;\r\n\r\n                req.Protocol = ""HTTP/"" + request.Version.ToString(fieldCount: 2);\r\n                req.Method = request.Method.ToString();\r\n\r\n                req.Scheme = request.RequestUri.Scheme;\r\n\r\n                foreach (var header in request.Headers)\r\n                {\r\n                    req.Headers.Append(header.Key, header.Value.ToArray());\r\n                }\r\n\r\n                if (!req.Host.HasValue)\r\n                {\r\n                    // If Host wasn't explicitly set as a header, let's infer it from the Uri\r\n                    req.Host = HostString.FromUriComponent(request.RequestUri);\r\n                    if (request.RequestUri.IsDefaultPort)\r\n                    {\r\n                        req.Host = new HostString(req.Host.Host);\r\n                    }\r\n                }\r\n\r\n                req.Path = PathString.FromUriComponent(request.RequestUri);\r\n                req.PathBase = PathString.Empty;\r\n                if (req.Path.StartsWithSegments(_pathBase, out var remainder))\r\n                {\r\n                    req.Path = remainder;\r\n                    req.PathBase = _pathBase;\r\n                }\r\n                req.QueryString = QueryString.FromUriComponent(request.RequestUri);\r\n\r\n                if (requestContent != null)\r\n                {\r\n                    foreach (var header in requestContent.Headers)\r\n                    {\r\n                        req.Headers.Append(header.Key, header.Value.ToArray());\r\n                    }\r\n                }\r\n\r\n                if (body.CanSeek)\r\n                {\r\n                    // This body may have been consumed before, rewind it.\r\n                    body.Seek(0, SeekOrigin.Begin);\r\n                }\r\n                req.Body = new AsyncStreamWrapper(body, () => contextBuilder.AllowSynchronousIO);\r\n\r\n                responseBody = context.Response.Body;\r\n            });\r\n```\r\nAnd here the order looks *CORRECT*\r\n\r\nThis is where I get confused. I don't really know if I am doing something wrong or the compiler is re-ordering the code or is it Rider's decompiler fault or something else completely?\r\nThank you for your help","c#\r\n[Fact]\r\npublic async Task ShouldEchoBackCorrectInformation()\r\n{\r\n    // Build Proxy TestServer\r\n    var proxyWebHostBuilder = new WebHostBuilder()\r\n        .UseStartup<ProxyStartup>()\r\n        .UseUrls(""http://proxy.com:5000"");\r\n    var proxyTestServer = new TestServer(proxyWebHostBuilder);\r\n\r\n    // Get HttpClient make a request to the proxy\r\n    var httpClient = new HttpClient(proxyTestServer.CreateHandler());\r\n    var response = await httpClient.GetAsync(""http://proxy.com:5000/"");\r\n    var responseText = await response.Content.ReadAsStringAsync();\r\n    responseText.Should().Contain(""Hi from Host ProxyHost"");\r\n    responseText.Should().Contain(""RequestUrl=http://proxy.com:5000/"");\r\n}\r\n\r\npublic class ProxyStartup\r\n{\r\n    app.Run(async context =>\r\n    {\r\n        context.Response.ContentType = ""text/plain"";\r\n        await context.Response.WriteAsync($""Hi from Host ProxyHost\\n"");\r\n        await context.Response.WriteAsync($""RequestUrl={context.Request.GetEncodedUrl()}\\n"");\r\n        await context.Response.WriteAsync($""PathBase={context.Request.PathBase}\\n"");\r\n        foreach (var requestHeader in context.Request.Headers)\r\n        {\r\n            await context.Response.WriteAsync(\r\n                $""{requestHeader.Key}={string.Join("","", requestHeader.Value)}\\n"");\r\n        }\r\n    });\r\n}\r\n"
7740,"AddAllProjectRefsToSolution fails for Middleware solution### Describe the bug\r\nThe Middleware solution can't be opened due to the known issue NU1105, however running the AddAllProjectRefsToSolution.ps1 script doesn't work either.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Checkout master and clean your working copy\r\n2. Run .\\restore.cmd. This pass\r\n3. Run ./eng/scripts/AddAllProjectRefsToSolution.ps1 -WorkingDir .\\src\\Middleware\\\r\n4. The script attempt to build but it fails. See error below\r\n\r\n### Expected behavior\r\nAddAllProjectRefsToSolution add all project references to the solution to circumvent the known issue, however it fails due to the same issue \r\n\r\n### Error\r\n",bug|area-infrastructure,JunTaoLuo,"### Describe the bug\r\nThe Middleware solution can't be opened due to the known issue NU1105, however running the AddAllProjectRefsToSolution.ps1 script doesn't work either.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Checkout master and clean your working copy\r\n2. Run .\\restore.cmd. This pass\r\n3. Run ./eng/scripts/AddAllProjectRefsToSolution.ps1 -WorkingDir .\\src\\Middleware\\\r\n4. The script attempt to build but it fails. See error below\r\n\r\n### Expected behavior\r\nAddAllProjectRefsToSolution add all project references to the solution to circumvent the known issue, however it fails due to the same issue \r\n\r\n### Error\r\n```powershell\r\n\u276f ./eng/scripts/AddAllProjectRefsToSolution.ps1 -WorkingDir .\\src\\Middleware\\\r\nUsing KoreBuild 3.0.0-build-20190205.1\r\n.NET Core SDK 3.0.100-preview-009750 is already installed. Skipping installation.\r\nDetected Visual Studio Enterprise 2017 (15.9.28307.423) in 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise'\r\n>>> msbuild.exe C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\build\\tasks\\RepoTasks.csproj -v:m -restore -t:Publish -p:Configuration=Release -p:PublishDir=C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\build\\tasks\\bin\\publish -nologo -p:RepoTasksSdkPath=C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\.dotnet\\buildtools\\korebuild\\3.0.0-build-20190205.1\\scripts\\..\\msbuild\\KoreBuild.RepoTasks.Sdk\\Sdk /p:ProjectsReferencedOutFile=C:\\Users\\alessiof\\AppData\\Local\\Temp\\tmp9DBC.tmp /p:Projects=C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Middleware\\**\\*.*proj /p:_RunRestore=True /p:_RunBuild=True /p:_RunPack=False /p:_RunTests=False /p:_RunSign=False /p:TargetArchitecture=x64 /p:TargetOsName=win @C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\artifacts\\logs\\msbuild.logger.rsp\r\n  Restore completed in 47.89 ms for C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\build\\tasks\\RepoTasks.csproj.\r\n  RepoTasks -> C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\build\\tasks\\bin\\Release\\net461\\RepoTasks.dll\r\n  RepoTasks -> C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\build\\tasks\\bin\\publish\\\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:01.79\r\n>>> msbuild.exe @C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\artifacts\\logs\\msbuild.rsp @C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\artifacts\\logs\\msbuild.logger.rsp\r\nMicrosoft (R) Build Engine version 15.9.21+g9802d43bc3 for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nC:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Middleware\\SpaServices.Extensions\\src\\Microsoft.AspNetCore.SpaServices.Extensions.csproj : error NU1105: Unable to find p\r\nroject information for 'C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Mvc\\Mvc.ViewFeatures\\src\\Microsoft.AspNetCore.Mvc.ViewFeatures.csproj'. Inside Visual Studio, thi\r\ns may be because the project is unloaded or not part of current solution. Otherwise the project file may be invalid or missing targets required for restore.\r\nC:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Middleware\\SpaServices.Extensions\\src\\Microsoft.AspNetCore.SpaServices.Extensions.csproj : error NU1105: Unable to find p\r\nroject information for 'C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Mvc\\Mvc.TagHelpers\\src\\Microsoft.AspNetCore.Mvc.TagHelpers.csproj'. Inside Visual Studio, this ma\r\ny be because the project is unloaded or not part of current solution. Otherwise the project file may be invalid or missing targets required for restore.\r\nC:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Middleware\\SpaServices\\samples\\Webpack\\Webpack.csproj : error NU1105: Unable to find project information for 'C:\\Users\\al\r\nessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Mvc\\Mvc\\src\\Microsoft.AspNetCore.Mvc.csproj'. Inside Visual Studio, this may be because the project is unloaded or not part of curre\r\nnt solution. Otherwise the project file may be invalid or missing targets required for restore.\r\nC:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Middleware\\SpaServices\\samples\\Webpack\\Webpack.csproj : error NU1105: Unable to find project information for 'C:\\Users\\al\r\nessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Mvc\\Mvc.ViewFeatures\\src\\Microsoft.AspNetCore.Mvc.ViewFeatures.csproj'. Inside Visual Studio, this may be because the project is unl\r\noaded or not part of current solution. Otherwise the project file may be invalid or missing targets required for restore.\r\nC:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Middleware\\SpaServices\\samples\\Webpack\\Webpack.csproj : error NU1105: Unable to find project information for 'C:\\Users\\al\r\nessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Mvc\\Mvc.TagHelpers\\src\\Microsoft.AspNetCore.Mvc.TagHelpers.csproj'. Inside Visual Studio, this may be because the project is unloade\r\nd or not part of current solution. Otherwise the project file may be invalid or missing targets required for restore.\r\nC:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Middleware\\SpaServices\\src\\Microsoft.AspNetCore.SpaServices.csproj : error NU1105: Unable to find project information for\r\n 'C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Mvc\\Mvc.ViewFeatures\\src\\Microsoft.AspNetCore.Mvc.ViewFeatures.csproj'. Inside Visual Studio, this may be because the p\r\nroject is unloaded or not part of current solution. Otherwise the project file may be invalid or missing targets required for restore.\r\nC:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Middleware\\SpaServices\\src\\Microsoft.AspNetCore.SpaServices.csproj : error NU1105: Unable to find project information for\r\n 'C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Mvc\\Mvc.TagHelpers\\src\\Microsoft.AspNetCore.Mvc.TagHelpers.csproj'. Inside Visual Studio, this may be because the proje\r\nct is unloaded or not part of current solution. Otherwise the project file may be invalid or missing targets required for restore.\r\nC:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Middleware\\WebSockets\\test\\ConformanceTests\\Microsoft.AspNetCore.WebSockets.ConformanceTests.csproj : error NU1105: Unabl\r\ne to find project information for 'C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Servers\\IIS\\IntegrationTesting.IIS\\src\\Microsoft.AspNetCore.Server.IntegrationTesting.\r\nIIS.csproj'. Inside Visual Studio, this may be because the project is unloaded or not part of current solution. Otherwise the project file may be invalid or missing targets requi\r\nred for restore.\r\n\r\nBuild FAILED.\r\n\r\nC:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Middleware\\SpaServices.Extensions\\src\\Microsoft.AspNetCore.SpaServices.Extensions.csproj : error NU1105: Unable to find p\r\nroject information for 'C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Mvc\\Mvc.ViewFeatures\\src\\Microsoft.AspNetCore.Mvc.ViewFeatures.csproj'. Inside Visual Studio, thi\r\ns may be because the project is unloaded or not part of current solution. Otherwise the project file may be invalid or missing targets required for restore.\r\nC:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Middleware\\SpaServices.Extensions\\src\\Microsoft.AspNetCore.SpaServices.Extensions.csproj : error NU1105: Unable to find p\r\nroject information for 'C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Mvc\\Mvc.TagHelpers\\src\\Microsoft.AspNetCore.Mvc.TagHelpers.csproj'. Inside Visual Studio, this ma\r\ny be because the project is unloaded or not part of current solution. Otherwise the project file may be invalid or missing targets required for restore.\r\nC:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Middleware\\SpaServices\\samples\\Webpack\\Webpack.csproj : error NU1105: Unable to find project information for 'C:\\Users\\al\r\nessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Mvc\\Mvc\\src\\Microsoft.AspNetCore.Mvc.csproj'. Inside Visual Studio, this may be because the project is unloaded or not part of curre\r\nnt solution. Otherwise the project file may be invalid or missing targets required for restore.\r\nC:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Middleware\\SpaServices\\samples\\Webpack\\Webpack.csproj : error NU1105: Unable to find project information for 'C:\\Users\\al\r\nessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Mvc\\Mvc.ViewFeatures\\src\\Microsoft.AspNetCore.Mvc.ViewFeatures.csproj'. Inside Visual Studio, this may be because the project is unl\r\noaded or not part of current solution. Otherwise the project file may be invalid or missing targets required for restore.\r\nC:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Middleware\\SpaServices\\samples\\Webpack\\Webpack.csproj : error NU1105: Unable to find project information for 'C:\\Users\\al\r\nessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Mvc\\Mvc.TagHelpers\\src\\Microsoft.AspNetCore.Mvc.TagHelpers.csproj'. Inside Visual Studio, this may be because the project is unloade\r\nd or not part of current solution. Otherwise the project file may be invalid or missing targets required for restore.\r\nC:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Middleware\\SpaServices\\src\\Microsoft.AspNetCore.SpaServices.csproj : error NU1105: Unable to find project information for\r\n 'C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Mvc\\Mvc.ViewFeatures\\src\\Microsoft.AspNetCore.Mvc.ViewFeatures.csproj'. Inside Visual Studio, this may be because the p\r\nroject is unloaded or not part of current solution. Otherwise the project file may be invalid or missing targets required for restore.\r\nC:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Middleware\\SpaServices\\src\\Microsoft.AspNetCore.SpaServices.csproj : error NU1105: Unable to find project information for\r\n 'C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Mvc\\Mvc.TagHelpers\\src\\Microsoft.AspNetCore.Mvc.TagHelpers.csproj'. Inside Visual Studio, this may be because the proje\r\nct is unloaded or not part of current solution. Otherwise the project file may be invalid or missing targets required for restore.\r\nC:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Middleware\\WebSockets\\test\\ConformanceTests\\Microsoft.AspNetCore.WebSockets.ConformanceTests.csproj : error NU1105: Unabl\r\ne to find project information for 'C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Servers\\IIS\\IntegrationTesting.IIS\\src\\Microsoft.AspNetCore.Server.IntegrationTesting.\r\nIIS.csproj'. Inside Visual Studio, this may be because the project is unloaded or not part of current solution. Otherwise the project file may be invalid or missing targets requi\r\nred for restore.\r\n    0 Warning(s)\r\n    8 Error(s)\r\n\r\nTime Elapsed 00:00:07.18\r\nmsbuild.exe failed with exit code: 1\r\nAt C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\.dotnet\\buildtools\\korebuild\\3.0.0-build-20190205.1\\scripts\\common.psm1:11 char:9\r\n+         throw ""$cmdName failed with exit code: $exitCode""\r\n+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : OperationStopped: (msbuild.exe failed with exit code: 1:String) [], RuntimeException\r\n    + FullyQualifiedErrorId : msbuild.exe failed with exit code: 1\r\n```","powershell\r\n\u276f ./eng/scripts/AddAllProjectRefsToSolution.ps1 -WorkingDir .\\src\\Middleware\\\r\nUsing KoreBuild 3.0.0-build-20190205.1\r\n.NET Core SDK 3.0.100-preview-009750 is already installed. Skipping installation.\r\nDetected Visual Studio Enterprise 2017 (15.9.28307.423) in 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise'\r\n>>> msbuild.exe C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\build\\tasks\\RepoTasks.csproj -v:m -restore -t:Publish -p:Configuration=Release -p:PublishDir=C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\build\\tasks\\bin\\publish -nologo -p:RepoTasksSdkPath=C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\.dotnet\\buildtools\\korebuild\\3.0.0-build-20190205.1\\scripts\\..\\msbuild\\KoreBuild.RepoTasks.Sdk\\Sdk /p:ProjectsReferencedOutFile=C:\\Users\\alessiof\\AppData\\Local\\Temp\\tmp9DBC.tmp /p:Projects=C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Middleware\\**\\*.*proj /p:_RunRestore=True /p:_RunBuild=True /p:_RunPack=False /p:_RunTests=False /p:_RunSign=False /p:TargetArchitecture=x64 /p:TargetOsName=win @C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\artifacts\\logs\\msbuild.logger.rsp\r\n  Restore completed in 47.89 ms for C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\build\\tasks\\RepoTasks.csproj.\r\n  RepoTasks -> C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\build\\tasks\\bin\\Release\\net461\\RepoTasks.dll\r\n  RepoTasks -> C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\build\\tasks\\bin\\publish\\\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:01.79\r\n>>> msbuild.exe @C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\artifacts\\logs\\msbuild.rsp @C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\artifacts\\logs\\msbuild.logger.rsp\r\nMicrosoft (R) Build Engine version 15.9.21+g9802d43bc3 for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nC:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Middleware\\SpaServices.Extensions\\src\\Microsoft.AspNetCore.SpaServices.Extensions.csproj : error NU1105: Unable to find p\r\nroject information for 'C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Mvc\\Mvc.ViewFeatures\\src\\Microsoft.AspNetCore.Mvc.ViewFeatures.csproj'. Inside Visual Studio, thi\r\ns may be because the project is unloaded or not part of current solution. Otherwise the project file may be invalid or missing targets required for restore.\r\nC:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Middleware\\SpaServices.Extensions\\src\\Microsoft.AspNetCore.SpaServices.Extensions.csproj : error NU1105: Unable to find p\r\nroject information for 'C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Mvc\\Mvc.TagHelpers\\src\\Microsoft.AspNetCore.Mvc.TagHelpers.csproj'. Inside Visual Studio, this ma\r\ny be because the project is unloaded or not part of current solution. Otherwise the project file may be invalid or missing targets required for restore.\r\nC:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Middleware\\SpaServices\\samples\\Webpack\\Webpack.csproj : error NU1105: Unable to find project information for 'C:\\Users\\al\r\nessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Mvc\\Mvc\\src\\Microsoft.AspNetCore.Mvc.csproj'. Inside Visual Studio, this may be because the project is unloaded or not part of curre\r\nnt solution. Otherwise the project file may be invalid or missing targets required for restore.\r\nC:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Middleware\\SpaServices\\samples\\Webpack\\Webpack.csproj : error NU1105: Unable to find project information for 'C:\\Users\\al\r\nessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Mvc\\Mvc.ViewFeatures\\src\\Microsoft.AspNetCore.Mvc.ViewFeatures.csproj'. Inside Visual Studio, this may be because the project is unl\r\noaded or not part of current solution. Otherwise the project file may be invalid or missing targets required for restore.\r\nC:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Middleware\\SpaServices\\samples\\Webpack\\Webpack.csproj : error NU1105: Unable to find project information for 'C:\\Users\\al\r\nessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Mvc\\Mvc.TagHelpers\\src\\Microsoft.AspNetCore.Mvc.TagHelpers.csproj'. Inside Visual Studio, this may be because the project is unloade\r\nd or not part of current solution. Otherwise the project file may be invalid or missing targets required for restore.\r\nC:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Middleware\\SpaServices\\src\\Microsoft.AspNetCore.SpaServices.csproj : error NU1105: Unable to find project information for\r\n 'C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Mvc\\Mvc.ViewFeatures\\src\\Microsoft.AspNetCore.Mvc.ViewFeatures.csproj'. Inside Visual Studio, this may be because the p\r\nroject is unloaded or not part of current solution. Otherwise the project file may be invalid or missing targets required for restore.\r\nC:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Middleware\\SpaServices\\src\\Microsoft.AspNetCore.SpaServices.csproj : error NU1105: Unable to find project information for\r\n 'C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Mvc\\Mvc.TagHelpers\\src\\Microsoft.AspNetCore.Mvc.TagHelpers.csproj'. Inside Visual Studio, this may be because the proje\r\nct is unloaded or not part of current solution. Otherwise the project file may be invalid or missing targets required for restore.\r\nC:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Middleware\\WebSockets\\test\\ConformanceTests\\Microsoft.AspNetCore.WebSockets.ConformanceTests.csproj : error NU1105: Unabl\r\ne to find project information for 'C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Servers\\IIS\\IntegrationTesting.IIS\\src\\Microsoft.AspNetCore.Server.IntegrationTesting.\r\nIIS.csproj'. Inside Visual Studio, this may be because the project is unloaded or not part of current solution. Otherwise the project file may be invalid or missing targets requi\r\nred for restore.\r\n\r\nBuild FAILED.\r\n\r\nC:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Middleware\\SpaServices.Extensions\\src\\Microsoft.AspNetCore.SpaServices.Extensions.csproj : error NU1105: Unable to find p\r\nroject information for 'C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Mvc\\Mvc.ViewFeatures\\src\\Microsoft.AspNetCore.Mvc.ViewFeatures.csproj'. Inside Visual Studio, thi\r\ns may be because the project is unloaded or not part of current solution. Otherwise the project file may be invalid or missing targets required for restore.\r\nC:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Middleware\\SpaServices.Extensions\\src\\Microsoft.AspNetCore.SpaServices.Extensions.csproj : error NU1105: Unable to find p\r\nroject information for 'C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Mvc\\Mvc.TagHelpers\\src\\Microsoft.AspNetCore.Mvc.TagHelpers.csproj'. Inside Visual Studio, this ma\r\ny be because the project is unloaded or not part of current solution. Otherwise the project file may be invalid or missing targets required for restore.\r\nC:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Middleware\\SpaServices\\samples\\Webpack\\Webpack.csproj : error NU1105: Unable to find project information for 'C:\\Users\\al\r\nessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Mvc\\Mvc\\src\\Microsoft.AspNetCore.Mvc.csproj'. Inside Visual Studio, this may be because the project is unloaded or not part of curre\r\nnt solution. Otherwise the project file may be invalid or missing targets required for restore.\r\nC:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Middleware\\SpaServices\\samples\\Webpack\\Webpack.csproj : error NU1105: Unable to find project information for 'C:\\Users\\al\r\nessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Mvc\\Mvc.ViewFeatures\\src\\Microsoft.AspNetCore.Mvc.ViewFeatures.csproj'. Inside Visual Studio, this may be because the project is unl\r\noaded or not part of current solution. Otherwise the project file may be invalid or missing targets required for restore.\r\nC:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Middleware\\SpaServices\\samples\\Webpack\\Webpack.csproj : error NU1105: Unable to find project information for 'C:\\Users\\al\r\nessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Mvc\\Mvc.TagHelpers\\src\\Microsoft.AspNetCore.Mvc.TagHelpers.csproj'. Inside Visual Studio, this may be because the project is unloade\r\nd or not part of current solution. Otherwise the project file may be invalid or missing targets required for restore.\r\nC:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Middleware\\SpaServices\\src\\Microsoft.AspNetCore.SpaServices.csproj : error NU1105: Unable to find project information for\r\n 'C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Mvc\\Mvc.ViewFeatures\\src\\Microsoft.AspNetCore.Mvc.ViewFeatures.csproj'. Inside Visual Studio, this may be because the p\r\nroject is unloaded or not part of current solution. Otherwise the project file may be invalid or missing targets required for restore.\r\nC:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Middleware\\SpaServices\\src\\Microsoft.AspNetCore.SpaServices.csproj : error NU1105: Unable to find project information for\r\n 'C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Mvc\\Mvc.TagHelpers\\src\\Microsoft.AspNetCore.Mvc.TagHelpers.csproj'. Inside Visual Studio, this may be because the proje\r\nct is unloaded or not part of current solution. Otherwise the project file may be invalid or missing targets required for restore.\r\nC:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Middleware\\WebSockets\\test\\ConformanceTests\\Microsoft.AspNetCore.WebSockets.ConformanceTests.csproj : error NU1105: Unabl\r\ne to find project information for 'C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\src\\Servers\\IIS\\IntegrationTesting.IIS\\src\\Microsoft.AspNetCore.Server.IntegrationTesting.\r\nIIS.csproj'. Inside Visual Studio, this may be because the project is unloaded or not part of current solution. Otherwise the project file may be invalid or missing targets requi\r\nred for restore.\r\n    0 Warning(s)\r\n    8 Error(s)\r\n\r\nTime Elapsed 00:00:07.18\r\nmsbuild.exe failed with exit code: 1\r\nAt C:\\Users\\alessiof\\Workspace\\public\\aspnet\\AspNetCore\\.dotnet\\buildtools\\korebuild\\3.0.0-build-20190205.1\\scripts\\common.psm1:11 char:9\r\n+         throw ""$cmdName failed with exit code: $exitCode""\r\n+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : OperationStopped: (msbuild.exe failed with exit code: 1:String) [], RuntimeException\r\n    + FullyQualifiedErrorId : msbuild.exe failed with exit code: 1\r\n"
7739,"[Components, Blazor] Better error handling when setting up the DI container### Is your feature request related to a problem? Please describe.\r\nWhen injecting a component with a service that hasn't been setup correctly in the DI container (using `Startup.ConfigureServices()`), a blank page will be rendered for the affected component. No user-facing error is shown.\r\n\r\n[ In addition, if the project is a Razor Components project, no exception will be logged anywhere even for the developer (for a Blazor / client-side project, an exception will be logged in the browser console). This will presumably improve as part of #7165 / #4964. ]\r\n\r\nAs a simple test case:\r\n\r\n1. create a fresh Razor Components or Blazor project\r\n2. change `Startup.ConfigureServices()` in the components project to add a singleton:\r\n\r\n\r\n\r\n3. generate this class `MyService`. It can be left empty.\r\n4. inject `MyService` into `Counter.cshtml`: `@inject MyService service`\r\n5. launch this in the browser, and navigate to **Counter**. Confirm that this works.\r\n6. change `Startup.ConfigureServices()` to do nothing.\r\n7. launch this in the browser again. The initial page will render fine, but **Counter** will now yield an empty page.\r\n\r\n### Describe the solution you'd like\r\nThis should raise an exception.\r\n\r\nWhere applicable, the developer exception page or a user-friendly error page should be shown.\r\n\r\n### Additional context\r\n* The original scenario that brought this up was slightly more complicated (a service in turn depended on a second-level missing service), and thus the root issue was significantly harder to track down.\r\n\r\n* #5150 may also be related, but as of Blazor 0.8, I'm not getting a missing service exception at all.",bug|area-blazor,rynowak,"### Is your feature request related to a problem? Please describe.\r\nWhen injecting a component with a service that hasn't been setup correctly in the DI container (using `Startup.ConfigureServices()`), a blank page will be rendered for the affected component. No user-facing error is shown.\r\n\r\n[ In addition, if the project is a Razor Components project, no exception will be logged anywhere even for the developer (for a Blazor / client-side project, an exception will be logged in the browser console). This will presumably improve as part of #7165 / #4964. ]\r\n\r\nAs a simple test case:\r\n\r\n1. create a fresh Razor Components or Blazor project\r\n2. change `Startup.ConfigureServices()` in the components project to add a singleton:\r\n\r\n```csharp\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.AddSingleton<MyService>();\r\n        }\r\n```\r\n\r\n3. generate this class `MyService`. It can be left empty.\r\n4. inject `MyService` into `Counter.cshtml`: `@inject MyService service`\r\n5. launch this in the browser, and navigate to **Counter**. Confirm that this works.\r\n6. change `Startup.ConfigureServices()` to do nothing.\r\n7. launch this in the browser again. The initial page will render fine, but **Counter** will now yield an empty page.\r\n\r\n### Describe the solution you'd like\r\nThis should raise an exception.\r\n\r\nWhere applicable, the developer exception page or a user-friendly error page should be shown.\r\n\r\n### Additional context\r\n* The original scenario that brought this up was slightly more complicated (a service in turn depended on a second-level missing service), and thus the root issue was significantly harder to track down.\r\n\r\n* #5150 may also be related, but as of Blazor 0.8, I'm not getting a missing service exception at all.",csharp\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.AddSingleton<MyService>();\r\n        }\r\n
7660,"File Upload Via Byte Array Transfer### Describe the bug\r\nI am currently trying to get file uploading functionality working via using the JavaScript `FileReader` to generate an `ArrayBuffer` from a file, and then converting the data to a `Uint8Array` and sending it back up to Razor Components on the server. For some reason, the awaited call never finishes. The C# equivalent of `Uint8Array` is `byte[]`, which is what I used as the type parameter for `IJSRuntime.InvokeAsync<T>(string, TModel[])`, but it would seem that no matter what, even in a simpler case, `InvokeAsync` doesn't want to deal with `byte[]`.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Use ASP.NET Core 3.0 Preview 2 on Visual Studio 2019 Preview 3.0.\r\n2. Run `dotnet new razorcomponents -o UploadTest`, then `cd UploadTest` and `explorer .\\`, and open the generated `UploadTest.sln` with Visual Studio 2019 Preview 3.0.\r\n3. Add code for file uploading to `index.html`.\r\n\r\n4. Add a file upload input to `Index.cshtml` and wire it up to the JavaScript uploading code.\r\n\r\n5. Set a breakpoint on the `Console.WriteLine(data);` line within the `@functions` block and run the app.\r\n6. See that even once a file is uploaded via the UI, the breakpoint is never hit.\r\n\r\n### Expected behavior\r\nThe line `Console.WriteLine(data);` line within the functions block should be executed.\r\n\r\n### Additional context\r\nI am going to try binding the value of the `<input/>` tag to a string to see if that will work, but it is concerning that not only is `Uint8Array` transfer not working, the remaining code is not executing and the whole thing is failing silently. There should be an exception here if Razor Components simply does not support transferring `byte`s.\r\n[dotnetinfo.txt](https://github.com/aspnet/AspNetCore/files/2872452/dotnetinfo.txt)",investigate|area-blazor,SteveSandersonMS,"### Describe the bug\r\nI am currently trying to get file uploading functionality working via using the JavaScript `FileReader` to generate an `ArrayBuffer` from a file, and then converting the data to a `Uint8Array` and sending it back up to Razor Components on the server. For some reason, the awaited call never finishes. The C# equivalent of `Uint8Array` is `byte[]`, which is what I used as the type parameter for `IJSRuntime.InvokeAsync<T>(string, TModel[])`, but it would seem that no matter what, even in a simpler case, `InvokeAsync` doesn't want to deal with `byte[]`.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Use ASP.NET Core 3.0 Preview 2 on Visual Studio 2019 Preview 3.0.\r\n2. Run `dotnet new razorcomponents -o UploadTest`, then `cd UploadTest` and `explorer .\\`, and open the generated `UploadTest.sln` with Visual Studio 2019 Preview 3.0.\r\n3. Add code for file uploading to `index.html`.\r\n```html\r\n<script>\r\n    window.uploadUtilities = {\r\n        readUploadedFile: function (file) {\r\n            const temporaryFileReader = new FileReader();\r\n            return new Promise((resolve, reject) => {\r\n                temporaryFileReader.onerror = () => {\r\n                    temporaryFileReader.abort();\r\n                    reject(new DOMException(""Problem parsing input file.""));\r\n                };\r\n                temporaryFileReader.addEventListener(""load"", () => {\r\n                    resolve(new Uint8Array(temporaryFileReader.result));\r\n                }, false);\r\n                temporaryFileReader.readAsArrayBuffer(file.files[0]);\r\n            });\r\n        }\r\n    }\r\n</script>\r\n```\r\n4. Add a file upload input to `Index.cshtml` and wire it up to the JavaScript uploading code.\r\n```cshtml\r\n@* Other Directives *@\r\n@inject IJSRuntime Runtime\r\n@* Markup *@\r\n<input type=""file"" onchange=@ProcessUpload ref=FileInput />\r\n@* More Markup *@\r\n@functions\r\n{\r\n    ElementRef FileInput { get; set; }\r\n\r\n    async Task ProcessUpload()\r\n    {\r\n        byte[] data = await Runtime.InvokeAsync<byte[]>(""uploadUtilities.readUploadedFile"", FileInput);\r\n        Console.WriteLine(data);\r\n    }\r\n}\r\n```\r\n5. Set a breakpoint on the `Console.WriteLine(data);` line within the `@functions` block and run the app.\r\n6. See that even once a file is uploaded via the UI, the breakpoint is never hit.\r\n\r\n### Expected behavior\r\nThe line `Console.WriteLine(data);` line within the functions block should be executed.\r\n\r\n### Additional context\r\nI am going to try binding the value of the `<input/>` tag to a string to see if that will work, but it is concerning that not only is `Uint8Array` transfer not working, the remaining code is not executing and the whole thing is failing silently. There should be an exception here if Razor Components simply does not support transferring `byte`s.\r\n[dotnetinfo.txt](https://github.com/aspnet/AspNetCore/files/2872452/dotnetinfo.txt)","html\r\n<script>\r\n    window.uploadUtilities = {\r\n        readUploadedFile: function (file) {\r\n            const temporaryFileReader = new FileReader();\r\n            return new Promise((resolve, reject) => {\r\n                temporaryFileReader.onerror = () => {\r\n                    temporaryFileReader.abort();\r\n                    reject(new DOMException(""Problem parsing input file.""));\r\n                };\r\n                temporaryFileReader.addEventListener(""load"", () => {\r\n                    resolve(new Uint8Array(temporaryFileReader.result));\r\n                }, false);\r\n                temporaryFileReader.readAsArrayBuffer(file.files[0]);\r\n            });\r\n        }\r\n    }\r\n</script>\r\n"
7635,"Disable request body data rate limits per HTTP/2 streamEpic https://github.com/aspnet/AspNetCore/issues/8858\r\n\r\nCurrently we can disable the request body data rate limit for the entire server with\r\n\r\n\r\nHowever, we want to be able to control this on a finer scale of per request/stream. We need this in since certain gRPC endpoints are client streaming methods which may not satisfy the request body data rate while all other endpoints of the app should still be subject to the request body data rate. Websocket scenarios will also benefit from this feature.\r\n\r\nTo implement this feature, it's likely we'll need to overhaul the accounting for request data rates. @halter73 has more context about the implementation here. \r\n\r\ncc @Tratcher @davidfowl ",Done|enhancement|feature-kestrel|HTTP2|area-networking,halter73,"Epic https://github.com/aspnet/AspNetCore/issues/8858\r\n\r\nCurrently we can disable the request body data rate limit for the entire server with\r\n```c#\r\n                    webBuilder.ConfigureKestrel(options =>\r\n                    {\r\n                        options.Limits.MinRequestBodyDataRate = null;\r\n                    });\r\n```\r\n\r\nHowever, we want to be able to control this on a finer scale of per request/stream. We need this in since certain gRPC endpoints are client streaming methods which may not satisfy the request body data rate while all other endpoints of the app should still be subject to the request body data rate. Websocket scenarios will also benefit from this feature.\r\n\r\nTo implement this feature, it's likely we'll need to overhaul the accounting for request data rates. @halter73 has more context about the implementation here. \r\n\r\ncc @Tratcher @davidfowl ",c#\r\n                    webBuilder.ConfigureKestrel(options =>\r\n                    {\r\n                        options.Limits.MinRequestBodyDataRate = null;\r\n                    });\r\n
7564,"Route Templates for HttpClient### Issue\r\nWe are currently building a suite of applications using the microservice design-pattern. One of our big pain-points and a frequent source of errors is building the URLs to access resources on other microservices.\r\n\r\n### Desired Solution\r\nASP.NET Core route templates would offer a powerful and well-known syntax for generating URLs. I would like to have a simple solution for creating URLs from route templates and be able to use them together with `HttpClient` for accessing ASP.NET Core APIs. This could look like:\r\n\r\n\r\n\r\nMy preferred solution would be to have a `Microsoft.Extensions.*` package that contains the route template logic, including URL matching and generating.\r\n\r\n### Alternatives\r\n* `LinkGenerator` already has similar capabilities but it is designed to work for the Web-API being served and not for different Web-API being accessed via HTTP.\r\n* It is quite simple to build a custom implementation of this using `TemplateParser` and `TemplateBinder` **but** those types require ""pubternal"" types (e.g. `UriBuildingContext`), which means the custom implementation could break at any time.",question|area-mvc,rynowak,"### Issue\r\nWe are currently building a suite of applications using the microservice design-pattern. One of our big pain-points and a frequent source of errors is building the URLs to access resources on other microservices.\r\n\r\n### Desired Solution\r\nASP.NET Core route templates would offer a powerful and well-known syntax for generating URLs. I would like to have a simple solution for creating URLs from route templates and be able to use them together with `HttpClient` for accessing ASP.NET Core APIs. This could look like:\r\n\r\n```csharp\r\nvar uri = RouteBuilder.FromTemplate(""/api/{id}"").With(""id"", 1).BuildUri();\r\nhttpClient.GetAsync(uri);\r\n```\r\n\r\nMy preferred solution would be to have a `Microsoft.Extensions.*` package that contains the route template logic, including URL matching and generating.\r\n\r\n### Alternatives\r\n* `LinkGenerator` already has similar capabilities but it is designed to work for the Web-API being served and not for different Web-API being accessed via HTTP.\r\n* It is quite simple to build a custom implementation of this using `TemplateParser` and `TemplateBinder` **but** those types require ""pubternal"" types (e.g. `UriBuildingContext`), which means the custom implementation could break at any time.","csharp\r\nvar uri = RouteBuilder.FromTemplate(""/api/{id}"").With(""id"", 1).BuildUri();\r\nhttpClient.GetAsync(uri);\r\n"
7547,"[Components] Support for IntelliSense on components and their parametersI am trying to consume a third-party component in my project. However, it (apparently) currently has no way of exposing IntelliSense/XML documentation:\r\n\r\n* for the component itself, there simply is no obvious syntax. You never explicitly specify the class name (it is inferred from the file name); therefore, the typical approach of annotating that name with documentation doesn't work.\r\n\r\n* for its parameters inside a `@functions` block, normal C# syntax will work. However, parameters aren't designed to be public, so this doesn't get exported to XML documentation either. The `.cshtml.g.cs` files do not appear to retain XML comments.\r\n\r\n### Describe the solution you'd like\r\n* there should be syntax for declaring a component's documentation. For example, a new `@doc` directive would do the trick:\r\n\r\n\r\n\r\n* as part of the components build process, XML should be emitted\r\n\r\n* the Razor parser should pick these up on the consuming side:\r\n\r\n```xml\r\n<MyExampleComponent />\r\n<!-- hovering over the above should show ""This is an exciting example Razor Component!"" -->\r\n```\r\n\r\n### Describe alternatives you've considered\r\nTo avoid introducing new syntax, the documentation could perhaps also be placed inside a separate partial class.\r\n\r\nHowever, this would be more cumbersome, and it appears the tooling still wouldn't pick this up anyway.\r\n\r\n### Additional context\r\nOne concrete example is [BlazorStrap](https://github.com/chanan/BlazorStrap/), a Bootstrap port to Razor Components. Consuming the components would feel more natural if additional documentation were provided as part of IntelliSense.",enhancement|area-blazor,rynowak,"I am trying to consume a third-party component in my project. However, it (apparently) currently has no way of exposing IntelliSense/XML documentation:\r\n\r\n* for the component itself, there simply is no obvious syntax. You never explicitly specify the class name (it is inferred from the file name); therefore, the typical approach of annotating that name with documentation doesn't work.\r\n\r\n* for its parameters inside a `@functions` block, normal C# syntax will work. However, parameters aren't designed to be public, so this doesn't get exported to XML documentation either. The `.cshtml.g.cs` files do not appear to retain XML comments.\r\n\r\n### Describe the solution you'd like\r\n* there should be syntax for declaring a component's documentation. For example, a new `@doc` directive would do the trick:\r\n\r\n```csharp\r\n@inherits ComponentBase\r\n\r\n@doc {\r\n/// <summary>\r\n/// This is an exciting example Razor Component!\r\n/// </summary>\r\n}\r\n```\r\n\r\n* as part of the components build process, XML should be emitted\r\n\r\n* the Razor parser should pick these up on the consuming side:\r\n\r\n```xml\r\n<MyExampleComponent />\r\n<!-- hovering over the above should show ""This is an exciting example Razor Component!"" -->\r\n```\r\n\r\n### Describe alternatives you've considered\r\nTo avoid introducing new syntax, the documentation could perhaps also be placed inside a separate partial class.\r\n\r\nHowever, this would be more cumbersome, and it appears the tooling still wouldn't pick this up anyway.\r\n\r\n### Additional context\r\nOne concrete example is [BlazorStrap](https://github.com/chanan/BlazorStrap/), a Bootstrap port to Razor Components. Consuming the components would feel more natural if additional documentation were provided as part of IntelliSense.",csharp\r\n@inherits ComponentBase\r\n\r\n@doc {\r\n/// <summary>\r\n/// This is an exciting example Razor Component!\r\n/// </summary>\r\n}\r\n
7509,"Blazor 0.8: can no longer mix refs and attributes in one element### Describe the bug\r\nBlazor 0.8 appears to have a [new render tree builder](https://github.com/aspnet/AspNetCore/blob/master/src/Components/Components/src/RenderTree/RenderTreeBuilder.cs) that is stricter.\r\n\r\nIn 0.7, this would work:\r\n\r\n\r\n\r\nThe intended usage here is that\r\n\r\n1. `@Min` gets passed from the parent component, and\r\n2. `@_Element` gets passed on to JS, hence the need for a ` ref`\r\n\r\nHowever, in Blazor 0.8 (0.8.0-preview-19104-04 / 3.0.0-preview-19075-0444), this throws an `InvalidOperationException`:\r\n\r\n>Attributes may only be added immediately after frames of type **Element** or **RenderTreeFrameType.Component**\r\n\r\nIt isn't clear if this is the intended behavior. The check appears overzealous in this case.\r\n\r\n### To Reproduce\r\nJust create a component as described above.\r\n\r\n### Expected behavior\r\nBlazor 0.8 should probably behave the same as 0.7 here, and allow a `ref` to be in the same element as a parameter value.\r\n\r\n### Additional context\r\nThere's an easy workaround of putting the `ref` in a parent span:\r\n\r\n",bug|Done|area-blazor,rynowak,"### Describe the bug\r\nBlazor 0.8 appears to have a [new render tree builder](https://github.com/aspnet/AspNetCore/blob/master/src/Components/Components/src/RenderTree/RenderTreeBuilder.cs) that is stricter.\r\n\r\nIn 0.7, this would work:\r\n\r\n```csharp\r\n<input type=""text"" data-slider-min=""@Min"" ref=""@_Element"" />\r\n\r\n@functions {\r\n    private ElementRef _Element;\r\n\r\n    [Parameter] protected int Min { get; set; }\r\n}\r\n```\r\n\r\nThe intended usage here is that\r\n\r\n1. `@Min` gets passed from the parent component, and\r\n2. `@_Element` gets passed on to JS, hence the need for a ` ref`\r\n\r\nHowever, in Blazor 0.8 (0.8.0-preview-19104-04 / 3.0.0-preview-19075-0444), this throws an `InvalidOperationException`:\r\n\r\n>Attributes may only be added immediately after frames of type **Element** or **RenderTreeFrameType.Component**\r\n\r\nIt isn't clear if this is the intended behavior. The check appears overzealous in this case.\r\n\r\n### To Reproduce\r\nJust create a component as described above.\r\n\r\n### Expected behavior\r\nBlazor 0.8 should probably behave the same as 0.7 here, and allow a `ref` to be in the same element as a parameter value.\r\n\r\n### Additional context\r\nThere's an easy workaround of putting the `ref` in a parent span:\r\n\r\n```csharp\r\n<span ref=""@_Element"">\r\n    <input type=""text"" data-slider-min=""@Min"" />\r\n</span>\r\n```","csharp\r\n<input type=""text"" data-slider-min=""@Min"" ref=""@_Element"" />\r\n\r\n@functions {\r\n    private ElementRef _Element;\r\n\r\n    [Parameter] protected int Min { get; set; }\r\n}\r\n"
7497,"FormFeature class throws ArgumentNullException while parsing section with invalid Content-Disposition header.### Description\r\n[FormFeature](https://github.com/aspnet/AspNetCore/blob/master/src/Http/Http/src/Features/FormFeature.cs) class throws ArgumentNullException while parsing section with invalid Content-Disposition header.\r\nThis happens because result of TryParse is not checked before using contentDisposition:  \r\n\r\nException:\r\n```\r\nSystem.ArgumentNullException: Value cannot be null.\r\nParameter name: header\r\n   at Microsoft.Net.Http.Headers.ContentDispositionHeaderValueIdentityExtensions.IsFileDisposition(ContentDispositionHeaderValue header)\r\n   at Microsoft.AspNetCore.Http.Features.FormFeature.InnerReadFormAsync(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Http.Features.FormFeature.ReadForm()\r\n   at Microsoft.AspNetCore.Http.Internal.DefaultHttpRequest.get_Form()\r\n   at EmptyWebApp.Startup.<>c.<<Configure>b__1_0>d.MoveNext() in D:\\demo\\XCorelationIdDemo\\EmptyWebApp\\Startup.cs:line 25\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Server.IISIntegration.IISMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost:Information: Request finished in 141.1399ms 500 \r\n```\r\n\r\n### To Reproduce\r\n1. Startup sample service:\r\n\r\n2. Send multipart request with invalid Content-Disposition header value in file section:\r\n```\r\nPOST https://localhost:44365/ HTTP/1.1\r\nContent-Type: multipart/form-data; boundary=-------------------------acebdf13572468\r\n\r\n---------------------------acebdf13572468\r\nContent-Disposition: form-data; name=""SuccessfulUpload2""- filename=""File.txt""\r\nContent-Type: text/plain\r\n\r\n\r\nSome file content\r\n---------------------------acebdf13572468--\r\n``` \r\n\r\n### Expected behavior\r\nUser friendly / more intuitive exception.\r\n\r\n",bug|Done|help wanted|area-networking,Tratcher,"### Description\r\n[FormFeature](https://github.com/aspnet/AspNetCore/blob/master/src/Http/Http/src/Features/FormFeature.cs) class throws ArgumentNullException while parsing section with invalid Content-Disposition header.\r\nThis happens because result of TryParse is not checked before using contentDisposition:  \r\n```csharp\r\n// Parse the content disposition here and pass it further to avoid reparsings\r\nContentDispositionHeaderValue contentDisposition;\r\nContentDispositionHeaderValue.TryParse(section.ContentDisposition, out contentDisposition);\r\n\r\nif (contentDisposition.IsFileDisposition())\r\n    {\r\n```\r\nException:\r\n```\r\nSystem.ArgumentNullException: Value cannot be null.\r\nParameter name: header\r\n   at Microsoft.Net.Http.Headers.ContentDispositionHeaderValueIdentityExtensions.IsFileDisposition(ContentDispositionHeaderValue header)\r\n   at Microsoft.AspNetCore.Http.Features.FormFeature.InnerReadFormAsync(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Http.Features.FormFeature.ReadForm()\r\n   at Microsoft.AspNetCore.Http.Internal.DefaultHttpRequest.get_Form()\r\n   at EmptyWebApp.Startup.<>c.<<Configure>b__1_0>d.MoveNext() in D:\\demo\\XCorelationIdDemo\\EmptyWebApp\\Startup.cs:line 25\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Server.IISIntegration.IISMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost:Information: Request finished in 141.1399ms 500 \r\n```\r\n\r\n### To Reproduce\r\n1. Startup sample service:\r\n```csharp\r\npublic class Startup\r\n    {\r\n    public void ConfigureServices (IServiceCollection services) {}\r\n        \r\n    public void Configure (IApplicationBuilder app, IHostingEnvironment env)\r\n        {\r\n        app.Run (async (context) =>\r\n            {\r\n            var count  = context.Request.HasFormContentType\r\n                ? context.Request.Form.Files.Count\r\n                : 0;\r\n\r\n            await context.Response.WriteAsync ($""Hello, got {count} form files"");\r\n            });\r\n        }\r\n    }\r\n```\r\n2. Send multipart request with invalid Content-Disposition header value in file section:\r\n```\r\nPOST https://localhost:44365/ HTTP/1.1\r\nContent-Type: multipart/form-data; boundary=-------------------------acebdf13572468\r\n\r\n---------------------------acebdf13572468\r\nContent-Disposition: form-data; name=""SuccessfulUpload2""- filename=""File.txt""\r\nContent-Type: text/plain\r\n\r\n\r\nSome file content\r\n---------------------------acebdf13572468--\r\n``` \r\n\r\n### Expected behavior\r\nUser friendly / more intuitive exception.\r\n\r\n","csharp\r\n// Parse the content disposition here and pass it further to avoid reparsings\r\nContentDispositionHeaderValue contentDisposition;\r\nContentDispositionHeaderValue.TryParse(section.ContentDisposition, out contentDisposition);\r\n\r\nif (contentDisposition.IsFileDisposition())\r\n    {\r\n"
7495,"[Components][Tooling] Better whitespace supportA fragment like this ends up encoded as below:\r\n\r\n\r\n\r\n\r\nThe whitespace bettween the body tag and the <App> tag is called _'insignificant white-space'_ in HTML terminology. We should detect these cases and produce `builder.AddMarkup` instead of `builder.AddContent` so that this doesn't get unnecessarily html encoded on the server.\r\n\r\nWe could probably handle this case on the server itself, but I believe the parser is the right level to do so.",bug|Done|area-blazor,ajaybhargavb,"A fragment like this ends up encoded as below:\r\n```html\r\n<body>\r\n    <App></App>\r\n</body>\r\n```\r\n\r\n```csharp\r\nbuilder.OpenElement(3, ""body"");\r\nbuilder.AddContent(4, ""\\r\\n    "");\r\nbuilder.OpenComponent<ComponentsApp.App.App>(5);\r\n```\r\n\r\nThe whitespace bettween the body tag and the <App> tag is called _'insignificant white-space'_ in HTML terminology. We should detect these cases and produce `builder.AddMarkup` instead of `builder.AddContent` so that this doesn't get unnecessarily html encoded on the server.\r\n\r\nWe could probably handle this case on the server itself, but I believe the parser is the right level to do so.",html\r\n<body>\r\n    <App></App>\r\n</body>\r\n
7465,"Update HttpConnection (ts) to return a rejected promise rather than throwing (synchronously) when disconnected### Is your feature request related to a problem? Please describe.\r\nThe HttpConnection.send method throws an exception if the connection state is not Connected.  The method returns a Promise<void> however, so the synchronous exception is unexpected and leads to awkward code like:\r\n\r\nnote: Normally the consumer would not be using the HttpConnection directly, but rather a HubConnection.  The code above is the same if connection is of type HubConnection or HttpConnection as HubConnection delegates to HttpConnection in send.\r\n\r\n### Describe the solution you'd like\r\nReturn a rejected promise with the exception rather than throwing it (note: the start() method returns a rejected promise when the connection is in an unexpected state).\r\n\r\n### Describe alternatives you've considered\r\nI've attempted to manually check the state of the connection myself, however this state is kept private forcing me to handle this exception or keep track of the connected state in my own application state as well.\r\n",bug|Done|area-signalr|accepted,mikaelm12,"### Is your feature request related to a problem? Please describe.\r\nThe HttpConnection.send method throws an exception if the connection state is not Connected.  The method returns a Promise<void> however, so the synchronous exception is unexpected and leads to awkward code like:\r\n```typescript\r\ntry {\r\n  connection.send('test').catch(e => console.warn(e));\r\n} catch (e) {\r\n  console.warn(e);\r\n}\r\n```\r\nnote: Normally the consumer would not be using the HttpConnection directly, but rather a HubConnection.  The code above is the same if connection is of type HubConnection or HttpConnection as HubConnection delegates to HttpConnection in send.\r\n\r\n### Describe the solution you'd like\r\nReturn a rejected promise with the exception rather than throwing it (note: the start() method returns a rejected promise when the connection is in an unexpected state).\r\n\r\n### Describe alternatives you've considered\r\nI've attempted to manually check the state of the connection myself, however this state is kept private forcing me to handle this exception or keep track of the connected state in my own application state as well.\r\n",typescript\r\ntry {\r\n  connection.send('test').catch(e => console.warn(e));\r\n} catch (e) {\r\n  console.warn(e);\r\n}\r\n
7448,"StreamPipeReader should return the buffered data even after the Stream is done### Describe the bug\r\nThe StreamPipeReader should return the buffered data from the stream even after the underlying Stream has been drained. \r\n\r\n### To Reproduce\r\n\r\n\r\n\r\nThe above code tries to buffer all of the pipe's contents middleware before the post body is processed. \r\n\r\n### Expected behavior\r\nI expected to get the entire post body in /api/values, instead I get a 0 byte read.\r\n\r\n### Screenshots\r\n![image](https://user-images.githubusercontent.com/95136/52549029-eb1da680-2d85-11e9-8907-721c14a4c204.png)\r\n\r\nNotice the buffered bytes is non-zero but the buffer returned is empty.\r\n\r\n### Additional context\r\nlatest build",feature-kestrel|area-networking,davidfowl,"### Describe the bug\r\nThe StreamPipeReader should return the buffered data from the stream even after the underlying Stream has been drained. \r\n\r\n### To Reproduce\r\n\r\n```C#\r\nusing System;\r\nusing System.Buffers;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.AspNetCore.Builder;\r\nusing Microsoft.AspNetCore.Hosting;\r\nusing Microsoft.AspNetCore.Http;\r\nusing Microsoft.Extensions.DependencyInjection;\r\n\r\nnamespace WebApplication101\r\n{\r\n    public class Startup\r\n    {\r\n        // This method gets called by the runtime. Use this method to add services to the container.\r\n        // For more information on how to configure your application, visit https://go.microsoft.com/fwlink/?LinkID=398940\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n        }\r\n\r\n        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.\r\n        public void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n        {\r\n            if (env.IsDevelopment())\r\n            {\r\n                app.UseDeveloperExceptionPage();\r\n            }\r\n\r\n            app.Use(async (context, next) =>\r\n            {\r\n                if (context.Request.ContentLength is null)\r\n                {\r\n                    await next();\r\n                    return;\r\n                }\r\n\r\n                await context.Request.BufferAsync();\r\n\r\n                await next();\r\n            });\r\n\r\n            app.UseRouting(routes =>\r\n            {\r\n                routes.MapGet(""/"", async context =>\r\n                {\r\n                    await context.Response.WriteAsync(""Hello World!"");\r\n                });\r\n\r\n                routes.MapPost(""/api/values"", async context =>\r\n                {\r\n                    var result = await context.Request.BodyPipe.ReadAsync();\r\n                    var buffer = result.Buffer;\r\n\r\n                    var value = Encoding.UTF8.GetString(buffer.ToArray());\r\n\r\n                    await context.Response.WriteAsync(value);\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    public static class RequestBufferingExtensions\r\n    {\r\n        public static async Task BufferAsync(this HttpRequest request)\r\n        {\r\n            // Buffer the entire request body into the pipe\r\n            while (true)\r\n            {\r\n                var result = await request.BodyPipe.ReadAsync(request.HttpContext.RequestAborted);\r\n                var buffer = result.Buffer;\r\n\r\n                if (result.IsCompleted)\r\n                {\r\n                    break;\r\n                }\r\n\r\n                request.BodyPipe.AdvanceTo(buffer.Start, buffer.End);\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThe above code tries to buffer all of the pipe's contents middleware before the post body is processed. \r\n\r\n### Expected behavior\r\nI expected to get the entire post body in /api/values, instead I get a 0 byte read.\r\n\r\n### Screenshots\r\n![image](https://user-images.githubusercontent.com/95136/52549029-eb1da680-2d85-11e9-8907-721c14a4c204.png)\r\n\r\nNotice the buffered bytes is non-zero but the buffer returned is empty.\r\n\r\n### Additional context\r\nlatest build","C#\r\nusing System;\r\nusing System.Buffers;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.AspNetCore.Builder;\r\nusing Microsoft.AspNetCore.Hosting;\r\nusing Microsoft.AspNetCore.Http;\r\nusing Microsoft.Extensions.DependencyInjection;\r\n\r\nnamespace WebApplication101\r\n{\r\n    public class Startup\r\n    {\r\n        // This method gets called by the runtime. Use this method to add services to the container.\r\n        // For more information on how to configure your application, visit https://go.microsoft.com/fwlink/?LinkID=398940\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n        }\r\n\r\n        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.\r\n        public void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n        {\r\n            if (env.IsDevelopment())\r\n            {\r\n                app.UseDeveloperExceptionPage();\r\n            }\r\n\r\n            app.Use(async (context, next) =>\r\n            {\r\n                if (context.Request.ContentLength is null)\r\n                {\r\n                    await next();\r\n                    return;\r\n                }\r\n\r\n                await context.Request.BufferAsync();\r\n\r\n                await next();\r\n            });\r\n\r\n            app.UseRouting(routes =>\r\n            {\r\n                routes.MapGet(""/"", async context =>\r\n                {\r\n                    await context.Response.WriteAsync(""Hello World!"");\r\n                });\r\n\r\n                routes.MapPost(""/api/values"", async context =>\r\n                {\r\n                    var result = await context.Request.BodyPipe.ReadAsync();\r\n                    var buffer = result.Buffer;\r\n\r\n                    var value = Encoding.UTF8.GetString(buffer.ToArray());\r\n\r\n                    await context.Response.WriteAsync(value);\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    public static class RequestBufferingExtensions\r\n    {\r\n        public static async Task BufferAsync(this HttpRequest request)\r\n        {\r\n            // Buffer the entire request body into the pipe\r\n            while (true)\r\n            {\r\n                var result = await request.BodyPipe.ReadAsync(request.HttpContext.RequestAborted);\r\n                var buffer = result.Buffer;\r\n\r\n                if (result.IsCompleted)\r\n                {\r\n                    break;\r\n                }\r\n\r\n                request.BodyPipe.AdvanceTo(buffer.Start, buffer.End);\r\n            }\r\n        }\r\n    }\r\n}\r\n"
7326,"Remove obsolete APIs from RazorSee #3654 for details.\r\n\r\n\r\n#### (55) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Razor\\Compilation\\CompiledViewDescriptor.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Razor/Compilation/CompiledViewDescriptor.cs#L89"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Razor/Compilation/CompiledViewDescriptor.cs#L89"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor%2FCompilation%2FCompiledViewDescriptor.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor%2FCompilation%2FCompiledViewDescriptor.cs%23L89%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22Use%20Item%20instead.%20RazorViewAttribute%20has%20been%20superseded%20by%20RazorCompiledItem%20and%20will%20not%20be%20used%20by%20the%20runtime.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20RazorViewAttribute%20ViewAttribute%20%7B%20get%3B%20set%3B%20%7D%0D%0A%23pragma%20warning%20restore%20CS0618%20%2F%2F%20Type%20or%20member%20is%20obsolete%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Razor/Compilation/CompiledViewDescriptor.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (56) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Razor\\Compilation\\RazorViewAttribute.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Razor/Compilation/RazorViewAttribute.cs#L8"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Razor/Compilation/RazorViewAttribute.cs#L8"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor%2FCompilation%2FRazorViewAttribute.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor%2FCompilation%2FRazorViewAttribute.cs%23L8%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%5BObsolete%28%22This%20attribute%20has%20been%20superseded%20by%20RazorCompiledItem%20and%20will%20not%20be%20used%20by%20the%20runtime.%22%29%5D%0D%0A%20%20%20%20%5BAttributeUsage%28AttributeTargets.Assembly%2C%20AllowMultiple%20%3D%20true%29%5D%0D%0A%20%20%20%20public%20class%20RazorViewAttribute%20%3A%20Attribute%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Razor/Compilation/RazorViewAttribute.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (57) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Razor\\Compilation\\ViewsFeatureProvider.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Razor/Compilation/ViewsFeatureProvider.cs#L17"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Razor/Compilation/ViewsFeatureProvider.cs#L17"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor%2FCompilation%2FViewsFeatureProvider.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor%2FCompilation%2FViewsFeatureProvider.cs%23L17%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%5BObsolete%28%22This%20type%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20See%20%22%20%2B%20nameof%28IRazorCompiledItemProvider%29%20%2B%20%22%20for%20alternatives.%22%29%5D%0D%0A%20%20%20%20public%20class%20ViewsFeatureProvider%20%3A%20IApplicationFeatureProvider%3CViewsFeature%3E%0D%0A%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Razor/Compilation/ViewsFeatureProvider.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (58) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.RazorPages\\Infrastructure\\PageArgumentBinder.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.RazorPages/Infrastructure/PageArgumentBinder.cs#L10"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.RazorPages/Infrastructure/PageArgumentBinder.cs#L10"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.RazorPages%2FInfrastructure%2FPageArgumentBinder.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.RazorPages%2FInfrastructure%2FPageArgumentBinder.cs%23L10%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%5BObsolete%28%22This%20type%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20public%20abstract%20class%20PageArgumentBinder%0D%0A%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.RazorPages/Infrastructure/PageArgumentBinder.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (59) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.RazorPages\\Infrastructure\\RazorPageAdapter.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.RazorPages/Infrastructure/RazorPageAdapter.cs#L22"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.RazorPages/Infrastructure/RazorPageAdapter.cs#L22"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.RazorPages%2FInfrastructure%2FRazorPageAdapter.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.RazorPages%2FInfrastructure%2FRazorPageAdapter.cs%23L22%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20RazorPageAdapter%28RazorPageBase%20page%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.RazorPages/Infrastructure/RazorPageAdapter.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (60) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.RazorPages\\Infrastructure\\RazorPageAttribute.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.RazorPages/Infrastructure/RazorPageAttribute.cs#L9"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.RazorPages/Infrastructure/RazorPageAttribute.cs#L9"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.RazorPages%2FInfrastructure%2FRazorPageAttribute.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.RazorPages%2FInfrastructure%2FRazorPageAttribute.cs%23L9%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%5BObsolete%28%22This%20attribute%20has%20been%20superseded%20by%20RazorCompiledItem%20and%20will%20not%20be%20used%20by%20the%20runtime.%22%29%5D%0D%0A%20%20%20%20public%20class%20RazorPageAttribute%20%3A%20RazorViewAttribute%0D%0A%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.RazorPages/Infrastructure/RazorPageAttribute.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---",bug|Done|breaking-change|area-mvc,NTaylorMullen,"See #3654 for details.\r\n\r\n\r\n#### (55) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Razor\\Compilation\\CompiledViewDescriptor.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Razor/Compilation/CompiledViewDescriptor.cs#L89"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Razor/Compilation/CompiledViewDescriptor.cs#L89"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor%2FCompilation%2FCompiledViewDescriptor.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor%2FCompilation%2FCompiledViewDescriptor.cs%23L89%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22Use%20Item%20instead.%20RazorViewAttribute%20has%20been%20superseded%20by%20RazorCompiledItem%20and%20will%20not%20be%20used%20by%20the%20runtime.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20RazorViewAttribute%20ViewAttribute%20%7B%20get%3B%20set%3B%20%7D%0D%0A%23pragma%20warning%20restore%20CS0618%20%2F%2F%20Type%20or%20member%20is%20obsolete%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Razor/Compilation/CompiledViewDescriptor.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""Use Item instead. RazorViewAttribute has been superseded by RazorCompiledItem and will not be used by the runtime."")]\r\n        public RazorViewAttribute ViewAttribute { get; set; }\r\n#pragma warning restore CS0618 // Type or member is obsolete\r\n```\r\n\r\n---\r\n\r\n\r\n#### (56) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Razor\\Compilation\\RazorViewAttribute.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Razor/Compilation/RazorViewAttribute.cs#L8"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Razor/Compilation/RazorViewAttribute.cs#L8"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor%2FCompilation%2FRazorViewAttribute.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor%2FCompilation%2FRazorViewAttribute.cs%23L8%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%5BObsolete%28%22This%20attribute%20has%20been%20superseded%20by%20RazorCompiledItem%20and%20will%20not%20be%20used%20by%20the%20runtime.%22%29%5D%0D%0A%20%20%20%20%5BAttributeUsage%28AttributeTargets.Assembly%2C%20AllowMultiple%20%3D%20true%29%5D%0D%0A%20%20%20%20public%20class%20RazorViewAttribute%20%3A%20Attribute%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Razor/Compilation/RazorViewAttribute.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n    [Obsolete(""This attribute has been superseded by RazorCompiledItem and will not be used by the runtime."")]\r\n    [AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)]\r\n    public class RazorViewAttribute : Attribute\r\n```\r\n\r\n---\r\n\r\n\r\n#### (57) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Razor\\Compilation\\ViewsFeatureProvider.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Razor/Compilation/ViewsFeatureProvider.cs#L17"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Razor/Compilation/ViewsFeatureProvider.cs#L17"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor%2FCompilation%2FViewsFeatureProvider.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor%2FCompilation%2FViewsFeatureProvider.cs%23L17%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%5BObsolete%28%22This%20type%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20See%20%22%20%2B%20nameof%28IRazorCompiledItemProvider%29%20%2B%20%22%20for%20alternatives.%22%29%5D%0D%0A%20%20%20%20public%20class%20ViewsFeatureProvider%20%3A%20IApplicationFeatureProvider%3CViewsFeature%3E%0D%0A%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Razor/Compilation/ViewsFeatureProvider.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n    [Obsolete(""This type is obsolete and will be removed in a future version. See "" + nameof(IRazorCompiledItemProvider) + "" for alternatives."")]\r\n    public class ViewsFeatureProvider : IApplicationFeatureProvider<ViewsFeature>\r\n    {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (58) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.RazorPages\\Infrastructure\\PageArgumentBinder.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.RazorPages/Infrastructure/PageArgumentBinder.cs#L10"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.RazorPages/Infrastructure/PageArgumentBinder.cs#L10"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.RazorPages%2FInfrastructure%2FPageArgumentBinder.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.RazorPages%2FInfrastructure%2FPageArgumentBinder.cs%23L10%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%5BObsolete%28%22This%20type%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20public%20abstract%20class%20PageArgumentBinder%0D%0A%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.RazorPages/Infrastructure/PageArgumentBinder.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n    [Obsolete(""This type is obsolete and will be removed in a future version."")]\r\n    public abstract class PageArgumentBinder\r\n    {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (59) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.RazorPages\\Infrastructure\\RazorPageAdapter.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.RazorPages/Infrastructure/RazorPageAdapter.cs#L22"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.RazorPages/Infrastructure/RazorPageAdapter.cs#L22"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.RazorPages%2FInfrastructure%2FRazorPageAdapter.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.RazorPages%2FInfrastructure%2FRazorPageAdapter.cs%23L22%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20RazorPageAdapter%28RazorPageBase%20page%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.RazorPages/Infrastructure/RazorPageAdapter.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This constructor is obsolete and will be removed in a future version."")]\r\n        public RazorPageAdapter(RazorPageBase page)\r\n        {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (60) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.RazorPages\\Infrastructure\\RazorPageAttribute.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.RazorPages/Infrastructure/RazorPageAttribute.cs#L9"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.RazorPages/Infrastructure/RazorPageAttribute.cs#L9"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.RazorPages%2FInfrastructure%2FRazorPageAttribute.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.RazorPages%2FInfrastructure%2FRazorPageAttribute.cs%23L9%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%5BObsolete%28%22This%20attribute%20has%20been%20superseded%20by%20RazorCompiledItem%20and%20will%20not%20be%20used%20by%20the%20runtime.%22%29%5D%0D%0A%20%20%20%20public%20class%20RazorPageAttribute%20%3A%20RazorViewAttribute%0D%0A%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.RazorPages/Infrastructure/RazorPageAttribute.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n    [Obsolete(""This attribute has been superseded by RazorCompiledItem and will not be used by the runtime."")]\r\n    public class RazorPageAttribute : RazorViewAttribute\r\n    {\r\n```\r\n\r\n---","c#\r\n        [Obsolete(""Use Item instead. RazorViewAttribute has been superseded by RazorCompiledItem and will not be used by the runtime."")]\r\n        public RazorViewAttribute ViewAttribute { get; set; }\r\n#pragma warning restore CS0618 // Type or member is obsolete\r\n"
7325,"Remove obsolete APIs from CORSSee #3654  for details.\r\n\r\n#### (47) src\\Middleware\\CORS\\src\\Infrastructure\\CorsService.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Middleware/CORS/src/Infrastructure/CorsService.cs#L29"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Middleware/CORS/src/Infrastructure/CorsService.cs#L29"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMiddleware%2FCORS%2Fsrc%2FInfrastructure%2FCorsService.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMiddleware%2FCORS%2Fsrc%2FInfrastructure%2FCorsService.cs%23L29%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20CorsService%28IOptions%3CCorsOptions%3E%20options%29%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%3A%20this%28options%2C%20loggerFactory%3A%20NullLoggerFactory.Instance%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Middleware/CORS/src/Infrastructure/CorsService.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n",bug|Done|breaking-change|area-mvc,javiercn,"See #3654  for details.\r\n\r\n#### (47) src\\Middleware\\CORS\\src\\Infrastructure\\CorsService.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Middleware/CORS/src/Infrastructure/CorsService.cs#L29"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Middleware/CORS/src/Infrastructure/CorsService.cs#L29"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMiddleware%2FCORS%2Fsrc%2FInfrastructure%2FCorsService.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMiddleware%2FCORS%2Fsrc%2FInfrastructure%2FCorsService.cs%23L29%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20CorsService%28IOptions%3CCorsOptions%3E%20options%29%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%3A%20this%28options%2C%20loggerFactory%3A%20NullLoggerFactory.Instance%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Middleware/CORS/src/Infrastructure/CorsService.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This constructor is obsolete and will be removed in a future version."")]\r\n        public CorsService(IOptions<CorsOptions> options)\r\n            : this(options, loggerFactory: NullLoggerFactory.Instance)\r\n```\r\n\r\n---\r\n","c#\r\n        [Obsolete(""This constructor is obsolete and will be removed in a future version."")]\r\n        public CorsService(IOptions<CorsOptions> options)\r\n            : this(options, loggerFactory: NullLoggerFactory.Instance)\r\n"
7324,"Remove obsolete APIs from ComponentsSee #3654  for details.\r\n\r\n\r\n#### (43) src\\Components\\Components\\src\\Json\\JsonUtil.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Components/Components/src/Json/JsonUtil.cs#L12"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Components/Components/src/Json/JsonUtil.cs#L12"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FComponents%2FComponents%2Fsrc%2FJson%2FJsonUtil.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FComponents%2FComponents%2Fsrc%2FJson%2FJsonUtil.cs%23L12%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%5BObsolete%28%22Use%20Microsoft.JSInterop.Json%20instead.%22%29%5D%0D%0A%20%20%20%20public%20static%20class%20JsonUtil%0D%0A%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Components/Components/src/Json/JsonUtil.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (44) src\\Components\\Components\\src\\Json\\JsonUtil.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Components/Components/src/Json/JsonUtil.cs#L20"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Components/Components/src/Json/JsonUtil.cs#L20"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FComponents%2FComponents%2Fsrc%2FJson%2FJsonUtil.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FComponents%2FComponents%2Fsrc%2FJson%2FJsonUtil.cs%23L20%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22Use%20Microsoft.JSInterop.Json.Serialize%20instead.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20string%20Serialize%28object%20value%29%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%3D%3E%20Json.Serialize%28value%29%3B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Components/Components/src/Json/JsonUtil.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (45) src\\Components\\Components\\src\\Json\\JsonUtil.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Components/Components/src/Json/JsonUtil.cs#L30"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Components/Components/src/Json/JsonUtil.cs#L30"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FComponents%2FComponents%2Fsrc%2FJson%2FJsonUtil.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FComponents%2FComponents%2Fsrc%2FJson%2FJsonUtil.cs%23L30%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22Use%20Microsoft.JSInterop.Json.Deserialize%3CT%3E%20instead.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20T%20Deserialize%3CT%3E%28string%20json%29%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%3D%3E%20Json.Deserialize%3CT%3E%28json%29%3B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Components/Components/src/Json/JsonUtil.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---",bug|Done|breaking-change|area-mvc,javiercn,"See #3654  for details.\r\n\r\n\r\n#### (43) src\\Components\\Components\\src\\Json\\JsonUtil.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Components/Components/src/Json/JsonUtil.cs#L12"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Components/Components/src/Json/JsonUtil.cs#L12"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FComponents%2FComponents%2Fsrc%2FJson%2FJsonUtil.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FComponents%2FComponents%2Fsrc%2FJson%2FJsonUtil.cs%23L12%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%5BObsolete%28%22Use%20Microsoft.JSInterop.Json%20instead.%22%29%5D%0D%0A%20%20%20%20public%20static%20class%20JsonUtil%0D%0A%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Components/Components/src/Json/JsonUtil.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n    [Obsolete(""Use Microsoft.JSInterop.Json instead."")]\r\n    public static class JsonUtil\r\n    {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (44) src\\Components\\Components\\src\\Json\\JsonUtil.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Components/Components/src/Json/JsonUtil.cs#L20"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Components/Components/src/Json/JsonUtil.cs#L20"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FComponents%2FComponents%2Fsrc%2FJson%2FJsonUtil.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FComponents%2FComponents%2Fsrc%2FJson%2FJsonUtil.cs%23L20%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22Use%20Microsoft.JSInterop.Json.Serialize%20instead.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20string%20Serialize%28object%20value%29%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%3D%3E%20Json.Serialize%28value%29%3B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Components/Components/src/Json/JsonUtil.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""Use Microsoft.JSInterop.Json.Serialize instead."")]\r\n        public static string Serialize(object value)\r\n            => Json.Serialize(value);\r\n```\r\n\r\n---\r\n\r\n\r\n#### (45) src\\Components\\Components\\src\\Json\\JsonUtil.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Components/Components/src/Json/JsonUtil.cs#L30"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Components/Components/src/Json/JsonUtil.cs#L30"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FComponents%2FComponents%2Fsrc%2FJson%2FJsonUtil.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FComponents%2FComponents%2Fsrc%2FJson%2FJsonUtil.cs%23L30%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22Use%20Microsoft.JSInterop.Json.Deserialize%3CT%3E%20instead.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20T%20Deserialize%3CT%3E%28string%20json%29%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%3D%3E%20Json.Deserialize%3CT%3E%28json%29%3B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Components/Components/src/Json/JsonUtil.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""Use Microsoft.JSInterop.Json.Deserialize<T> instead."")]\r\n        public static T Deserialize<T>(string json)\r\n            => Json.Deserialize<T>(json);\r\n```\r\n\r\n---","c#\r\n    [Obsolete(""Use Microsoft.JSInterop.Json instead."")]\r\n    public static class JsonUtil\r\n    {\r\n"
7322,"Remove obsolete APIs from MVCSee #3654 for details.\r\n\r\n#### (15) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.ApiExplorer\\DefaultApiDescriptionProvider.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.ApiExplorer/DefaultApiDescriptionProvider.cs#L39"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.ApiExplorer/DefaultApiDescriptionProvider.cs#L39"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.ApiExplorer%2FDefaultApiDescriptionProvider.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.ApiExplorer%2FDefaultApiDescriptionProvider.cs%23L39%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20release.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20DefaultApiDescriptionProvider%28%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20IOptions%3CMvcOptions%3E%20optionsAccessor%2C%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.ApiExplorer/DefaultApiDescriptionProvider.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (16) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.ApiExplorer\\DefaultApiDescriptionProvider.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.ApiExplorer/DefaultApiDescriptionProvider.cs#L57"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.ApiExplorer/DefaultApiDescriptionProvider.cs#L57"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.ApiExplorer%2FDefaultApiDescriptionProvider.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.ApiExplorer%2FDefaultApiDescriptionProvider.cs%23L57%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20release.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20DefaultApiDescriptionProvider%28%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20IOptions%3CMvcOptions%3E%20optionsAccessor%2C%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.ApiExplorer/DefaultApiDescriptionProvider.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (17) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\CompatibilityVersion.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/CompatibilityVersion.cs#L46"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/CompatibilityVersion.cs#L46"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FCompatibilityVersion.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FCompatibilityVersion.cs%23L46%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20%22%20%2B%20nameof%28CompatibilityVersion%29%20%2B%20%22%20value%20is%20obsolete.%20The%20recommended%20alternatives%20are%20%22%20%2B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20nameof%28Version_3_0%29%20%2B%20%22%20or%20later.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20Version_2_0%2C%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/CompatibilityVersion.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (18) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\CompatibilityVersion.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/CompatibilityVersion.cs#L58"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/CompatibilityVersion.cs#L58"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FCompatibilityVersion.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FCompatibilityVersion.cs%23L58%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20%22%20%2B%20nameof%28CompatibilityVersion%29%20%2B%20%22%20value%20is%20obsolete.%20The%20recommended%20alternatives%20are%20%22%20%2B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20nameof%28Version_3_0%29%20%2B%20%22%20or%20later.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20Version_2_1%2C%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/CompatibilityVersion.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (19) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\CompatibilityVersion.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/CompatibilityVersion.cs#L75"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/CompatibilityVersion.cs#L75"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FCompatibilityVersion.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FCompatibilityVersion.cs%23L75%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20%22%20%2B%20nameof%28CompatibilityVersion%29%20%2B%20%22%20value%20is%20obsolete.%20The%20recommended%20alternatives%20are%20%22%20%2B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20nameof%28Version_3_0%29%20%2B%20%22%20or%20later.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20Version_2_2%2C%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/CompatibilityVersion.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (20) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\LocalRedirectResult.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/LocalRedirectResult.cs#L109"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/LocalRedirectResult.cs#L109"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FLocalRedirectResult.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FLocalRedirectResult.cs%23L109%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20implementation%20will%20be%20removed%20in%20a%20future%20release%2C%20use%20ExecuteResultAsync.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20override%20void%20ExecuteResult%28ActionContext%20context%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/LocalRedirectResult.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (21) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\RedirectResult.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/RedirectResult.cs#L119"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/RedirectResult.cs#L119"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FRedirectResult.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FRedirectResult.cs%23L119%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20implementation%20will%20be%20removed%20in%20a%20future%20release%2C%20use%20ExecuteResultAsync.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20override%20void%20ExecuteResult%28ActionContext%20context%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/RedirectResult.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (22) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\RedirectToActionResult.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/RedirectToActionResult.cs#L186"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/RedirectToActionResult.cs#L186"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FRedirectToActionResult.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FRedirectToActionResult.cs%23L186%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20implementation%20will%20be%20removed%20in%20a%20future%20release%2C%20use%20ExecuteResultAsync.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20override%20void%20ExecuteResult%28ActionContext%20context%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/RedirectToActionResult.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (23) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\RedirectToPageResult.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/RedirectToPageResult.cs#L225"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/RedirectToPageResult.cs#L225"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FRedirectToPageResult.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FRedirectToPageResult.cs%23L225%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20implementation%20will%20be%20removed%20in%20a%20future%20release%2C%20use%20ExecuteResultAsync.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20override%20void%20ExecuteResult%28ActionContext%20context%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/RedirectToPageResult.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (24) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\RedirectToRouteResult.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/RedirectToRouteResult.cs#L178"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/RedirectToRouteResult.cs#L178"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FRedirectToRouteResult.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FRedirectToRouteResult.cs%23L178%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20implementation%20will%20be%20removed%20in%20a%20future%20release%2C%20use%20ExecuteResultAsync.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20override%20void%20ExecuteResult%28ActionContext%20context%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/RedirectToRouteResult.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (25) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Formatters.Xml\\ProblemDetails21Wrapper.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Xml/ProblemDetails21Wrapper.cs#L16"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Xml/ProblemDetails21Wrapper.cs#L16"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Formatters.Xml%2FProblemDetails21Wrapper.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Formatters.Xml%2FProblemDetails21Wrapper.cs%23L16%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%5BObsolete%28%22This%20type%20is%20deprecated%20and%20will%20be%20removed%20in%20a%20future%20version%22%29%5D%0D%0A%20%20%20%20public%20class%20ProblemDetails21Wrapper%20%3A%20IXmlSerializable%2C%20IUnwrappable%0D%0A%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Xml/ProblemDetails21Wrapper.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (26) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Formatters.Xml\\ValidationProblemDetails21Wrapper.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Xml/ValidationProblemDetails21Wrapper.cs#L14"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Xml/ValidationProblemDetails21Wrapper.cs#L14"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Formatters.Xml%2FValidationProblemDetails21Wrapper.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Formatters.Xml%2FValidationProblemDetails21Wrapper.cs%23L14%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%5BObsolete%28%22This%20type%20is%20deprecated%20and%20will%20be%20removed%20in%20a%20future%20version%22%29%5D%0D%0A%20%20%20%20public%20class%20ValidationProblemDetails21Wrapper%20%3A%20ProblemDetails21Wrapper%2C%20IUnwrappable%0D%0A%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Xml/ValidationProblemDetails21Wrapper.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (27) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Formatters.Xml\\XmlDataContractSerializerInputFormatter.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Xml/XmlDataContractSerializerInputFormatter.cs#L36"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Xml/XmlDataContractSerializerInputFormatter.cs#L36"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Formatters.Xml%2FXmlDataContractSerializerInputFormatter.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Formatters.Xml%2FXmlDataContractSerializerInputFormatter.cs%23L36%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20XmlDataContractSerializerInputFormatter%28%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Xml/XmlDataContractSerializerInputFormatter.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (28) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Formatters.Xml\\XmlDataContractSerializerInputFormatter.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Xml/XmlDataContractSerializerInputFormatter.cs#L58"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Xml/XmlDataContractSerializerInputFormatter.cs#L58"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Formatters.Xml%2FXmlDataContractSerializerInputFormatter.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Formatters.Xml%2FXmlDataContractSerializerInputFormatter.cs%23L58%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20XmlDataContractSerializerInputFormatter%28bool%20suppressInputFormatterBuffering%29%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%3A%20this%28%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Xml/XmlDataContractSerializerInputFormatter.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (29) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Formatters.Xml\\XmlSerializerInputFormatter.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Xml/XmlSerializerInputFormatter.cs#L35"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Xml/XmlSerializerInputFormatter.cs#L35"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Formatters.Xml%2FXmlSerializerInputFormatter.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Formatters.Xml%2FXmlSerializerInputFormatter.cs%23L35%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20XmlSerializerInputFormatter%28%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Xml/XmlSerializerInputFormatter.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (30) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Formatters.Xml\\XmlSerializerInputFormatter.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Xml/XmlSerializerInputFormatter.cs#L55"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Xml/XmlSerializerInputFormatter.cs#L55"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Formatters.Xml%2FXmlSerializerInputFormatter.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Formatters.Xml%2FXmlSerializerInputFormatter.cs%23L55%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20XmlSerializerInputFormatter%28bool%20suppressInputFormatterBuffering%29%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%3A%20this%28%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Xml/XmlSerializerInputFormatter.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (31) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.NewtonsoftJson\\NewtonsoftJsonInputFormatter.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.NewtonsoftJson/NewtonsoftJsonInputFormatter.cs#L51"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.NewtonsoftJson/NewtonsoftJsonInputFormatter.cs#L51"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.NewtonsoftJson%2FNewtonsoftJsonInputFormatter.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.NewtonsoftJson%2FNewtonsoftJsonInputFormatter.cs%23L51%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20NewtonsoftJsonInputFormatter%28%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20ILogger%20logger%2C%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.NewtonsoftJson/NewtonsoftJsonInputFormatter.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (32) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.NewtonsoftJson\\NewtonsoftJsonInputFormatter.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.NewtonsoftJson/NewtonsoftJsonInputFormatter.cs#L74"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.NewtonsoftJson/NewtonsoftJsonInputFormatter.cs#L74"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.NewtonsoftJson%2FNewtonsoftJsonInputFormatter.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.NewtonsoftJson%2FNewtonsoftJsonInputFormatter.cs%23L74%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20NewtonsoftJsonInputFormatter%28%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20ILogger%20logger%2C%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.NewtonsoftJson/NewtonsoftJsonInputFormatter.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (33) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.NewtonsoftJson\\NewtonsoftJsonInputFormatter.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.NewtonsoftJson/NewtonsoftJsonInputFormatter.cs#L100"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.NewtonsoftJson/NewtonsoftJsonInputFormatter.cs#L100"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.NewtonsoftJson%2FNewtonsoftJsonInputFormatter.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.NewtonsoftJson%2FNewtonsoftJsonInputFormatter.cs%23L100%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20NewtonsoftJsonInputFormatter%28%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20ILogger%20logger%2C%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.NewtonsoftJson/NewtonsoftJsonInputFormatter.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (34) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.NewtonsoftJson\\NewtonsoftJsonPatchInputFormatter.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.NewtonsoftJson/NewtonsoftJsonPatchInputFormatter.cs#L33"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.NewtonsoftJson/NewtonsoftJsonPatchInputFormatter.cs#L33"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.NewtonsoftJson%2FNewtonsoftJsonPatchInputFormatter.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.NewtonsoftJson%2FNewtonsoftJsonPatchInputFormatter.cs%23L33%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20NewtonsoftJsonPatchInputFormatter%28%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20ILogger%20logger%2C%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.NewtonsoftJson/NewtonsoftJsonPatchInputFormatter.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (35) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.NewtonsoftJson\\NewtonsoftJsonPatchInputFormatter.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.NewtonsoftJson/NewtonsoftJsonPatchInputFormatter.cs#L55"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.NewtonsoftJson/NewtonsoftJsonPatchInputFormatter.cs#L55"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.NewtonsoftJson%2FNewtonsoftJsonPatchInputFormatter.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.NewtonsoftJson%2FNewtonsoftJsonPatchInputFormatter.cs%23L55%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20NewtonsoftJsonPatchInputFormatter%28%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20ILogger%20logger%2C%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.NewtonsoftJson/NewtonsoftJsonPatchInputFormatter.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (36) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.NewtonsoftJson\\NewtonsoftJsonPatchInputFormatter.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.NewtonsoftJson/NewtonsoftJsonPatchInputFormatter.cs#L81"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.NewtonsoftJson/NewtonsoftJsonPatchInputFormatter.cs#L81"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.NewtonsoftJson%2FNewtonsoftJsonPatchInputFormatter.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.NewtonsoftJson%2FNewtonsoftJsonPatchInputFormatter.cs%23L81%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20NewtonsoftJsonPatchInputFormatter%28%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20ILogger%20logger%2C%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.NewtonsoftJson/NewtonsoftJsonPatchInputFormatter.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (37) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.TagHelpers\\ImageTagHelper.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.TagHelpers/ImageTagHelper.cs#L39"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.TagHelpers/ImageTagHelper.cs#L39"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.TagHelpers%2FImageTagHelper.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.TagHelpers%2FImageTagHelper.cs%23L39%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20ImageTagHelper%28%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20IHostingEnvironment%20hostingEnvironment%2C%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.TagHelpers/ImageTagHelper.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (38) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.TagHelpers\\LinkTagHelper.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.TagHelpers/LinkTagHelper.cs#L106"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.TagHelpers/LinkTagHelper.cs#L106"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.TagHelpers%2FLinkTagHelper.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.TagHelpers%2FLinkTagHelper.cs%23L106%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20LinkTagHelper%28%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20IHostingEnvironment%20hostingEnvironment%2C%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.TagHelpers/LinkTagHelper.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (39) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.TagHelpers\\ScriptTagHelper.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.TagHelpers/ScriptTagHelper.cs#L89"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.TagHelpers/ScriptTagHelper.cs#L89"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.TagHelpers%2FScriptTagHelper.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.TagHelpers%2FScriptTagHelper.cs%23L89%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20ScriptTagHelper%28%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20IHostingEnvironment%20hostingEnvironment%2C%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.TagHelpers/ScriptTagHelper.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (40) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.ViewFeatures\\CookieTempDataProviderOptions.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/CookieTempDataProviderOptions.cs#L69"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/CookieTempDataProviderOptions.cs#L69"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.ViewFeatures%2FCookieTempDataProviderOptions.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.ViewFeatures%2FCookieTempDataProviderOptions.cs%23L69%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20property%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%20is%20%22%20%2B%20nameof%28Cookie%29%20%2B%20%22.%22%20%2B%20nameof%28CookieBuilder.Path%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20string%20Path%20%7B%20get%20%3D%3E%20Cookie.Path%3B%20set%20%3D%3E%20Cookie.Path%20%3D%20value%3B%20%7D%0D%0A%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/CookieTempDataProviderOptions.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (41) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.ViewFeatures\\CookieTempDataProviderOptions.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/CookieTempDataProviderOptions.cs#L80"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/CookieTempDataProviderOptions.cs#L80"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.ViewFeatures%2FCookieTempDataProviderOptions.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.ViewFeatures%2FCookieTempDataProviderOptions.cs%23L80%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20property%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%20is%20%22%20%2B%20nameof%28Cookie%29%20%2B%20%22.%22%20%2B%20nameof%28CookieBuilder.Domain%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20string%20Domain%20%7B%20get%20%3D%3E%20Cookie.Domain%3B%20set%20%3D%3E%20Cookie.Domain%20%3D%20value%3B%20%7D%0D%0A%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/CookieTempDataProviderOptions.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (42) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.ViewFeatures\\CookieTempDataProviderOptions.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/CookieTempDataProviderOptions.cs#L91"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/CookieTempDataProviderOptions.cs#L91"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.ViewFeatures%2FCookieTempDataProviderOptions.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.ViewFeatures%2FCookieTempDataProviderOptions.cs%23L91%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20property%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%20is%20%22%20%2B%20nameof%28Cookie%29%20%2B%20%22.%22%20%2B%20nameof%28CookieBuilder.Name%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20string%20CookieName%20%7B%20get%3B%20set%3B%20%7D%20%3D%20CookieTempDataProvider.CookieName%3B%0D%0A%20%20%20%20%20%20%20%20%23endregion%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/CookieTempDataProviderOptions.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n\r\n\r\n#### (48) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Abstractions\\Formatters\\OutputFormatterCanWriteContext.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Abstractions/Formatters/OutputFormatterCanWriteContext.cs#L24"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Abstractions/Formatters/OutputFormatterCanWriteContext.cs#L24"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Abstractions%2FFormatters%2FOutputFormatterCanWriteContext.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Abstractions%2FFormatters%2FOutputFormatterCanWriteContext.cs%23L24%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20Please%20use%20the%20constructor%20taking%20a%20HttpContext%20instead.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20protected%20OutputFormatterCanWriteContext%28%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Abstractions/Formatters/OutputFormatterCanWriteContext.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (49) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\Formatters\\FormatFilter.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Formatters/FormatFilter.cs#L28"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Formatters/FormatFilter.cs#L28"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FFormatters%2FFormatFilter.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FFormatters%2FFormatFilter.cs%23L28%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20FormatFilter%28IOptions%3CMvcOptions%3E%20options%29%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%3A%20this%28options%2C%20NullLoggerFactory.Instance%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Formatters/FormatFilter.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (50) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\ModelBinding\\ModelBinderFactory.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/ModelBinderFactory.cs#L37"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/ModelBinderFactory.cs#L37"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FModelBinderFactory.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FModelBinderFactory.cs%23L37%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%22%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2B%20%22%20is%20the%20overload%20that%20also%20takes%20an%20%22%20%2B%20nameof%28IServiceProvider%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20ModelBinderFactory%28IModelMetadataProvider%20metadataProvider%2C%20IOptions%3CMvcOptions%3E%20options%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/ModelBinderFactory.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (51) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\ModelBinding\\ParameterBinder.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/ParameterBinder.cs#L33"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/ParameterBinder.cs#L33"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FParameterBinder.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FParameterBinder.cs%23L33%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%22%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2B%20%22%20is%20the%20overload%20that%20also%20takes%20a%20%22%20%2B%20nameof%28MvcOptions%29%20%2B%20%22%20accessor%20and%20an%20%22%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2B%20nameof%28ILoggerFactory%29%20%2B%20%22%20.%22%29%5D%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/ParameterBinder.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (52) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\ModelBinding\\ParameterBinder.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/ParameterBinder.cs#L112"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/ParameterBinder.cs#L112"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FParameterBinder.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FParameterBinder.cs%23L112%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20overload%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20%22%20%2B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%22alternative%20is%20the%20overload%20that%20also%20takes%20%22%20%2B%20nameof%28IModelBinder%29%20%2B%20%22%2C%20%22%20%2B%20nameof%28ModelMetadata%29%20%2B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%22%20and%20%22%20%2B%20nameof%28Object%29%20%2B%20%22%20parameters.%22%29%5D%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/ParameterBinder.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (53) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\ModelBinding\\ParameterBinder.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/ParameterBinder.cs#L139"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/ParameterBinder.cs#L139"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FParameterBinder.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FParameterBinder.cs%23L139%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20overload%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20%22%20%2B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%22alternative%20is%20the%20overload%20that%20also%20takes%20%22%20%2B%20nameof%28IModelBinder%29%20%2B%20%22%20and%20%22%20%2B%20nameof%28ModelMetadata%29%20%2B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%22%20parameters.%22%29%5D%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/ParameterBinder.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (54) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\Routing\\KnownRouteValueConstraint.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Routing/KnownRouteValueConstraint.cs#L21"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Routing/KnownRouteValueConstraint.cs#L21"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FRouting%2FKnownRouteValueConstraint.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FRouting%2FKnownRouteValueConstraint.cs%23L21%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete.%20Use%20KnownRouteValueConstraint.ctor%28IActionDescriptorCollectionProvider%29%20instead.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20KnownRouteValueConstraint%28%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Routing/KnownRouteValueConstraint.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (77) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\ModelBinding\\Binders\\ArrayModelBinder.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/ArrayModelBinder.cs#L27"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/ArrayModelBinder.cs#L27"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FArrayModelBinder.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FArrayModelBinder.cs%23L27%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%22%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2B%20%22%20is%20the%20overload%20that%20also%20takes%20an%20%22%20%2B%20nameof%28ILoggerFactory%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20ArrayModelBinder%28IModelBinder%20elementBinder%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/ArrayModelBinder.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (78) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\ModelBinding\\Binders\\ByteArrayModelBinder.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/ByteArrayModelBinder.cs#L23"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/ByteArrayModelBinder.cs#L23"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FByteArrayModelBinder.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FByteArrayModelBinder.cs%23L23%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%22%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2B%20%22%20is%20the%20overload%20that%20takes%20an%20%22%20%2B%20nameof%28ILoggerFactory%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20ByteArrayModelBinder%28%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/ByteArrayModelBinder.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (79) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\ModelBinding\\Binders\\CollectionModelBinder.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/CollectionModelBinder.cs#L33"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/CollectionModelBinder.cs#L33"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FCollectionModelBinder.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FCollectionModelBinder.cs%23L33%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%22%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2B%20%22%20is%20the%20overload%20that%20also%20takes%20an%20%22%20%2B%20nameof%28ILoggerFactory%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20CollectionModelBinder%28IModelBinder%20elementBinder%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/CollectionModelBinder.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (80) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\ModelBinding\\Binders\\ComplexTypeModelBinder.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/ComplexTypeModelBinder.cs#L33"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/ComplexTypeModelBinder.cs#L33"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FComplexTypeModelBinder.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FComplexTypeModelBinder.cs%23L33%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%22%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2B%20%22%20is%20the%20overload%20that%20also%20takes%20an%20%22%20%2B%20nameof%28ILoggerFactory%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20ComplexTypeModelBinder%28IDictionary%3CModelMetadata%2C%20IModelBinder%3E%20propertyBinders%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/ComplexTypeModelBinder.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (81) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\ModelBinding\\Binders\\DecimalModelBinder.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/DecimalModelBinder.cs#L28"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/DecimalModelBinder.cs#L28"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FDecimalModelBinder.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FDecimalModelBinder.cs%23L28%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%22%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2B%20%22%20is%20the%20overload%20that%20also%20takes%20an%20%22%20%2B%20nameof%28ILoggerFactory%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20DecimalModelBinder%28NumberStyles%20supportedStyles%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/DecimalModelBinder.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (82) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\ModelBinding\\Binders\\DictionaryModelBinder.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/DictionaryModelBinder.cs#L31"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/DictionaryModelBinder.cs#L31"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FDictionaryModelBinder.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FDictionaryModelBinder.cs%23L31%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%22%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2B%20%22%20is%20the%20overload%20that%20also%20takes%20an%20%22%20%2B%20nameof%28ILoggerFactory%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20DictionaryModelBinder%28IModelBinder%20keyBinder%2C%20IModelBinder%20valueBinder%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/DictionaryModelBinder.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (83) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\ModelBinding\\Binders\\DoubleModelBinder.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/DoubleModelBinder.cs#L28"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/DoubleModelBinder.cs#L28"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FDoubleModelBinder.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FDoubleModelBinder.cs%23L28%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%22%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2B%20%22%20is%20the%20overload%20that%20also%20takes%20an%20%22%20%2B%20nameof%28ILoggerFactory%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20DoubleModelBinder%28NumberStyles%20supportedStyles%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/DoubleModelBinder.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (84) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\ModelBinding\\Binders\\FloatModelBinder.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/FloatModelBinder.cs#L28"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/FloatModelBinder.cs#L28"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FFloatModelBinder.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FFloatModelBinder.cs%23L28%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%22%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2B%20%22%20is%20the%20overload%20that%20also%20takes%20an%20%22%20%2B%20nameof%28ILoggerFactory%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20FloatModelBinder%28NumberStyles%20supportedStyles%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/FloatModelBinder.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (85) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\ModelBinding\\Binders\\FormCollectionModelBinder.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/FormCollectionModelBinder.cs#L28"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/FormCollectionModelBinder.cs#L28"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FFormCollectionModelBinder.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FFormCollectionModelBinder.cs%23L28%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%22%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2B%20%22%20is%20the%20overload%20that%20takes%20an%20%22%20%2B%20nameof%28ILoggerFactory%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20FormCollectionModelBinder%28%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/FormCollectionModelBinder.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (86) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\ModelBinding\\Binders\\FormFileModelBinder.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/FormFileModelBinder.cs#L29"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/FormFileModelBinder.cs#L29"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FFormFileModelBinder.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FFormFileModelBinder.cs%23L29%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%22%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2B%20%22%20is%20the%20overload%20that%20takes%20an%20%22%20%2B%20nameof%28ILoggerFactory%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20FormFileModelBinder%28%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/FormFileModelBinder.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (87) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\ModelBinding\\Binders\\HeaderModelBinder.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/HeaderModelBinder.cs#L27"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/HeaderModelBinder.cs#L27"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FHeaderModelBinder.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FHeaderModelBinder.cs%23L27%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%22%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2B%20%22%20is%20the%20overload%20that%20takes%20an%20%22%20%2B%20nameof%28ILoggerFactory%29%20%2B%20%22%20and%20an%20%22%20%2B%20nameof%28IModelBinder%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20HeaderModelBinder%28%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/HeaderModelBinder.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (88) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\ModelBinding\\Binders\\KeyValuePairModelBinder.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/KeyValuePairModelBinder.cs#L30"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/KeyValuePairModelBinder.cs#L30"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FKeyValuePairModelBinder.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FKeyValuePairModelBinder.cs%23L30%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%22%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2B%20%22%20is%20the%20overload%20that%20also%20takes%20an%20%22%20%2B%20nameof%28ILoggerFactory%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20KeyValuePairModelBinder%28IModelBinder%20keyBinder%2C%20IModelBinder%20valueBinder%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/KeyValuePairModelBinder.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (89) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\ModelBinding\\Binders\\SimpleTypeModelBinder.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/SimpleTypeModelBinder.cs#L27"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/SimpleTypeModelBinder.cs#L27"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FSimpleTypeModelBinder.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FSimpleTypeModelBinder.cs%23L27%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%22%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2B%20%22%20is%20the%20overload%20that%20also%20takes%20an%20%22%20%2B%20nameof%28ILoggerFactory%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20SimpleTypeModelBinder%28Type%20type%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/SimpleTypeModelBinder.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (90) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\ModelBinding\\Metadata\\ModelAttributes.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/ModelAttributes.cs#L22"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/ModelAttributes.cs#L22"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FMetadata%2FModelAttributes.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FMetadata%2FModelAttributes.cs%23L22%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%20is%20%22%20%2B%20nameof%28ModelAttributes%29%20%2B%20%22.%22%20%2B%20nameof%28GetAttributesForType%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20ModelAttributes%28IEnumerable%3Cobject%3E%20typeAttributes%29%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%3A%20this%28typeAttributes%2C%20null%2C%20null%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/ModelAttributes.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (91) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\ModelBinding\\Metadata\\ModelAttributes.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/ModelAttributes.cs#L35"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/ModelAttributes.cs#L35"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FMetadata%2FModelAttributes.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FMetadata%2FModelAttributes.cs%23L35%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%20is%20%22%20%2B%20nameof%28ModelAttributes%29%20%2B%20%22.%22%20%2B%20nameof%28GetAttributesForProperty%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20ModelAttributes%28IEnumerable%3Cobject%3E%20propertyAttributes%2C%20IEnumerable%3Cobject%3E%20typeAttributes%29%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%3A%20this%28typeAttributes%2C%20propertyAttributes%2C%20null%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/ModelAttributes.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n",bug|Done|breaking-change|area-mvc,pranavkm,"See #3654 for details.\r\n\r\n#### (15) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.ApiExplorer\\DefaultApiDescriptionProvider.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.ApiExplorer/DefaultApiDescriptionProvider.cs#L39"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.ApiExplorer/DefaultApiDescriptionProvider.cs#L39"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.ApiExplorer%2FDefaultApiDescriptionProvider.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.ApiExplorer%2FDefaultApiDescriptionProvider.cs%23L39%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20release.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20DefaultApiDescriptionProvider%28%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20IOptions%3CMvcOptions%3E%20optionsAccessor%2C%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.ApiExplorer/DefaultApiDescriptionProvider.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This constructor is obsolete and will be removed in a future release."")]\r\n        public DefaultApiDescriptionProvider(\r\n            IOptions<MvcOptions> optionsAccessor,\r\n```\r\n\r\n---\r\n\r\n\r\n#### (16) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.ApiExplorer\\DefaultApiDescriptionProvider.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.ApiExplorer/DefaultApiDescriptionProvider.cs#L57"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.ApiExplorer/DefaultApiDescriptionProvider.cs#L57"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.ApiExplorer%2FDefaultApiDescriptionProvider.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.ApiExplorer%2FDefaultApiDescriptionProvider.cs%23L57%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20release.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20DefaultApiDescriptionProvider%28%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20IOptions%3CMvcOptions%3E%20optionsAccessor%2C%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.ApiExplorer/DefaultApiDescriptionProvider.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This constructor is obsolete and will be removed in a future release."")]\r\n        public DefaultApiDescriptionProvider(\r\n            IOptions<MvcOptions> optionsAccessor,\r\n```\r\n\r\n---\r\n\r\n\r\n#### (17) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\CompatibilityVersion.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/CompatibilityVersion.cs#L46"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/CompatibilityVersion.cs#L46"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FCompatibilityVersion.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FCompatibilityVersion.cs%23L46%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20%22%20%2B%20nameof%28CompatibilityVersion%29%20%2B%20%22%20value%20is%20obsolete.%20The%20recommended%20alternatives%20are%20%22%20%2B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20nameof%28Version_3_0%29%20%2B%20%22%20or%20later.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20Version_2_0%2C%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/CompatibilityVersion.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This "" + nameof(CompatibilityVersion) + "" value is obsolete. The recommended alternatives are "" +\r\n            nameof(Version_3_0) + "" or later."")]\r\n        Version_2_0,\r\n```\r\n\r\n---\r\n\r\n\r\n#### (18) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\CompatibilityVersion.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/CompatibilityVersion.cs#L58"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/CompatibilityVersion.cs#L58"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FCompatibilityVersion.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FCompatibilityVersion.cs%23L58%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20%22%20%2B%20nameof%28CompatibilityVersion%29%20%2B%20%22%20value%20is%20obsolete.%20The%20recommended%20alternatives%20are%20%22%20%2B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20nameof%28Version_3_0%29%20%2B%20%22%20or%20later.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20Version_2_1%2C%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/CompatibilityVersion.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This "" + nameof(CompatibilityVersion) + "" value is obsolete. The recommended alternatives are "" +\r\n            nameof(Version_3_0) + "" or later."")]\r\n        Version_2_1,\r\n```\r\n\r\n---\r\n\r\n\r\n#### (19) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\CompatibilityVersion.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/CompatibilityVersion.cs#L75"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/CompatibilityVersion.cs#L75"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FCompatibilityVersion.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FCompatibilityVersion.cs%23L75%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20%22%20%2B%20nameof%28CompatibilityVersion%29%20%2B%20%22%20value%20is%20obsolete.%20The%20recommended%20alternatives%20are%20%22%20%2B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20nameof%28Version_3_0%29%20%2B%20%22%20or%20later.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20Version_2_2%2C%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/CompatibilityVersion.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This "" + nameof(CompatibilityVersion) + "" value is obsolete. The recommended alternatives are "" +\r\n            nameof(Version_3_0) + "" or later."")]\r\n        Version_2_2,\r\n```\r\n\r\n---\r\n\r\n\r\n#### (20) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\LocalRedirectResult.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/LocalRedirectResult.cs#L109"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/LocalRedirectResult.cs#L109"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FLocalRedirectResult.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FLocalRedirectResult.cs%23L109%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20implementation%20will%20be%20removed%20in%20a%20future%20release%2C%20use%20ExecuteResultAsync.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20override%20void%20ExecuteResult%28ActionContext%20context%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/LocalRedirectResult.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This implementation will be removed in a future release, use ExecuteResultAsync."")]\r\n        public override void ExecuteResult(ActionContext context)\r\n        {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (21) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\RedirectResult.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/RedirectResult.cs#L119"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/RedirectResult.cs#L119"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FRedirectResult.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FRedirectResult.cs%23L119%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20implementation%20will%20be%20removed%20in%20a%20future%20release%2C%20use%20ExecuteResultAsync.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20override%20void%20ExecuteResult%28ActionContext%20context%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/RedirectResult.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This implementation will be removed in a future release, use ExecuteResultAsync."")]\r\n        public override void ExecuteResult(ActionContext context)\r\n        {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (22) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\RedirectToActionResult.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/RedirectToActionResult.cs#L186"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/RedirectToActionResult.cs#L186"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FRedirectToActionResult.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FRedirectToActionResult.cs%23L186%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20implementation%20will%20be%20removed%20in%20a%20future%20release%2C%20use%20ExecuteResultAsync.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20override%20void%20ExecuteResult%28ActionContext%20context%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/RedirectToActionResult.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This implementation will be removed in a future release, use ExecuteResultAsync."")]\r\n        public override void ExecuteResult(ActionContext context)\r\n        {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (23) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\RedirectToPageResult.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/RedirectToPageResult.cs#L225"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/RedirectToPageResult.cs#L225"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FRedirectToPageResult.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FRedirectToPageResult.cs%23L225%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20implementation%20will%20be%20removed%20in%20a%20future%20release%2C%20use%20ExecuteResultAsync.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20override%20void%20ExecuteResult%28ActionContext%20context%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/RedirectToPageResult.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This implementation will be removed in a future release, use ExecuteResultAsync."")]\r\n        public override void ExecuteResult(ActionContext context)\r\n        {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (24) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\RedirectToRouteResult.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/RedirectToRouteResult.cs#L178"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/RedirectToRouteResult.cs#L178"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FRedirectToRouteResult.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FRedirectToRouteResult.cs%23L178%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20implementation%20will%20be%20removed%20in%20a%20future%20release%2C%20use%20ExecuteResultAsync.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20override%20void%20ExecuteResult%28ActionContext%20context%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/RedirectToRouteResult.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This implementation will be removed in a future release, use ExecuteResultAsync."")]\r\n        public override void ExecuteResult(ActionContext context)\r\n        {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (25) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Formatters.Xml\\ProblemDetails21Wrapper.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Xml/ProblemDetails21Wrapper.cs#L16"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Xml/ProblemDetails21Wrapper.cs#L16"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Formatters.Xml%2FProblemDetails21Wrapper.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Formatters.Xml%2FProblemDetails21Wrapper.cs%23L16%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%5BObsolete%28%22This%20type%20is%20deprecated%20and%20will%20be%20removed%20in%20a%20future%20version%22%29%5D%0D%0A%20%20%20%20public%20class%20ProblemDetails21Wrapper%20%3A%20IXmlSerializable%2C%20IUnwrappable%0D%0A%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Xml/ProblemDetails21Wrapper.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n    [Obsolete(""This type is deprecated and will be removed in a future version"")]\r\n    public class ProblemDetails21Wrapper : IXmlSerializable, IUnwrappable\r\n    {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (26) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Formatters.Xml\\ValidationProblemDetails21Wrapper.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Xml/ValidationProblemDetails21Wrapper.cs#L14"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Xml/ValidationProblemDetails21Wrapper.cs#L14"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Formatters.Xml%2FValidationProblemDetails21Wrapper.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Formatters.Xml%2FValidationProblemDetails21Wrapper.cs%23L14%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%5BObsolete%28%22This%20type%20is%20deprecated%20and%20will%20be%20removed%20in%20a%20future%20version%22%29%5D%0D%0A%20%20%20%20public%20class%20ValidationProblemDetails21Wrapper%20%3A%20ProblemDetails21Wrapper%2C%20IUnwrappable%0D%0A%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Xml/ValidationProblemDetails21Wrapper.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n    [Obsolete(""This type is deprecated and will be removed in a future version"")]\r\n    public class ValidationProblemDetails21Wrapper : ProblemDetails21Wrapper, IUnwrappable\r\n    {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (27) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Formatters.Xml\\XmlDataContractSerializerInputFormatter.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Xml/XmlDataContractSerializerInputFormatter.cs#L36"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Xml/XmlDataContractSerializerInputFormatter.cs#L36"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Formatters.Xml%2FXmlDataContractSerializerInputFormatter.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Formatters.Xml%2FXmlDataContractSerializerInputFormatter.cs%23L36%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20XmlDataContractSerializerInputFormatter%28%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Xml/XmlDataContractSerializerInputFormatter.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This constructor is obsolete and will be removed in a future version."")]\r\n        public XmlDataContractSerializerInputFormatter()\r\n        {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (28) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Formatters.Xml\\XmlDataContractSerializerInputFormatter.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Xml/XmlDataContractSerializerInputFormatter.cs#L58"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Xml/XmlDataContractSerializerInputFormatter.cs#L58"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Formatters.Xml%2FXmlDataContractSerializerInputFormatter.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Formatters.Xml%2FXmlDataContractSerializerInputFormatter.cs%23L58%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20XmlDataContractSerializerInputFormatter%28bool%20suppressInputFormatterBuffering%29%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%3A%20this%28%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Xml/XmlDataContractSerializerInputFormatter.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This constructor is obsolete and will be removed in a future version."")]\r\n        public XmlDataContractSerializerInputFormatter(bool suppressInputFormatterBuffering)\r\n            : this()\r\n```\r\n\r\n---\r\n\r\n\r\n#### (29) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Formatters.Xml\\XmlSerializerInputFormatter.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Xml/XmlSerializerInputFormatter.cs#L35"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Xml/XmlSerializerInputFormatter.cs#L35"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Formatters.Xml%2FXmlSerializerInputFormatter.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Formatters.Xml%2FXmlSerializerInputFormatter.cs%23L35%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20XmlSerializerInputFormatter%28%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Xml/XmlSerializerInputFormatter.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This constructor is obsolete and will be removed in a future version."")]\r\n        public XmlSerializerInputFormatter()\r\n        {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (30) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Formatters.Xml\\XmlSerializerInputFormatter.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Xml/XmlSerializerInputFormatter.cs#L55"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Xml/XmlSerializerInputFormatter.cs#L55"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Formatters.Xml%2FXmlSerializerInputFormatter.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Formatters.Xml%2FXmlSerializerInputFormatter.cs%23L55%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20XmlSerializerInputFormatter%28bool%20suppressInputFormatterBuffering%29%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%3A%20this%28%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Formatters.Xml/XmlSerializerInputFormatter.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This constructor is obsolete and will be removed in a future version."")]\r\n        public XmlSerializerInputFormatter(bool suppressInputFormatterBuffering)\r\n            : this()\r\n```\r\n\r\n---\r\n\r\n\r\n#### (31) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.NewtonsoftJson\\NewtonsoftJsonInputFormatter.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.NewtonsoftJson/NewtonsoftJsonInputFormatter.cs#L51"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.NewtonsoftJson/NewtonsoftJsonInputFormatter.cs#L51"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.NewtonsoftJson%2FNewtonsoftJsonInputFormatter.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.NewtonsoftJson%2FNewtonsoftJsonInputFormatter.cs%23L51%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20NewtonsoftJsonInputFormatter%28%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20ILogger%20logger%2C%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.NewtonsoftJson/NewtonsoftJsonInputFormatter.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This constructor is obsolete and will be removed in a future version."")]\r\n        public NewtonsoftJsonInputFormatter(\r\n            ILogger logger,\r\n```\r\n\r\n---\r\n\r\n\r\n#### (32) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.NewtonsoftJson\\NewtonsoftJsonInputFormatter.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.NewtonsoftJson/NewtonsoftJsonInputFormatter.cs#L74"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.NewtonsoftJson/NewtonsoftJsonInputFormatter.cs#L74"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.NewtonsoftJson%2FNewtonsoftJsonInputFormatter.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.NewtonsoftJson%2FNewtonsoftJsonInputFormatter.cs%23L74%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20NewtonsoftJsonInputFormatter%28%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20ILogger%20logger%2C%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.NewtonsoftJson/NewtonsoftJsonInputFormatter.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This constructor is obsolete and will be removed in a future version."")]\r\n        public NewtonsoftJsonInputFormatter(\r\n            ILogger logger,\r\n```\r\n\r\n---\r\n\r\n\r\n#### (33) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.NewtonsoftJson\\NewtonsoftJsonInputFormatter.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.NewtonsoftJson/NewtonsoftJsonInputFormatter.cs#L100"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.NewtonsoftJson/NewtonsoftJsonInputFormatter.cs#L100"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.NewtonsoftJson%2FNewtonsoftJsonInputFormatter.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.NewtonsoftJson%2FNewtonsoftJsonInputFormatter.cs%23L100%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20NewtonsoftJsonInputFormatter%28%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20ILogger%20logger%2C%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.NewtonsoftJson/NewtonsoftJsonInputFormatter.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This constructor is obsolete and will be removed in a future version."")]\r\n        public NewtonsoftJsonInputFormatter(\r\n            ILogger logger,\r\n```\r\n\r\n---\r\n\r\n\r\n#### (34) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.NewtonsoftJson\\NewtonsoftJsonPatchInputFormatter.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.NewtonsoftJson/NewtonsoftJsonPatchInputFormatter.cs#L33"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.NewtonsoftJson/NewtonsoftJsonPatchInputFormatter.cs#L33"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.NewtonsoftJson%2FNewtonsoftJsonPatchInputFormatter.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.NewtonsoftJson%2FNewtonsoftJsonPatchInputFormatter.cs%23L33%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20NewtonsoftJsonPatchInputFormatter%28%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20ILogger%20logger%2C%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.NewtonsoftJson/NewtonsoftJsonPatchInputFormatter.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This constructor is obsolete and will be removed in a future version."")]\r\n        public NewtonsoftJsonPatchInputFormatter(\r\n            ILogger logger,\r\n```\r\n\r\n---\r\n\r\n\r\n#### (35) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.NewtonsoftJson\\NewtonsoftJsonPatchInputFormatter.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.NewtonsoftJson/NewtonsoftJsonPatchInputFormatter.cs#L55"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.NewtonsoftJson/NewtonsoftJsonPatchInputFormatter.cs#L55"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.NewtonsoftJson%2FNewtonsoftJsonPatchInputFormatter.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.NewtonsoftJson%2FNewtonsoftJsonPatchInputFormatter.cs%23L55%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20NewtonsoftJsonPatchInputFormatter%28%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20ILogger%20logger%2C%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.NewtonsoftJson/NewtonsoftJsonPatchInputFormatter.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This constructor is obsolete and will be removed in a future version."")]\r\n        public NewtonsoftJsonPatchInputFormatter(\r\n            ILogger logger,\r\n```\r\n\r\n---\r\n\r\n\r\n#### (36) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.NewtonsoftJson\\NewtonsoftJsonPatchInputFormatter.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.NewtonsoftJson/NewtonsoftJsonPatchInputFormatter.cs#L81"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.NewtonsoftJson/NewtonsoftJsonPatchInputFormatter.cs#L81"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.NewtonsoftJson%2FNewtonsoftJsonPatchInputFormatter.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.NewtonsoftJson%2FNewtonsoftJsonPatchInputFormatter.cs%23L81%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20NewtonsoftJsonPatchInputFormatter%28%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20ILogger%20logger%2C%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.NewtonsoftJson/NewtonsoftJsonPatchInputFormatter.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This constructor is obsolete and will be removed in a future version."")]\r\n        public NewtonsoftJsonPatchInputFormatter(\r\n            ILogger logger,\r\n```\r\n\r\n---\r\n\r\n\r\n#### (37) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.TagHelpers\\ImageTagHelper.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.TagHelpers/ImageTagHelper.cs#L39"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.TagHelpers/ImageTagHelper.cs#L39"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.TagHelpers%2FImageTagHelper.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.TagHelpers%2FImageTagHelper.cs%23L39%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20ImageTagHelper%28%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20IHostingEnvironment%20hostingEnvironment%2C%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.TagHelpers/ImageTagHelper.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This constructor is obsolete and will be removed in a future version."")]\r\n        public ImageTagHelper(\r\n            IHostingEnvironment hostingEnvironment,\r\n```\r\n\r\n---\r\n\r\n\r\n#### (38) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.TagHelpers\\LinkTagHelper.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.TagHelpers/LinkTagHelper.cs#L106"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.TagHelpers/LinkTagHelper.cs#L106"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.TagHelpers%2FLinkTagHelper.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.TagHelpers%2FLinkTagHelper.cs%23L106%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20LinkTagHelper%28%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20IHostingEnvironment%20hostingEnvironment%2C%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.TagHelpers/LinkTagHelper.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This constructor is obsolete and will be removed in a future version."")]\r\n        public LinkTagHelper(\r\n            IHostingEnvironment hostingEnvironment,\r\n```\r\n\r\n---\r\n\r\n\r\n#### (39) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.TagHelpers\\ScriptTagHelper.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.TagHelpers/ScriptTagHelper.cs#L89"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.TagHelpers/ScriptTagHelper.cs#L89"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.TagHelpers%2FScriptTagHelper.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.TagHelpers%2FScriptTagHelper.cs%23L89%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20ScriptTagHelper%28%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20IHostingEnvironment%20hostingEnvironment%2C%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.TagHelpers/ScriptTagHelper.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This constructor is obsolete and will be removed in a future version."")]\r\n        public ScriptTagHelper(\r\n            IHostingEnvironment hostingEnvironment,\r\n```\r\n\r\n---\r\n\r\n\r\n#### (40) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.ViewFeatures\\CookieTempDataProviderOptions.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/CookieTempDataProviderOptions.cs#L69"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/CookieTempDataProviderOptions.cs#L69"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.ViewFeatures%2FCookieTempDataProviderOptions.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.ViewFeatures%2FCookieTempDataProviderOptions.cs%23L69%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20property%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%20is%20%22%20%2B%20nameof%28Cookie%29%20%2B%20%22.%22%20%2B%20nameof%28CookieBuilder.Path%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20string%20Path%20%7B%20get%20%3D%3E%20Cookie.Path%3B%20set%20%3D%3E%20Cookie.Path%20%3D%20value%3B%20%7D%0D%0A%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/CookieTempDataProviderOptions.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This property is obsolete and will be removed in a future version. The recommended alternative is "" + nameof(Cookie) + ""."" + nameof(CookieBuilder.Path) + ""."")]\r\n        public string Path { get => Cookie.Path; set => Cookie.Path = value; }\r\n\r\n```\r\n\r\n---\r\n\r\n\r\n#### (41) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.ViewFeatures\\CookieTempDataProviderOptions.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/CookieTempDataProviderOptions.cs#L80"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/CookieTempDataProviderOptions.cs#L80"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.ViewFeatures%2FCookieTempDataProviderOptions.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.ViewFeatures%2FCookieTempDataProviderOptions.cs%23L80%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20property%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%20is%20%22%20%2B%20nameof%28Cookie%29%20%2B%20%22.%22%20%2B%20nameof%28CookieBuilder.Domain%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20string%20Domain%20%7B%20get%20%3D%3E%20Cookie.Domain%3B%20set%20%3D%3E%20Cookie.Domain%20%3D%20value%3B%20%7D%0D%0A%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/CookieTempDataProviderOptions.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This property is obsolete and will be removed in a future version. The recommended alternative is "" + nameof(Cookie) + ""."" + nameof(CookieBuilder.Domain) + ""."")]\r\n        public string Domain { get => Cookie.Domain; set => Cookie.Domain = value; }\r\n\r\n```\r\n\r\n---\r\n\r\n\r\n#### (42) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.ViewFeatures\\CookieTempDataProviderOptions.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/CookieTempDataProviderOptions.cs#L91"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/CookieTempDataProviderOptions.cs#L91"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.ViewFeatures%2FCookieTempDataProviderOptions.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.ViewFeatures%2FCookieTempDataProviderOptions.cs%23L91%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20property%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%20is%20%22%20%2B%20nameof%28Cookie%29%20%2B%20%22.%22%20%2B%20nameof%28CookieBuilder.Name%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20string%20CookieName%20%7B%20get%3B%20set%3B%20%7D%20%3D%20CookieTempDataProvider.CookieName%3B%0D%0A%20%20%20%20%20%20%20%20%23endregion%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.ViewFeatures/CookieTempDataProviderOptions.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This property is obsolete and will be removed in a future version. The recommended alternative is "" + nameof(Cookie) + ""."" + nameof(CookieBuilder.Name) + ""."")]\r\n        public string CookieName { get; set; } = CookieTempDataProvider.CookieName;\r\n        #endregion\r\n```\r\n\r\n---\r\n\r\n\r\n\r\n\r\n#### (48) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Abstractions\\Formatters\\OutputFormatterCanWriteContext.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Abstractions/Formatters/OutputFormatterCanWriteContext.cs#L24"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Abstractions/Formatters/OutputFormatterCanWriteContext.cs#L24"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Abstractions%2FFormatters%2FOutputFormatterCanWriteContext.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Abstractions%2FFormatters%2FOutputFormatterCanWriteContext.cs%23L24%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20Please%20use%20the%20constructor%20taking%20a%20HttpContext%20instead.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20protected%20OutputFormatterCanWriteContext%28%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Abstractions/Formatters/OutputFormatterCanWriteContext.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This constructor is obsolete and will be removed in a future version. Please use the constructor taking a HttpContext instead."")]\r\n        protected OutputFormatterCanWriteContext()\r\n        {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (49) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\Formatters\\FormatFilter.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Formatters/FormatFilter.cs#L28"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Formatters/FormatFilter.cs#L28"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FFormatters%2FFormatFilter.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FFormatters%2FFormatFilter.cs%23L28%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20FormatFilter%28IOptions%3CMvcOptions%3E%20options%29%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%3A%20this%28options%2C%20NullLoggerFactory.Instance%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Formatters/FormatFilter.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This constructor is obsolete and will be removed in a future version."")]\r\n        public FormatFilter(IOptions<MvcOptions> options)\r\n            : this(options, NullLoggerFactory.Instance)\r\n```\r\n\r\n---\r\n\r\n\r\n#### (50) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\ModelBinding\\ModelBinderFactory.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/ModelBinderFactory.cs#L37"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/ModelBinderFactory.cs#L37"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FModelBinderFactory.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FModelBinderFactory.cs%23L37%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%22%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2B%20%22%20is%20the%20overload%20that%20also%20takes%20an%20%22%20%2B%20nameof%28IServiceProvider%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20ModelBinderFactory%28IModelMetadataProvider%20metadataProvider%2C%20IOptions%3CMvcOptions%3E%20options%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/ModelBinderFactory.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This constructor is obsolete and will be removed in a future version. The recommended alternative""\r\n            + "" is the overload that also takes an "" + nameof(IServiceProvider) + ""."")]\r\n        public ModelBinderFactory(IModelMetadataProvider metadataProvider, IOptions<MvcOptions> options)\r\n```\r\n\r\n---\r\n\r\n\r\n#### (51) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\ModelBinding\\ParameterBinder.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/ParameterBinder.cs#L33"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/ParameterBinder.cs#L33"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FParameterBinder.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FParameterBinder.cs%23L33%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%22%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2B%20%22%20is%20the%20overload%20that%20also%20takes%20a%20%22%20%2B%20nameof%28MvcOptions%29%20%2B%20%22%20accessor%20and%20an%20%22%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2B%20nameof%28ILoggerFactory%29%20%2B%20%22%20.%22%29%5D%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/ParameterBinder.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This constructor is obsolete and will be removed in a future version. The recommended alternative""\r\n            + "" is the overload that also takes a "" + nameof(MvcOptions) + "" accessor and an ""\r\n            + nameof(ILoggerFactory) + "" ."")]\r\n```\r\n\r\n---\r\n\r\n\r\n#### (52) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\ModelBinding\\ParameterBinder.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/ParameterBinder.cs#L112"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/ParameterBinder.cs#L112"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FParameterBinder.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FParameterBinder.cs%23L112%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20overload%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20%22%20%2B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%22alternative%20is%20the%20overload%20that%20also%20takes%20%22%20%2B%20nameof%28IModelBinder%29%20%2B%20%22%2C%20%22%20%2B%20nameof%28ModelMetadata%29%20%2B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%22%20and%20%22%20%2B%20nameof%28Object%29%20%2B%20%22%20parameters.%22%29%5D%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/ParameterBinder.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This method overload is obsolete and will be removed in a future version. The recommended "" +\r\n            ""alternative is the overload that also takes "" + nameof(IModelBinder) + "", "" + nameof(ModelMetadata) +\r\n            "" and "" + nameof(Object) + "" parameters."")]\r\n```\r\n\r\n---\r\n\r\n\r\n#### (53) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\ModelBinding\\ParameterBinder.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/ParameterBinder.cs#L139"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/ParameterBinder.cs#L139"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FParameterBinder.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FParameterBinder.cs%23L139%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20overload%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20%22%20%2B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%22alternative%20is%20the%20overload%20that%20also%20takes%20%22%20%2B%20nameof%28IModelBinder%29%20%2B%20%22%20and%20%22%20%2B%20nameof%28ModelMetadata%29%20%2B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%22%20parameters.%22%29%5D%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/ParameterBinder.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This method overload is obsolete and will be removed in a future version. The recommended "" +\r\n            ""alternative is the overload that also takes "" + nameof(IModelBinder) + "" and "" + nameof(ModelMetadata) +\r\n            "" parameters."")]\r\n```\r\n\r\n---\r\n\r\n\r\n#### (54) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\Routing\\KnownRouteValueConstraint.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Routing/KnownRouteValueConstraint.cs#L21"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Routing/KnownRouteValueConstraint.cs#L21"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FRouting%2FKnownRouteValueConstraint.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FRouting%2FKnownRouteValueConstraint.cs%23L21%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete.%20Use%20KnownRouteValueConstraint.ctor%28IActionDescriptorCollectionProvider%29%20instead.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20KnownRouteValueConstraint%28%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/Routing/KnownRouteValueConstraint.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This constructor is obsolete. Use KnownRouteValueConstraint.ctor(IActionDescriptorCollectionProvider) instead."")]\r\n        public KnownRouteValueConstraint()\r\n        {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (77) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\ModelBinding\\Binders\\ArrayModelBinder.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/ArrayModelBinder.cs#L27"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/ArrayModelBinder.cs#L27"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FArrayModelBinder.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FArrayModelBinder.cs%23L27%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%22%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2B%20%22%20is%20the%20overload%20that%20also%20takes%20an%20%22%20%2B%20nameof%28ILoggerFactory%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20ArrayModelBinder%28IModelBinder%20elementBinder%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/ArrayModelBinder.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This constructor is obsolete and will be removed in a future version. The recommended alternative""\r\n            + "" is the overload that also takes an "" + nameof(ILoggerFactory) + ""."")]\r\n        public ArrayModelBinder(IModelBinder elementBinder)\r\n```\r\n\r\n---\r\n\r\n\r\n#### (78) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\ModelBinding\\Binders\\ByteArrayModelBinder.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/ByteArrayModelBinder.cs#L23"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/ByteArrayModelBinder.cs#L23"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FByteArrayModelBinder.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FByteArrayModelBinder.cs%23L23%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%22%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2B%20%22%20is%20the%20overload%20that%20takes%20an%20%22%20%2B%20nameof%28ILoggerFactory%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20ByteArrayModelBinder%28%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/ByteArrayModelBinder.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This constructor is obsolete and will be removed in a future version. The recommended alternative""\r\n            + "" is the overload that takes an "" + nameof(ILoggerFactory) + ""."")]\r\n        public ByteArrayModelBinder()\r\n```\r\n\r\n---\r\n\r\n\r\n#### (79) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\ModelBinding\\Binders\\CollectionModelBinder.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/CollectionModelBinder.cs#L33"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/CollectionModelBinder.cs#L33"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FCollectionModelBinder.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FCollectionModelBinder.cs%23L33%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%22%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2B%20%22%20is%20the%20overload%20that%20also%20takes%20an%20%22%20%2B%20nameof%28ILoggerFactory%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20CollectionModelBinder%28IModelBinder%20elementBinder%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/CollectionModelBinder.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This constructor is obsolete and will be removed in a future version. The recommended alternative""\r\n            + "" is the overload that also takes an "" + nameof(ILoggerFactory) + ""."")]\r\n        public CollectionModelBinder(IModelBinder elementBinder)\r\n```\r\n\r\n---\r\n\r\n\r\n#### (80) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\ModelBinding\\Binders\\ComplexTypeModelBinder.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/ComplexTypeModelBinder.cs#L33"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/ComplexTypeModelBinder.cs#L33"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FComplexTypeModelBinder.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FComplexTypeModelBinder.cs%23L33%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%22%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2B%20%22%20is%20the%20overload%20that%20also%20takes%20an%20%22%20%2B%20nameof%28ILoggerFactory%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20ComplexTypeModelBinder%28IDictionary%3CModelMetadata%2C%20IModelBinder%3E%20propertyBinders%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/ComplexTypeModelBinder.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This constructor is obsolete and will be removed in a future version. The recommended alternative""\r\n            + "" is the overload that also takes an "" + nameof(ILoggerFactory) + ""."")]\r\n        public ComplexTypeModelBinder(IDictionary<ModelMetadata, IModelBinder> propertyBinders)\r\n```\r\n\r\n---\r\n\r\n\r\n#### (81) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\ModelBinding\\Binders\\DecimalModelBinder.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/DecimalModelBinder.cs#L28"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/DecimalModelBinder.cs#L28"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FDecimalModelBinder.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FDecimalModelBinder.cs%23L28%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%22%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2B%20%22%20is%20the%20overload%20that%20also%20takes%20an%20%22%20%2B%20nameof%28ILoggerFactory%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20DecimalModelBinder%28NumberStyles%20supportedStyles%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/DecimalModelBinder.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This constructor is obsolete and will be removed in a future version. The recommended alternative""\r\n            + "" is the overload that also takes an "" + nameof(ILoggerFactory) + ""."")]\r\n        public DecimalModelBinder(NumberStyles supportedStyles)\r\n```\r\n\r\n---\r\n\r\n\r\n#### (82) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\ModelBinding\\Binders\\DictionaryModelBinder.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/DictionaryModelBinder.cs#L31"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/DictionaryModelBinder.cs#L31"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FDictionaryModelBinder.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FDictionaryModelBinder.cs%23L31%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%22%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2B%20%22%20is%20the%20overload%20that%20also%20takes%20an%20%22%20%2B%20nameof%28ILoggerFactory%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20DictionaryModelBinder%28IModelBinder%20keyBinder%2C%20IModelBinder%20valueBinder%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/DictionaryModelBinder.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This constructor is obsolete and will be removed in a future version. The recommended alternative""\r\n            + "" is the overload that also takes an "" + nameof(ILoggerFactory) + ""."")]\r\n        public DictionaryModelBinder(IModelBinder keyBinder, IModelBinder valueBinder)\r\n```\r\n\r\n---\r\n\r\n\r\n#### (83) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\ModelBinding\\Binders\\DoubleModelBinder.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/DoubleModelBinder.cs#L28"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/DoubleModelBinder.cs#L28"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FDoubleModelBinder.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FDoubleModelBinder.cs%23L28%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%22%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2B%20%22%20is%20the%20overload%20that%20also%20takes%20an%20%22%20%2B%20nameof%28ILoggerFactory%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20DoubleModelBinder%28NumberStyles%20supportedStyles%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/DoubleModelBinder.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This constructor is obsolete and will be removed in a future version. The recommended alternative""\r\n            + "" is the overload that also takes an "" + nameof(ILoggerFactory) + ""."")]\r\n        public DoubleModelBinder(NumberStyles supportedStyles)\r\n```\r\n\r\n---\r\n\r\n\r\n#### (84) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\ModelBinding\\Binders\\FloatModelBinder.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/FloatModelBinder.cs#L28"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/FloatModelBinder.cs#L28"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FFloatModelBinder.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FFloatModelBinder.cs%23L28%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%22%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2B%20%22%20is%20the%20overload%20that%20also%20takes%20an%20%22%20%2B%20nameof%28ILoggerFactory%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20FloatModelBinder%28NumberStyles%20supportedStyles%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/FloatModelBinder.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This constructor is obsolete and will be removed in a future version. The recommended alternative""\r\n            + "" is the overload that also takes an "" + nameof(ILoggerFactory) + ""."")]\r\n        public FloatModelBinder(NumberStyles supportedStyles)\r\n```\r\n\r\n---\r\n\r\n\r\n#### (85) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\ModelBinding\\Binders\\FormCollectionModelBinder.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/FormCollectionModelBinder.cs#L28"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/FormCollectionModelBinder.cs#L28"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FFormCollectionModelBinder.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FFormCollectionModelBinder.cs%23L28%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%22%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2B%20%22%20is%20the%20overload%20that%20takes%20an%20%22%20%2B%20nameof%28ILoggerFactory%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20FormCollectionModelBinder%28%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/FormCollectionModelBinder.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This constructor is obsolete and will be removed in a future version. The recommended alternative""\r\n            + "" is the overload that takes an "" + nameof(ILoggerFactory) + ""."")]\r\n        public FormCollectionModelBinder()\r\n```\r\n\r\n---\r\n\r\n\r\n#### (86) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\ModelBinding\\Binders\\FormFileModelBinder.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/FormFileModelBinder.cs#L29"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/FormFileModelBinder.cs#L29"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FFormFileModelBinder.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FFormFileModelBinder.cs%23L29%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%22%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2B%20%22%20is%20the%20overload%20that%20takes%20an%20%22%20%2B%20nameof%28ILoggerFactory%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20FormFileModelBinder%28%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/FormFileModelBinder.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This constructor is obsolete and will be removed in a future version. The recommended alternative""\r\n            + "" is the overload that takes an "" + nameof(ILoggerFactory) + ""."")]\r\n        public FormFileModelBinder()\r\n```\r\n\r\n---\r\n\r\n\r\n#### (87) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\ModelBinding\\Binders\\HeaderModelBinder.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/HeaderModelBinder.cs#L27"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/HeaderModelBinder.cs#L27"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FHeaderModelBinder.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FHeaderModelBinder.cs%23L27%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%22%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2B%20%22%20is%20the%20overload%20that%20takes%20an%20%22%20%2B%20nameof%28ILoggerFactory%29%20%2B%20%22%20and%20an%20%22%20%2B%20nameof%28IModelBinder%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20HeaderModelBinder%28%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/HeaderModelBinder.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This constructor is obsolete and will be removed in a future version. The recommended alternative""\r\n            + "" is the overload that takes an "" + nameof(ILoggerFactory) + "" and an "" + nameof(IModelBinder) + ""."")]\r\n        public HeaderModelBinder()\r\n```\r\n\r\n---\r\n\r\n\r\n#### (88) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\ModelBinding\\Binders\\KeyValuePairModelBinder.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/KeyValuePairModelBinder.cs#L30"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/KeyValuePairModelBinder.cs#L30"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FKeyValuePairModelBinder.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FKeyValuePairModelBinder.cs%23L30%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%22%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2B%20%22%20is%20the%20overload%20that%20also%20takes%20an%20%22%20%2B%20nameof%28ILoggerFactory%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20KeyValuePairModelBinder%28IModelBinder%20keyBinder%2C%20IModelBinder%20valueBinder%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/KeyValuePairModelBinder.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This constructor is obsolete and will be removed in a future version. The recommended alternative""\r\n            + "" is the overload that also takes an "" + nameof(ILoggerFactory) + ""."")]\r\n        public KeyValuePairModelBinder(IModelBinder keyBinder, IModelBinder valueBinder)\r\n```\r\n\r\n---\r\n\r\n\r\n#### (89) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\ModelBinding\\Binders\\SimpleTypeModelBinder.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/SimpleTypeModelBinder.cs#L27"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/SimpleTypeModelBinder.cs#L27"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FSimpleTypeModelBinder.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FBinders%2FSimpleTypeModelBinder.cs%23L27%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%22%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2B%20%22%20is%20the%20overload%20that%20also%20takes%20an%20%22%20%2B%20nameof%28ILoggerFactory%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20SimpleTypeModelBinder%28Type%20type%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/SimpleTypeModelBinder.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This constructor is obsolete and will be removed in a future version. The recommended alternative""\r\n            + "" is the overload that also takes an "" + nameof(ILoggerFactory) + ""."")]\r\n        public SimpleTypeModelBinder(Type type)\r\n```\r\n\r\n---\r\n\r\n\r\n#### (90) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\ModelBinding\\Metadata\\ModelAttributes.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/ModelAttributes.cs#L22"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/ModelAttributes.cs#L22"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FMetadata%2FModelAttributes.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FMetadata%2FModelAttributes.cs%23L22%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%20is%20%22%20%2B%20nameof%28ModelAttributes%29%20%2B%20%22.%22%20%2B%20nameof%28GetAttributesForType%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20ModelAttributes%28IEnumerable%3Cobject%3E%20typeAttributes%29%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%3A%20this%28typeAttributes%2C%20null%2C%20null%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/ModelAttributes.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This constructor is obsolete and will be removed in a future version. The recommended alternative is "" + nameof(ModelAttributes) + ""."" + nameof(GetAttributesForType) + ""."")]\r\n        public ModelAttributes(IEnumerable<object> typeAttributes)\r\n            : this(typeAttributes, null, null)\r\n```\r\n\r\n---\r\n\r\n\r\n#### (91) src\\Mvc\\src\\Microsoft.AspNetCore.Mvc.Core\\ModelBinding\\Metadata\\ModelAttributes.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/ModelAttributes.cs#L35"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/ModelAttributes.cs#L35"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FMetadata%2FModelAttributes.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMvc%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Core%2FModelBinding%2FMetadata%2FModelAttributes.cs%23L35%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%20is%20%22%20%2B%20nameof%28ModelAttributes%29%20%2B%20%22.%22%20%2B%20nameof%28GetAttributesForProperty%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20ModelAttributes%28IEnumerable%3Cobject%3E%20propertyAttributes%2C%20IEnumerable%3Cobject%3E%20typeAttributes%29%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%3A%20this%28typeAttributes%2C%20propertyAttributes%2C%20null%29%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Mvc/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/ModelAttributes.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This constructor is obsolete and will be removed in a future version. The recommended alternative is "" + nameof(ModelAttributes) + ""."" + nameof(GetAttributesForProperty) + ""."")]\r\n        public ModelAttributes(IEnumerable<object> propertyAttributes, IEnumerable<object> typeAttributes)\r\n            : this(typeAttributes, propertyAttributes, null)\r\n```\r\n\r\n---\r\n","c#\r\n        [Obsolete(""This constructor is obsolete and will be removed in a future release."")]\r\n        public DefaultApiDescriptionProvider(\r\n            IOptions<MvcOptions> optionsAccessor,\r\n"
7321,"Remove obsolete APIs from RoutingSee #3654 for details.\r\n\r\n\r\n#### (9) src\\Http\\Routing\\src\\DefaultInlineConstraintResolver.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Http/Routing/src/DefaultInlineConstraintResolver.cs#L27"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Http/Routing/src/DefaultInlineConstraintResolver.cs#L27"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FHttp%2FRouting%2Fsrc%2FDefaultInlineConstraintResolver.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FHttp%2FRouting%2Fsrc%2FDefaultInlineConstraintResolver.cs%23L27%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete.%20Use%20DefaultInlineConstraintResolver.ctor%28IOptions%3CRouteOptions%3E%2C%20IServiceProvider%29%20instead.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20DefaultInlineConstraintResolver%28IOptions%3CRouteOptions%3E%20routeOptions%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Http/Routing/src/DefaultInlineConstraintResolver.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (10) src\\Http\\Routing\\src\\IRouteValuesAddressMetadata.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Http/Routing/src/IRouteValuesAddressMetadata.cs#L13"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Http/Routing/src/IRouteValuesAddressMetadata.cs#L13"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FHttp%2FRouting%2Fsrc%2FIRouteValuesAddressMetadata.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FHttp%2FRouting%2Fsrc%2FIRouteValuesAddressMetadata.cs%23L13%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%5BObsolete%28%22Route%20values%20are%20now%20specified%20on%20a%20RoutePattern.%22%29%5D%0D%0A%20%20%20%20public%20interface%20IRouteValuesAddressMetadata%0D%0A%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Http/Routing/src/IRouteValuesAddressMetadata.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (11) src\\Http\\Routing\\src\\RouteValuesAddressMetadata.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Http/Routing/src/RouteValuesAddressMetadata.cs#L16"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Http/Routing/src/RouteValuesAddressMetadata.cs#L16"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FHttp%2FRouting%2Fsrc%2FRouteValuesAddressMetadata.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FHttp%2FRouting%2Fsrc%2FRouteValuesAddressMetadata.cs%23L16%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%5BObsolete%28%22Route%20values%20are%20now%20specified%20on%20a%20RoutePattern.%22%29%5D%0D%0A%20%20%20%20public%20sealed%20class%20RouteValuesAddressMetadata%20%3A%20IRouteValuesAddressMetadata%0D%0A%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Http/Routing/src/RouteValuesAddressMetadata.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (46) src\\Http\\Routing\\src\\Tree\\TreeRouteBuilder.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Http/Routing/src/Tree/TreeRouteBuilder.cs#L38"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Http/Routing/src/Tree/TreeRouteBuilder.cs#L38"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FHttp%2FRouting%2Fsrc%2FTree%2FTreeRouteBuilder.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FHttp%2FRouting%2Fsrc%2FTree%2FTreeRouteBuilder.cs%23L38%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20%22%20%2B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%22alternative%20is%20the%20overload%20that%20does%20not%20take%20a%20UrlEncoder.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20TreeRouteBuilder%28%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Http/Routing/src/Tree/TreeRouteBuilder.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n",bug|Done|breaking-change|area-mvc,JamesNK,"See #3654 for details.\r\n\r\n\r\n#### (9) src\\Http\\Routing\\src\\DefaultInlineConstraintResolver.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Http/Routing/src/DefaultInlineConstraintResolver.cs#L27"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Http/Routing/src/DefaultInlineConstraintResolver.cs#L27"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FHttp%2FRouting%2Fsrc%2FDefaultInlineConstraintResolver.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FHttp%2FRouting%2Fsrc%2FDefaultInlineConstraintResolver.cs%23L27%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete.%20Use%20DefaultInlineConstraintResolver.ctor%28IOptions%3CRouteOptions%3E%2C%20IServiceProvider%29%20instead.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20DefaultInlineConstraintResolver%28IOptions%3CRouteOptions%3E%20routeOptions%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Http/Routing/src/DefaultInlineConstraintResolver.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This constructor is obsolete. Use DefaultInlineConstraintResolver.ctor(IOptions<RouteOptions>, IServiceProvider) instead."")]\r\n        public DefaultInlineConstraintResolver(IOptions<RouteOptions> routeOptions)\r\n        {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (10) src\\Http\\Routing\\src\\IRouteValuesAddressMetadata.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Http/Routing/src/IRouteValuesAddressMetadata.cs#L13"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Http/Routing/src/IRouteValuesAddressMetadata.cs#L13"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FHttp%2FRouting%2Fsrc%2FIRouteValuesAddressMetadata.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FHttp%2FRouting%2Fsrc%2FIRouteValuesAddressMetadata.cs%23L13%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%5BObsolete%28%22Route%20values%20are%20now%20specified%20on%20a%20RoutePattern.%22%29%5D%0D%0A%20%20%20%20public%20interface%20IRouteValuesAddressMetadata%0D%0A%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Http/Routing/src/IRouteValuesAddressMetadata.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n    [Obsolete(""Route values are now specified on a RoutePattern."")]\r\n    public interface IRouteValuesAddressMetadata\r\n    {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (11) src\\Http\\Routing\\src\\RouteValuesAddressMetadata.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Http/Routing/src/RouteValuesAddressMetadata.cs#L16"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Http/Routing/src/RouteValuesAddressMetadata.cs#L16"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FHttp%2FRouting%2Fsrc%2FRouteValuesAddressMetadata.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FHttp%2FRouting%2Fsrc%2FRouteValuesAddressMetadata.cs%23L16%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%5BObsolete%28%22Route%20values%20are%20now%20specified%20on%20a%20RoutePattern.%22%29%5D%0D%0A%20%20%20%20public%20sealed%20class%20RouteValuesAddressMetadata%20%3A%20IRouteValuesAddressMetadata%0D%0A%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Http/Routing/src/RouteValuesAddressMetadata.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n    [Obsolete(""Route values are now specified on a RoutePattern."")]\r\n    public sealed class RouteValuesAddressMetadata : IRouteValuesAddressMetadata\r\n    {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (46) src\\Http\\Routing\\src\\Tree\\TreeRouteBuilder.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Http/Routing/src/Tree/TreeRouteBuilder.cs#L38"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Http/Routing/src/Tree/TreeRouteBuilder.cs#L38"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FHttp%2FRouting%2Fsrc%2FTree%2FTreeRouteBuilder.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FHttp%2FRouting%2Fsrc%2FTree%2FTreeRouteBuilder.cs%23L38%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20constructor%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20%22%20%2B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%22alternative%20is%20the%20overload%20that%20does%20not%20take%20a%20UrlEncoder.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20TreeRouteBuilder%28%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Http/Routing/src/Tree/TreeRouteBuilder.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This constructor is obsolete and will be removed in a future version. The recommended "" +\r\n            ""alternative is the overload that does not take a UrlEncoder."")]\r\n        public TreeRouteBuilder(\r\n```\r\n\r\n---\r\n","c#\r\n        [Obsolete(""This constructor is obsolete. Use DefaultInlineConstraintResolver.ctor(IOptions<RouteOptions>, IServiceProvider) instead."")]\r\n        public DefaultInlineConstraintResolver(IOptions<RouteOptions> routeOptions)\r\n        {\r\n"
7320,"Remove obsolete APIs from DiagnosticsSee #3654 for details.\r\n\r\n\r\n#### (5) src\\Shared\\Diagnostics\\AttributeValue.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Shared/Diagnostics/AttributeValue.cs#L8"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Shared/Diagnostics/AttributeValue.cs#L8"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FShared%2FDiagnostics%2FAttributeValue.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FShared%2FDiagnostics%2FAttributeValue.cs%23L8%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%5BObsolete%28%22This%20type%20is%20for%20internal%20use%20only%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20public%20class%20AttributeValue%0D%0A%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Shared/Diagnostics/AttributeValue.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (6) src\\Shared\\Diagnostics\\BaseView.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Shared/Diagnostics/BaseView.cs#L20"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Shared/Diagnostics/BaseView.cs#L20"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FShared%2FDiagnostics%2FBaseView.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FShared%2FDiagnostics%2FBaseView.cs%23L20%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%5BObsolete%28%22This%20type%20is%20for%20internal%20use%20only%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20public%20abstract%20class%20BaseView%0D%0A%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Shared/Diagnostics/BaseView.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (7) src\\Shared\\Diagnostics\\HelperResult.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Shared/Diagnostics/HelperResult.cs#L12"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Shared/Diagnostics/HelperResult.cs#L12"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FShared%2FDiagnostics%2FHelperResult.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FShared%2FDiagnostics%2FHelperResult.cs%23L12%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%5BObsolete%28%22This%20type%20is%20for%20internal%20use%20only%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20public%20class%20HelperResult%0D%0A%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Shared/Diagnostics/HelperResult.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n---\r\n\r\n\r\n#### (92) src\\Middleware\\Diagnostics\\src\\WelcomePage\\Views\\Obsolete\\WelcomePage.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Middleware/Diagnostics/src/WelcomePage/Views/Obsolete/WelcomePage.cs#L17"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Middleware/Diagnostics/src/WelcomePage/Views/Obsolete/WelcomePage.cs#L17"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMiddleware%2FDiagnostics%2Fsrc%2FWelcomePage%2FViews%2FObsolete%2FWelcomePage.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMiddleware%2FDiagnostics%2Fsrc%2FWelcomePage%2FViews%2FObsolete%2FWelcomePage.cs%23L17%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%5BObsolete%28%22This%20type%20is%20for%20internal%20use%20only%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20public%20class%20WelcomePage%20%3A%20Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView%0D%0A%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Middleware/Diagnostics/src/WelcomePage/Views/Obsolete/WelcomePage.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n",bug|Done|breaking-change|area-mvc,rynowak,"See #3654 for details.\r\n\r\n\r\n#### (5) src\\Shared\\Diagnostics\\AttributeValue.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Shared/Diagnostics/AttributeValue.cs#L8"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Shared/Diagnostics/AttributeValue.cs#L8"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FShared%2FDiagnostics%2FAttributeValue.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FShared%2FDiagnostics%2FAttributeValue.cs%23L8%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%5BObsolete%28%22This%20type%20is%20for%20internal%20use%20only%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20public%20class%20AttributeValue%0D%0A%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Shared/Diagnostics/AttributeValue.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n    [Obsolete(""This type is for internal use only and will be removed in a future version."")]\r\n    public class AttributeValue\r\n    {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (6) src\\Shared\\Diagnostics\\BaseView.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Shared/Diagnostics/BaseView.cs#L20"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Shared/Diagnostics/BaseView.cs#L20"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FShared%2FDiagnostics%2FBaseView.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FShared%2FDiagnostics%2FBaseView.cs%23L20%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%5BObsolete%28%22This%20type%20is%20for%20internal%20use%20only%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20public%20abstract%20class%20BaseView%0D%0A%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Shared/Diagnostics/BaseView.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n    [Obsolete(""This type is for internal use only and will be removed in a future version."")]\r\n    public abstract class BaseView\r\n    {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (7) src\\Shared\\Diagnostics\\HelperResult.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Shared/Diagnostics/HelperResult.cs#L12"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Shared/Diagnostics/HelperResult.cs#L12"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FShared%2FDiagnostics%2FHelperResult.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FShared%2FDiagnostics%2FHelperResult.cs%23L12%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%5BObsolete%28%22This%20type%20is%20for%20internal%20use%20only%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20public%20class%20HelperResult%0D%0A%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Shared/Diagnostics/HelperResult.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n    [Obsolete(""This type is for internal use only and will be removed in a future version."")]\r\n    public class HelperResult\r\n    {\r\n```\r\n\r\n---\r\n\r\n\r\n---\r\n\r\n\r\n#### (92) src\\Middleware\\Diagnostics\\src\\WelcomePage\\Views\\Obsolete\\WelcomePage.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Middleware/Diagnostics/src/WelcomePage/Views/Obsolete/WelcomePage.cs#L17"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Middleware/Diagnostics/src/WelcomePage/Views/Obsolete/WelcomePage.cs#L17"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FMiddleware%2FDiagnostics%2Fsrc%2FWelcomePage%2FViews%2FObsolete%2FWelcomePage.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FMiddleware%2FDiagnostics%2Fsrc%2FWelcomePage%2FViews%2FObsolete%2FWelcomePage.cs%23L17%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%5BObsolete%28%22This%20type%20is%20for%20internal%20use%20only%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20public%20class%20WelcomePage%20%3A%20Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView%0D%0A%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Middleware/Diagnostics/src/WelcomePage/Views/Obsolete/WelcomePage.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n    [Obsolete(""This type is for internal use only and will be removed in a future version."")]\r\n    public class WelcomePage : Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView\r\n    {\r\n```\r\n\r\n---\r\n","c#\r\n    [Obsolete(""This type is for internal use only and will be removed in a future version."")]\r\n    public class AttributeValue\r\n    {\r\n"
7319,"Remove obsolete APIs from AntiforgerySee https://github.com/aspnet/aspnetcore/issues/3654 for details.\r\n\r\n#### (1) src\\Antiforgery\\src\\AntiforgeryOptions.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Antiforgery/src/AntiforgeryOptions.cs#L99"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Antiforgery/src/AntiforgeryOptions.cs#L99"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FAntiforgery%2Fsrc%2FAntiforgeryOptions.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FAntiforgery%2Fsrc%2FAntiforgeryOptions.cs%23L99%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20property%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%20is%20%22%20%2B%20nameof%28Cookie%29%20%2B%20%22.%22%20%2B%20nameof%28CookieBuilder.Name%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20string%20CookieName%20%7B%20get%20%3D%3E%20Cookie.Name%3B%20set%20%3D%3E%20Cookie.Name%20%3D%20value%3B%20%7D%0D%0A%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Antiforgery/src/AntiforgeryOptions.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (2) src\\Antiforgery\\src\\AntiforgeryOptions.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Antiforgery/src/AntiforgeryOptions.cs#L112"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Antiforgery/src/AntiforgeryOptions.cs#L112"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FAntiforgery%2Fsrc%2FAntiforgeryOptions.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FAntiforgery%2Fsrc%2FAntiforgeryOptions.cs%23L112%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20property%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%20is%20%22%20%2B%20nameof%28Cookie%29%20%2B%20%22.%22%20%2B%20nameof%28CookieBuilder.Path%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20PathString%3F%20CookiePath%20%7B%20get%20%3D%3E%20Cookie.Path%3B%20set%20%3D%3E%20Cookie.Path%20%3D%20value%3B%20%7D%0D%0A%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Antiforgery/src/AntiforgeryOptions.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (3) src\\Antiforgery\\src\\AntiforgeryOptions.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Antiforgery/src/AntiforgeryOptions.cs#L123"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Antiforgery/src/AntiforgeryOptions.cs#L123"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FAntiforgery%2Fsrc%2FAntiforgeryOptions.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FAntiforgery%2Fsrc%2FAntiforgeryOptions.cs%23L123%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20property%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%20is%20%22%20%2B%20nameof%28Cookie%29%20%2B%20%22.%22%20%2B%20nameof%28CookieBuilder.Domain%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20string%20CookieDomain%20%7B%20get%20%3D%3E%20Cookie.Domain%3B%20set%20%3D%3E%20Cookie.Domain%20%3D%20value%3B%20%7D%0D%0A%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Antiforgery/src/AntiforgeryOptions.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (4) src\\Antiforgery\\src\\AntiforgeryOptions.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Antiforgery/src/AntiforgeryOptions.cs#L142"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Antiforgery/src/AntiforgeryOptions.cs#L142"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FAntiforgery%2Fsrc%2FAntiforgeryOptions.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FAntiforgery%2Fsrc%2FAntiforgeryOptions.cs%23L142%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20property%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%20is%20to%20set%20%22%20%2B%20nameof%28Cookie%29%20%2B%20%22.%22%20%2B%20nameof%28CookieBuilder.SecurePolicy%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20bool%20RequireSsl%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Antiforgery/src/AntiforgeryOptions.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n",bug|Done|breaking-change|area-mvc,javiercn,"See https://github.com/aspnet/aspnetcore/issues/3654 for details.\r\n\r\n#### (1) src\\Antiforgery\\src\\AntiforgeryOptions.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Antiforgery/src/AntiforgeryOptions.cs#L99"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Antiforgery/src/AntiforgeryOptions.cs#L99"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FAntiforgery%2Fsrc%2FAntiforgeryOptions.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FAntiforgery%2Fsrc%2FAntiforgeryOptions.cs%23L99%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20property%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%20is%20%22%20%2B%20nameof%28Cookie%29%20%2B%20%22.%22%20%2B%20nameof%28CookieBuilder.Name%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20string%20CookieName%20%7B%20get%20%3D%3E%20Cookie.Name%3B%20set%20%3D%3E%20Cookie.Name%20%3D%20value%3B%20%7D%0D%0A%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Antiforgery/src/AntiforgeryOptions.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This property is obsolete and will be removed in a future version. The recommended alternative is "" + nameof(Cookie) + ""."" + nameof(CookieBuilder.Name) + ""."")]\r\n        public string CookieName { get => Cookie.Name; set => Cookie.Name = value; }\r\n\r\n```\r\n\r\n---\r\n\r\n\r\n#### (2) src\\Antiforgery\\src\\AntiforgeryOptions.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Antiforgery/src/AntiforgeryOptions.cs#L112"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Antiforgery/src/AntiforgeryOptions.cs#L112"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FAntiforgery%2Fsrc%2FAntiforgeryOptions.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FAntiforgery%2Fsrc%2FAntiforgeryOptions.cs%23L112%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20property%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%20is%20%22%20%2B%20nameof%28Cookie%29%20%2B%20%22.%22%20%2B%20nameof%28CookieBuilder.Path%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20PathString%3F%20CookiePath%20%7B%20get%20%3D%3E%20Cookie.Path%3B%20set%20%3D%3E%20Cookie.Path%20%3D%20value%3B%20%7D%0D%0A%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Antiforgery/src/AntiforgeryOptions.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This property is obsolete and will be removed in a future version. The recommended alternative is "" + nameof(Cookie) + ""."" + nameof(CookieBuilder.Path) + ""."")]\r\n        public PathString? CookiePath { get => Cookie.Path; set => Cookie.Path = value; }\r\n\r\n```\r\n\r\n---\r\n\r\n\r\n#### (3) src\\Antiforgery\\src\\AntiforgeryOptions.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Antiforgery/src/AntiforgeryOptions.cs#L123"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Antiforgery/src/AntiforgeryOptions.cs#L123"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FAntiforgery%2Fsrc%2FAntiforgeryOptions.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FAntiforgery%2Fsrc%2FAntiforgeryOptions.cs%23L123%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20property%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%20is%20%22%20%2B%20nameof%28Cookie%29%20%2B%20%22.%22%20%2B%20nameof%28CookieBuilder.Domain%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20string%20CookieDomain%20%7B%20get%20%3D%3E%20Cookie.Domain%3B%20set%20%3D%3E%20Cookie.Domain%20%3D%20value%3B%20%7D%0D%0A%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Antiforgery/src/AntiforgeryOptions.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This property is obsolete and will be removed in a future version. The recommended alternative is "" + nameof(Cookie) + ""."" + nameof(CookieBuilder.Domain) + ""."")]\r\n        public string CookieDomain { get => Cookie.Domain; set => Cookie.Domain = value; }\r\n\r\n```\r\n\r\n---\r\n\r\n\r\n#### (4) src\\Antiforgery\\src\\AntiforgeryOptions.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore/blob/master/src/Antiforgery/src/AntiforgeryOptions.cs#L142"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Antiforgery/src/AntiforgeryOptions.cs#L142"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FAntiforgery%2Fsrc%2FAntiforgeryOptions.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore%2Fblob%2Fmaster%2Fsrc%2FAntiforgery%2Fsrc%2FAntiforgeryOptions.cs%23L142%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20property%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%20is%20to%20set%20%22%20%2B%20nameof%28Cookie%29%20%2B%20%22.%22%20%2B%20nameof%28CookieBuilder.SecurePolicy%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20bool%20RequireSsl%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Antiforgery/src/AntiforgeryOptions.cs&milestone=3.0.0-preview3)\r\n* [ ] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This property is obsolete and will be removed in a future version. The recommended alternative is to set "" + nameof(Cookie) + ""."" + nameof(CookieBuilder.SecurePolicy) + ""."")]\r\n        public bool RequireSsl\r\n        {\r\n```\r\n\r\n---\r\n\r\n","c#\r\n        [Obsolete(""This property is obsolete and will be removed in a future version. The recommended alternative is "" + nameof(Cookie) + ""."" + nameof(CookieBuilder.Name) + ""."")]\r\n        public string CookieName { get => Cookie.Name; set => Cookie.Name = value; }\r\n\r\n"
7236,"Add Ability to use Component Type with Constructors and This Keyword### Is your feature request related to a problem? Please describe.\r\nIn the latest release of Razor Components, the context for the code inside a component `.cshtml` file is always the generated class <code>__*ComponentClassName*</code> instead of simply the actual class <code>*ComponentClassName*</code>. Due to this fact, using the component classes outside of code in the component itself becomes very difficult, especially if `this` references are to be passed around; the difficulty arises because type-checking in the Razor syntax will cause a compile-time failure if `this` is cast to anything but the actual class, while the generated code will also fail to compile if `this` is cast to anything but the generated class. This means that regardless of if the component-external code expects the actual class or the generated class, supplying `this` will either fail on Razor's side or the generated code's side. #5514 Details this as well, but the issues get deeper. For example, a side effect of this property is that constructors are also susceptible to the same flip-flop compile-time failures, with the only difference that there is no way around the issue except defining a partial class. This is problematic, because even basic things like static constructors cannot be declared, so no app-initialization code can be declared independently in a component. An example of this use case would be using static constructors to add individual pages to a menu, so that hard-coded lists can be avoided.\r\n\r\n \r\n\r\n### Describe the solution you'd like\r\nAt this point, I see no reason why the generated classes cannot simply be `partial`, which would remove the need for a new class with `__` prepended to the name to be generated for all the components. Such a solution would solve most of the glaring issues with the current behavior.\r\n\r\n### Describe alternatives you've considered\r\nA possible alternative could be getting the code generator to rename constructors and destructors for the actual class to the generated class, and then derive the generated class from the actual one.",enhancement|area-mvc,SteveSandersonMS,"### Is your feature request related to a problem? Please describe.\r\nIn the latest release of Razor Components, the context for the code inside a component `.cshtml` file is always the generated class <code>__*ComponentClassName*</code> instead of simply the actual class <code>*ComponentClassName*</code>. Due to this fact, using the component classes outside of code in the component itself becomes very difficult, especially if `this` references are to be passed around; the difficulty arises because type-checking in the Razor syntax will cause a compile-time failure if `this` is cast to anything but the actual class, while the generated code will also fail to compile if `this` is cast to anything but the generated class. This means that regardless of if the component-external code expects the actual class or the generated class, supplying `this` will either fail on Razor's side or the generated code's side. #5514 Details this as well, but the issues get deeper. For example, a side effect of this property is that constructors are also susceptible to the same flip-flop compile-time failures, with the only difference that there is no way around the issue except defining a partial class. This is problematic, because even basic things like static constructors cannot be declared, so no app-initialization code can be declared independently in a component. An example of this use case would be using static constructors to add individual pages to a menu, so that hard-coded lists can be avoided.\r\n\r\n```csharp\r\npublic static Counter() => MenuHelper.AddListing(href: ""counter"", name: ""Counter"");\r\n``` \r\n\r\n### Describe the solution you'd like\r\nAt this point, I see no reason why the generated classes cannot simply be `partial`, which would remove the need for a new class with `__` prepended to the name to be generated for all the components. Such a solution would solve most of the glaring issues with the current behavior.\r\n\r\n### Describe alternatives you've considered\r\nA possible alternative could be getting the code generator to rename constructors and destructors for the actual class to the generated class, and then derive the generated class from the actual one.","csharp\r\npublic static Counter() => MenuHelper.AddListing(href: ""counter"", name: ""Counter"");\r\n"
7150,Remove obsolete member in src/Middleware/WebSockets/src/WebSocketMiddleware.csRemove this obsolete member in [src/Middleware/WebSockets/src/WebSocketMiddleware.cs](https://github.com/aspnet/AspNetCore/blob/master/src/Middleware/WebSockets/src/WebSocketMiddleware.cs#L51):\r\n\r\n\r\n\r\nAnd file a new issue in https://github.com/aspnet/Announcements/issues/ if this is a notable breaking change.\r\n,feature-websockets|breaking-change|area-networking,BrennanConroy,"Remove this obsolete member in [src/Middleware/WebSockets/src/WebSocketMiddleware.cs](https://github.com/aspnet/AspNetCore/blob/master/src/Middleware/WebSockets/src/WebSocketMiddleware.cs#L51):\r\n\r\n```c#\r\n        [Obsolete(""This constructor has been replaced with an equivalent constructor which requires an ILoggerFactory."")]\r\n        public WebSocketMiddleware(RequestDelegate next, IOptions<WebSocketOptions> options)\r\n            : this(next, options, NullLoggerFactory.Instance)\r\n```\r\n\r\nAnd file a new issue in https://github.com/aspnet/Announcements/issues/ if this is a notable breaking change.\r\n","c#\r\n        [Obsolete(""This constructor has been replaced with an equivalent constructor which requires an ILoggerFactory."")]\r\n        public WebSocketMiddleware(RequestDelegate next, IOptions<WebSocketOptions> options)\r\n            : this(next, options, NullLoggerFactory.Instance)\r\n"
7147,"HTML entities (e.g., &nbsp;) renders as content in Razor Components appIf I create a Razor Component that uses an HTML no break space (`&nbsp;`) in its markup, it renders as content instead of as a space.\r\n\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/1874516/52014652-052ecd80-24d8-11e9-8c52-e1a6b8a5acee.png)\r\n\r\nIn Blazor 0.7.0 you get spaces.\r\n",bug|area-blazor,ajaybhargavb,"If I create a Razor Component that uses an HTML no break space (`&nbsp;`) in its markup, it renders as content instead of as a space.\r\n\r\n```html\r\n@page ""/counter""\r\n\r\n<h1>Counter</h1>\r\n\r\n<p>Current count: &nbsp;&nbsp; @currentCount</p>\r\n\r\n<button class=""btn btn-primary"" onclick=""@IncrementCount"">Click me</button>\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/1874516/52014652-052ecd80-24d8-11e9-8c52-e1a6b8a5acee.png)\r\n\r\nIn Blazor 0.7.0 you get spaces.\r\n","html\r\n@page ""/counter""\r\n\r\n<h1>Counter</h1>\r\n\r\n<p>Current count: &nbsp;&nbsp; @currentCount</p>\r\n\r\n<button class=""btn btn-primary"" onclick=""@IncrementCount"">Click me</button>\r\n"
7146,"[Tooling] Evaluate obsolete APIs from 2.2 and consider removing them in 3.0.0Here's everything marked obsolete in 'master' in this repo. Please use the links below to compare master and release/2.2 to see if this is a pre-existing obsolete message for a member that can now be deleted. For each item consider whether to log a bug because we will take an action, and then check the checkbox to mark it as done (even if there's no further action).\r\n\r\n\r\n\r\n#### (1) src\\Razor\\src\\Microsoft.AspNetCore.Mvc.Razor.Extensions\\InjectDirective.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions/InjectDirective.cs#L116"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions/InjectDirective.cs#L116"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions%2FInjectDirective.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions%2FInjectDirective.cs%23L116%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20IRazorEngineBuilder%20Register%28IRazorEngineBuilder%20builder%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions/InjectDirective.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (2) src\\Razor\\src\\Microsoft.AspNetCore.Mvc.Razor.Extensions\\ModelDirective.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions/ModelDirective.cs#L138"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions/ModelDirective.cs#L138"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions%2FModelDirective.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions%2FModelDirective.cs%23L138%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20IRazorEngineBuilder%20Register%28IRazorEngineBuilder%20builder%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions/ModelDirective.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (3) src\\Razor\\src\\Microsoft.AspNetCore.Mvc.Razor.Extensions\\NamespaceDirective.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions/NamespaceDirective.cs#L191"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions/NamespaceDirective.cs#L191"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions%2FNamespaceDirective.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions%2FNamespaceDirective.cs%23L191%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20void%20Register%28IRazorEngineBuilder%20builder%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions/NamespaceDirective.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (4) src\\Razor\\src\\Microsoft.AspNetCore.Mvc.Razor.Extensions\\PageDirective.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions/PageDirective.cs#L108"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions/PageDirective.cs#L108"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions%2FPageDirective.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions%2FPageDirective.cs%23L108%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20IRazorEngineBuilder%20Register%28IRazorEngineBuilder%20builder%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions/PageDirective.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (5) src\\Razor\\src\\Microsoft.AspNetCore.Mvc.Razor.Extensions.Version1_X\\InjectDirective.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version1_X/InjectDirective.cs#L109"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version1_X/InjectDirective.cs#L109"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions.Version1_X%2FInjectDirective.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions.Version1_X%2FInjectDirective.cs%23L109%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20IRazorEngineBuilder%20Register%28IRazorEngineBuilder%20builder%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version1_X/InjectDirective.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (6) src\\Razor\\src\\Microsoft.AspNetCore.Mvc.Razor.Extensions.Version1_X\\ModelDirective.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version1_X/ModelDirective.cs#L131"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version1_X/ModelDirective.cs#L131"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions.Version1_X%2FModelDirective.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions.Version1_X%2FModelDirective.cs%23L131%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20IRazorEngineBuilder%20Register%28IRazorEngineBuilder%20builder%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version1_X/ModelDirective.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (7) src\\Razor\\src\\Microsoft.AspNetCore.Mvc.Razor.Extensions.Version1_X\\RazorExtensions.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version1_X/RazorExtensions.cs#L57"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version1_X/RazorExtensions.cs#L57"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions.Version1_X%2FRazorExtensions.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions.Version1_X%2FRazorExtensions.cs%23L57%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20void%20Register%28IRazorEngineBuilder%20builder%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version1_X/RazorExtensions.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (8) src\\Razor\\src\\Microsoft.AspNetCore.Mvc.Razor.Extensions.Version1_X\\RazorExtensions.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version1_X/RazorExtensions.cs#L89"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version1_X/RazorExtensions.cs#L89"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions.Version1_X%2FRazorExtensions.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions.Version1_X%2FRazorExtensions.cs%23L89%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20void%20RegisterViewComponentTagHelpers%28IRazorEngineBuilder%20builder%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version1_X/RazorExtensions.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (9) src\\Razor\\src\\Microsoft.AspNetCore.Mvc.Razor.Extensions.Version2_X\\InjectDirective.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version2_X/InjectDirective.cs#L109"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version2_X/InjectDirective.cs#L109"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions.Version2_X%2FInjectDirective.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions.Version2_X%2FInjectDirective.cs%23L109%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20IRazorEngineBuilder%20Register%28IRazorEngineBuilder%20builder%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version2_X/InjectDirective.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (10) src\\Razor\\src\\Microsoft.AspNetCore.Mvc.Razor.Extensions.Version2_X\\ModelDirective.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version2_X/ModelDirective.cs#L138"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version2_X/ModelDirective.cs#L138"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions.Version2_X%2FModelDirective.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions.Version2_X%2FModelDirective.cs%23L138%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20IRazorEngineBuilder%20Register%28IRazorEngineBuilder%20builder%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version2_X/ModelDirective.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (11) src\\Razor\\src\\Microsoft.AspNetCore.Mvc.Razor.Extensions.Version2_X\\NamespaceDirective.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version2_X/NamespaceDirective.cs#L191"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version2_X/NamespaceDirective.cs#L191"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions.Version2_X%2FNamespaceDirective.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions.Version2_X%2FNamespaceDirective.cs%23L191%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20void%20Register%28IRazorEngineBuilder%20builder%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version2_X/NamespaceDirective.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (12) src\\Razor\\src\\Microsoft.AspNetCore.Mvc.Razor.Extensions.Version2_X\\PageDirective.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version2_X/PageDirective.cs#L108"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version2_X/PageDirective.cs#L108"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions.Version2_X%2FPageDirective.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions.Version2_X%2FPageDirective.cs%23L108%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20IRazorEngineBuilder%20Register%28IRazorEngineBuilder%20builder%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version2_X/PageDirective.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (13) src\\Razor\\src\\Microsoft.AspNetCore.Razor.Language\\IRazorCodeGenerationOptionsFeature.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Razor.Language/IRazorCodeGenerationOptionsFeature.cs#L8"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Razor.Language/IRazorCodeGenerationOptionsFeature.cs#L8"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FIRazorCodeGenerationOptionsFeature.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FIRazorCodeGenerationOptionsFeature.cs%23L8%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%5BObsolete%28%22In%20Razor%202.1%20and%20newer%2C%20use%20RazorCodeDocument.GetCodeGenerationOptions%28%29.%22%29%5D%0D%0A%20%20%20%20public%20interface%20IRazorCodeGenerationOptionsFeature%20%3A%20IRazorEngineFeature%0D%0A%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Razor.Language/IRazorCodeGenerationOptionsFeature.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (14) src\\Razor\\src\\Microsoft.AspNetCore.Razor.Language\\IRazorEngineBuilder.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Razor.Language/IRazorEngineBuilder.cs#L9"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Razor.Language/IRazorEngineBuilder.cs#L9"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FIRazorEngineBuilder.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FIRazorEngineBuilder.cs%23L9%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%5BObsolete%28%22This%20class%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%20is%20%22%20%2B%20nameof%28RazorProjectEngineBuilder%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20public%20interface%20IRazorEngineBuilder%0D%0A%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Razor.Language/IRazorEngineBuilder.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (15) src\\Razor\\src\\Microsoft.AspNetCore.Razor.Language\\IRazorParserOptionsFeature.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Razor.Language/IRazorParserOptionsFeature.cs#L8"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Razor.Language/IRazorParserOptionsFeature.cs#L8"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FIRazorParserOptionsFeature.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FIRazorParserOptionsFeature.cs%23L8%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%5BObsolete%28%22In%20Razor%202.1%20and%20newer%2C%20use%20RazorCodeDocument.GetParserOptions%28%29.%22%29%5D%0D%0A%20%20%20%20public%20interface%20IRazorParserOptionsFeature%20%3A%20IRazorEngineFeature%0D%0A%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Razor.Language/IRazorParserOptionsFeature.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (16) src\\Razor\\src\\Microsoft.AspNetCore.Razor.Language\\RazorEngine.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngine.cs#L149"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngine.cs#L149"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FRazorEngine.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FRazorEngine.cs%23L149%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20RazorEngine%20Create%28%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngine.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (17) src\\Razor\\src\\Microsoft.AspNetCore.Razor.Language\\RazorEngine.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngine.cs#L155"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngine.cs#L155"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FRazorEngine.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FRazorEngine.cs%23L155%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%20is%20%22%20%2B%20nameof%28RazorProjectEngine%29%20%2B%20%22.%22%20%2B%20nameof%28RazorProjectEngine.Create%29%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20RazorEngine%20Create%28Action%3CIRazorEngineBuilder%3E%20configure%29%20%3D%3E%20CreateCore%28RazorConfiguration.Default%2C%20false%2C%20configure%29%3B%0D%0A%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngine.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (18) src\\Razor\\src\\Microsoft.AspNetCore.Razor.Language\\RazorEngine.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngine.cs#L158"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngine.cs#L158"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FRazorEngine.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FRazorEngine.cs%23L158%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%20is%20%22%20%2B%20nameof%28RazorProjectEngine%29%20%2B%20%22.%22%20%2B%20nameof%28RazorProjectEngine.Create%29%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20RazorEngine%20CreateDesignTime%28%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngine.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (19) src\\Razor\\src\\Microsoft.AspNetCore.Razor.Language\\RazorEngine.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngine.cs#L164"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngine.cs#L164"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FRazorEngine.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FRazorEngine.cs%23L164%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%20is%20%22%20%2B%20nameof%28RazorProjectEngine%29%20%2B%20%22.%22%20%2B%20nameof%28RazorProjectEngine.Create%29%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20RazorEngine%20CreateDesignTime%28Action%3CIRazorEngineBuilder%3E%20configure%29%20%3D%3E%20CreateCore%28RazorConfiguration.Default%2C%20true%2C%20configure%29%3B%0D%0A%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngine.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (20) src\\Razor\\src\\Microsoft.AspNetCore.Razor.Language\\RazorEngine.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngine.cs#L167"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngine.cs#L167"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FRazorEngine.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FRazorEngine.cs%23L167%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20RazorEngine%20CreateEmpty%28Action%3CIRazorEngineBuilder%3E%20configure%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngine.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (21) src\\Razor\\src\\Microsoft.AspNetCore.Razor.Language\\RazorEngine.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngine.cs#L180"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngine.cs#L180"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FRazorEngine.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FRazorEngine.cs%23L180%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20RazorEngine%20CreateDesignTimeEmpty%28Action%3CIRazorEngineBuilder%3E%20configure%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngine.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (22) src\\Razor\\src\\Microsoft.AspNetCore.Razor.Language\\RazorEngineBuilderExtensions.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngineBuilderExtensions.cs#L14"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngineBuilderExtensions.cs#L14"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FRazorEngineBuilderExtensions.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FRazorEngineBuilderExtensions.cs%23L14%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%5BObsolete%28%22This%20class%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%20is%20%22%20%2B%20nameof%28RazorProjectEngineBuilderExtensions%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20public%20static%20class%20RazorEngineBuilderExtensions%0D%0A%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngineBuilderExtensions.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (23) src\\Razor\\src\\Microsoft.CodeAnalysis.Razor\\DefaultTagHelperDescriptorProvider.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.CodeAnalysis.Razor/DefaultTagHelperDescriptorProvider.cs#L12"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.CodeAnalysis.Razor/DefaultTagHelperDescriptorProvider.cs#L12"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.CodeAnalysis.Razor%2FDefaultTagHelperDescriptorProvider.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.CodeAnalysis.Razor%2FDefaultTagHelperDescriptorProvider.cs%23L12%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%22This%20property%20is%20obsolete%20will%20not%20be%20honored.%20Documentation%20will%20be%20included%20if%20%22%20%2B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%22TagHelperDescriptorProviderContext.IncludeDocumentation%20is%20set%20to%20true.%20Hidden%20tag%20helpers%20will%22%20%2B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.CodeAnalysis.Razor/DefaultTagHelperDescriptorProvider.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (24) src\\Razor\\src\\Microsoft.AspNetCore.Razor.Language\\CodeGeneration\\DocumentWriter.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Razor.Language/CodeGeneration/DocumentWriter.cs#L28"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Razor.Language/CodeGeneration/DocumentWriter.cs#L28"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FCodeGeneration%2FDocumentWriter.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FCodeGeneration%2FDocumentWriter.cs%23L28%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20was%20intended%20to%20be%20static%2C%20use%20CreateDefault%20instead.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20DocumentWriter%20Create%28CodeTarget%20codeTarget%2C%20RazorCodeGenerationOptions%20options%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Razor.Language/CodeGeneration/DocumentWriter.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (25) src\\Razor\\src\\Microsoft.AspNetCore.Razor.Language\\Extensions\\FunctionsDirective.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Razor.Language/Extensions/FunctionsDirective.cs#L31"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Razor.Language/Extensions/FunctionsDirective.cs#L31"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FExtensions%2FFunctionsDirective.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FExtensions%2FFunctionsDirective.cs%23L31%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20void%20Register%28IRazorEngineBuilder%20builder%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Razor.Language/Extensions/FunctionsDirective.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (26) src\\Razor\\src\\Microsoft.AspNetCore.Razor.Language\\Extensions\\InheritsDirective.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Razor.Language/Extensions/InheritsDirective.cs#L33"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Razor.Language/Extensions/InheritsDirective.cs#L33"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FExtensions%2FInheritsDirective.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FExtensions%2FInheritsDirective.cs%23L33%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20void%20Register%28IRazorEngineBuilder%20builder%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Razor.Language/Extensions/InheritsDirective.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (27) src\\Razor\\src\\Microsoft.AspNetCore.Razor.Language\\Extensions\\SectionDirective.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Razor.Language/Extensions/SectionDirective.cs#L33"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Razor.Language/Extensions/SectionDirective.cs#L33"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FExtensions%2FSectionDirective.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FExtensions%2FSectionDirective.cs%23L33%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20void%20Register%28IRazorEngineBuilder%20builder%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Razor.Language/Extensions/SectionDirective.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (28) src\\Razor\\src\\Microsoft.CodeAnalysis.Razor.Workspaces\\ProjectSystem\\ProjectChangeEventArgs.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.CodeAnalysis.Razor.Workspaces/ProjectSystem/ProjectChangeEventArgs.cs#L10"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.CodeAnalysis.Razor.Workspaces/ProjectSystem/ProjectChangeEventArgs.cs#L10"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.CodeAnalysis.Razor.Workspaces%2FProjectSystem%2FProjectChangeEventArgs.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.CodeAnalysis.Razor.Workspaces%2FProjectSystem%2FProjectChangeEventArgs.cs%23L10%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22Adding%20this%20as%20a%20workaround%20to%20unblock%20live%20share%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20ProjectChangeEventArgs%28string%20projectFilePath%2C%20ProjectChangeKind%20kind%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.CodeAnalysis.Razor.Workspaces/ProjectSystem/ProjectChangeEventArgs.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (29) src\\Razor\\src\\Microsoft.CodeAnalysis.Razor.Workspaces\\ProjectSystem\\ProjectChangeEventArgs.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.CodeAnalysis.Razor.Workspaces/ProjectSystem/ProjectChangeEventArgs.cs#L22"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.CodeAnalysis.Razor.Workspaces/ProjectSystem/ProjectChangeEventArgs.cs#L22"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.CodeAnalysis.Razor.Workspaces%2FProjectSystem%2FProjectChangeEventArgs.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.CodeAnalysis.Razor.Workspaces%2FProjectSystem%2FProjectChangeEventArgs.cs%23L22%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22Adding%20this%20as%20a%20workaround%20to%20unblock%20live%20share%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20ProjectChangeEventArgs%28string%20projectFilePath%2C%20string%20documentFilePath%2C%20ProjectChangeKind%20kind%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.CodeAnalysis.Razor.Workspaces/ProjectSystem/ProjectChangeEventArgs.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (30) src\\Razor\\test\\Microsoft.AspNetCore.Razor.Test.Common\\Language\\RazorEngineBuilderExtensions.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/test/Microsoft.AspNetCore.Razor.Test.Common/Language/RazorEngineBuilderExtensions.cs#L13"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/test/Microsoft.AspNetCore.Razor.Test.Common/Language/RazorEngineBuilderExtensions.cs#L13"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Ftest%2FMicrosoft.AspNetCore.Razor.Test.Common%2FLanguage%2FRazorEngineBuilderExtensions.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Ftest%2FMicrosoft.AspNetCore.Razor.Test.Common%2FLanguage%2FRazorEngineBuilderExtensions.cs%23L13%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%5BObsolete%28%22This%20class%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20public%20static%20class%20RazorEngineBuilderExtensions%0D%0A%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/test/Microsoft.AspNetCore.Razor.Test.Common/Language/RazorEngineBuilderExtensions.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n\r\n#### (31) src\\Razor\\test\\Microsoft.VisualStudio.Editor.Razor.Test.Common\\Xunit\\ForegroundTestCase.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/test/Microsoft.VisualStudio.Editor.Razor.Test.Common/Xunit/ForegroundTestCase.cs#L17"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/test/Microsoft.VisualStudio.Editor.Razor.Test.Common/Xunit/ForegroundTestCase.cs#L17"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Ftest%2FMicrosoft.VisualStudio.Editor.Razor.Test.Common%2FXunit%2FForegroundTestCase.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Ftest%2FMicrosoft.VisualStudio.Editor.Razor.Test.Common%2FXunit%2FForegroundTestCase.cs%23L17%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22Called%20by%20the%20de-serializer%22%2C%20error%3A%20true%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20ForegroundTestCase%28%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/test/Microsoft.VisualStudio.Editor.Razor.Test.Common/Xunit/ForegroundTestCase.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n\r\n\r\n---\r\n\r\n",bug|Done|breaking-change|area-infrastructure,NTaylorMullen,"Here's everything marked obsolete in 'master' in this repo. Please use the links below to compare master and release/2.2 to see if this is a pre-existing obsolete message for a member that can now be deleted. For each item consider whether to log a bug because we will take an action, and then check the checkbox to mark it as done (even if there's no further action).\r\n\r\n\r\n\r\n#### (1) src\\Razor\\src\\Microsoft.AspNetCore.Mvc.Razor.Extensions\\InjectDirective.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions/InjectDirective.cs#L116"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions/InjectDirective.cs#L116"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions%2FInjectDirective.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions%2FInjectDirective.cs%23L116%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20IRazorEngineBuilder%20Register%28IRazorEngineBuilder%20builder%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions/InjectDirective.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This method is obsolete and will be removed in a future version."")]\r\n        public static IRazorEngineBuilder Register(IRazorEngineBuilder builder)\r\n        {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (2) src\\Razor\\src\\Microsoft.AspNetCore.Mvc.Razor.Extensions\\ModelDirective.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions/ModelDirective.cs#L138"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions/ModelDirective.cs#L138"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions%2FModelDirective.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions%2FModelDirective.cs%23L138%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20IRazorEngineBuilder%20Register%28IRazorEngineBuilder%20builder%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions/ModelDirective.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This method is obsolete and will be removed in a future version."")]\r\n        public static IRazorEngineBuilder Register(IRazorEngineBuilder builder)\r\n        {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (3) src\\Razor\\src\\Microsoft.AspNetCore.Mvc.Razor.Extensions\\NamespaceDirective.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions/NamespaceDirective.cs#L191"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions/NamespaceDirective.cs#L191"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions%2FNamespaceDirective.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions%2FNamespaceDirective.cs%23L191%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20void%20Register%28IRazorEngineBuilder%20builder%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions/NamespaceDirective.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This method is obsolete and will be removed in a future version."")]\r\n        public static void Register(IRazorEngineBuilder builder)\r\n        {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (4) src\\Razor\\src\\Microsoft.AspNetCore.Mvc.Razor.Extensions\\PageDirective.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions/PageDirective.cs#L108"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions/PageDirective.cs#L108"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions%2FPageDirective.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions%2FPageDirective.cs%23L108%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20IRazorEngineBuilder%20Register%28IRazorEngineBuilder%20builder%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions/PageDirective.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This method is obsolete and will be removed in a future version."")]\r\n        public static IRazorEngineBuilder Register(IRazorEngineBuilder builder)\r\n        {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (5) src\\Razor\\src\\Microsoft.AspNetCore.Mvc.Razor.Extensions.Version1_X\\InjectDirective.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version1_X/InjectDirective.cs#L109"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version1_X/InjectDirective.cs#L109"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions.Version1_X%2FInjectDirective.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions.Version1_X%2FInjectDirective.cs%23L109%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20IRazorEngineBuilder%20Register%28IRazorEngineBuilder%20builder%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version1_X/InjectDirective.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This method is obsolete and will be removed in a future version."")]\r\n        public static IRazorEngineBuilder Register(IRazorEngineBuilder builder)\r\n        {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (6) src\\Razor\\src\\Microsoft.AspNetCore.Mvc.Razor.Extensions.Version1_X\\ModelDirective.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version1_X/ModelDirective.cs#L131"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version1_X/ModelDirective.cs#L131"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions.Version1_X%2FModelDirective.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions.Version1_X%2FModelDirective.cs%23L131%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20IRazorEngineBuilder%20Register%28IRazorEngineBuilder%20builder%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version1_X/ModelDirective.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This method is obsolete and will be removed in a future version."")]\r\n        public static IRazorEngineBuilder Register(IRazorEngineBuilder builder)\r\n        {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (7) src\\Razor\\src\\Microsoft.AspNetCore.Mvc.Razor.Extensions.Version1_X\\RazorExtensions.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version1_X/RazorExtensions.cs#L57"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version1_X/RazorExtensions.cs#L57"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions.Version1_X%2FRazorExtensions.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions.Version1_X%2FRazorExtensions.cs%23L57%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20void%20Register%28IRazorEngineBuilder%20builder%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version1_X/RazorExtensions.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This method is obsolete and will be removed in a future version."")]\r\n        public static void Register(IRazorEngineBuilder builder)\r\n        {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (8) src\\Razor\\src\\Microsoft.AspNetCore.Mvc.Razor.Extensions.Version1_X\\RazorExtensions.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version1_X/RazorExtensions.cs#L89"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version1_X/RazorExtensions.cs#L89"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions.Version1_X%2FRazorExtensions.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions.Version1_X%2FRazorExtensions.cs%23L89%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20void%20RegisterViewComponentTagHelpers%28IRazorEngineBuilder%20builder%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version1_X/RazorExtensions.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This method is obsolete and will be removed in a future version."")]\r\n        public static void RegisterViewComponentTagHelpers(IRazorEngineBuilder builder)\r\n        {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (9) src\\Razor\\src\\Microsoft.AspNetCore.Mvc.Razor.Extensions.Version2_X\\InjectDirective.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version2_X/InjectDirective.cs#L109"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version2_X/InjectDirective.cs#L109"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions.Version2_X%2FInjectDirective.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions.Version2_X%2FInjectDirective.cs%23L109%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20IRazorEngineBuilder%20Register%28IRazorEngineBuilder%20builder%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version2_X/InjectDirective.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This method is obsolete and will be removed in a future version."")]\r\n        public static IRazorEngineBuilder Register(IRazorEngineBuilder builder)\r\n        {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (10) src\\Razor\\src\\Microsoft.AspNetCore.Mvc.Razor.Extensions.Version2_X\\ModelDirective.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version2_X/ModelDirective.cs#L138"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version2_X/ModelDirective.cs#L138"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions.Version2_X%2FModelDirective.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions.Version2_X%2FModelDirective.cs%23L138%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20IRazorEngineBuilder%20Register%28IRazorEngineBuilder%20builder%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version2_X/ModelDirective.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This method is obsolete and will be removed in a future version."")]\r\n        public static IRazorEngineBuilder Register(IRazorEngineBuilder builder)\r\n        {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (11) src\\Razor\\src\\Microsoft.AspNetCore.Mvc.Razor.Extensions.Version2_X\\NamespaceDirective.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version2_X/NamespaceDirective.cs#L191"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version2_X/NamespaceDirective.cs#L191"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions.Version2_X%2FNamespaceDirective.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions.Version2_X%2FNamespaceDirective.cs%23L191%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20void%20Register%28IRazorEngineBuilder%20builder%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version2_X/NamespaceDirective.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This method is obsolete and will be removed in a future version."")]\r\n        public static void Register(IRazorEngineBuilder builder)\r\n        {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (12) src\\Razor\\src\\Microsoft.AspNetCore.Mvc.Razor.Extensions.Version2_X\\PageDirective.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version2_X/PageDirective.cs#L108"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version2_X/PageDirective.cs#L108"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions.Version2_X%2FPageDirective.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Mvc.Razor.Extensions.Version2_X%2FPageDirective.cs%23L108%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20IRazorEngineBuilder%20Register%28IRazorEngineBuilder%20builder%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Mvc.Razor.Extensions.Version2_X/PageDirective.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This method is obsolete and will be removed in a future version."")]\r\n        public static IRazorEngineBuilder Register(IRazorEngineBuilder builder)\r\n        {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (13) src\\Razor\\src\\Microsoft.AspNetCore.Razor.Language\\IRazorCodeGenerationOptionsFeature.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Razor.Language/IRazorCodeGenerationOptionsFeature.cs#L8"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Razor.Language/IRazorCodeGenerationOptionsFeature.cs#L8"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FIRazorCodeGenerationOptionsFeature.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FIRazorCodeGenerationOptionsFeature.cs%23L8%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%5BObsolete%28%22In%20Razor%202.1%20and%20newer%2C%20use%20RazorCodeDocument.GetCodeGenerationOptions%28%29.%22%29%5D%0D%0A%20%20%20%20public%20interface%20IRazorCodeGenerationOptionsFeature%20%3A%20IRazorEngineFeature%0D%0A%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Razor.Language/IRazorCodeGenerationOptionsFeature.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n    [Obsolete(""In Razor 2.1 and newer, use RazorCodeDocument.GetCodeGenerationOptions()."")]\r\n    public interface IRazorCodeGenerationOptionsFeature : IRazorEngineFeature\r\n    {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (14) src\\Razor\\src\\Microsoft.AspNetCore.Razor.Language\\IRazorEngineBuilder.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Razor.Language/IRazorEngineBuilder.cs#L9"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Razor.Language/IRazorEngineBuilder.cs#L9"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FIRazorEngineBuilder.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FIRazorEngineBuilder.cs%23L9%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%5BObsolete%28%22This%20class%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%20is%20%22%20%2B%20nameof%28RazorProjectEngineBuilder%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20public%20interface%20IRazorEngineBuilder%0D%0A%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Razor.Language/IRazorEngineBuilder.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n    [Obsolete(""This class is obsolete and will be removed in a future version. The recommended alternative is "" + nameof(RazorProjectEngineBuilder) + ""."")]\r\n    public interface IRazorEngineBuilder\r\n    {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (15) src\\Razor\\src\\Microsoft.AspNetCore.Razor.Language\\IRazorParserOptionsFeature.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Razor.Language/IRazorParserOptionsFeature.cs#L8"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Razor.Language/IRazorParserOptionsFeature.cs#L8"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FIRazorParserOptionsFeature.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FIRazorParserOptionsFeature.cs%23L8%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%5BObsolete%28%22In%20Razor%202.1%20and%20newer%2C%20use%20RazorCodeDocument.GetParserOptions%28%29.%22%29%5D%0D%0A%20%20%20%20public%20interface%20IRazorParserOptionsFeature%20%3A%20IRazorEngineFeature%0D%0A%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Razor.Language/IRazorParserOptionsFeature.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n    [Obsolete(""In Razor 2.1 and newer, use RazorCodeDocument.GetParserOptions()."")]\r\n    public interface IRazorParserOptionsFeature : IRazorEngineFeature\r\n    {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (16) src\\Razor\\src\\Microsoft.AspNetCore.Razor.Language\\RazorEngine.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngine.cs#L149"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngine.cs#L149"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FRazorEngine.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FRazorEngine.cs%23L149%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20RazorEngine%20Create%28%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngine.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This method is obsolete and will be removed in a future version."")]\r\n        public static RazorEngine Create()\r\n        {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (17) src\\Razor\\src\\Microsoft.AspNetCore.Razor.Language\\RazorEngine.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngine.cs#L155"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngine.cs#L155"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FRazorEngine.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FRazorEngine.cs%23L155%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%20is%20%22%20%2B%20nameof%28RazorProjectEngine%29%20%2B%20%22.%22%20%2B%20nameof%28RazorProjectEngine.Create%29%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20RazorEngine%20Create%28Action%3CIRazorEngineBuilder%3E%20configure%29%20%3D%3E%20CreateCore%28RazorConfiguration.Default%2C%20false%2C%20configure%29%3B%0D%0A%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngine.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This method is obsolete and will be removed in a future version. The recommended alternative is "" + nameof(RazorProjectEngine) + ""."" + nameof(RazorProjectEngine.Create))]\r\n        public static RazorEngine Create(Action<IRazorEngineBuilder> configure) => CreateCore(RazorConfiguration.Default, false, configure);\r\n\r\n```\r\n\r\n---\r\n\r\n\r\n#### (18) src\\Razor\\src\\Microsoft.AspNetCore.Razor.Language\\RazorEngine.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngine.cs#L158"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngine.cs#L158"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FRazorEngine.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FRazorEngine.cs%23L158%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%20is%20%22%20%2B%20nameof%28RazorProjectEngine%29%20%2B%20%22.%22%20%2B%20nameof%28RazorProjectEngine.Create%29%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20RazorEngine%20CreateDesignTime%28%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngine.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This method is obsolete and will be removed in a future version. The recommended alternative is "" + nameof(RazorProjectEngine) + ""."" + nameof(RazorProjectEngine.Create))]\r\n        public static RazorEngine CreateDesignTime()\r\n        {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (19) src\\Razor\\src\\Microsoft.AspNetCore.Razor.Language\\RazorEngine.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngine.cs#L164"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngine.cs#L164"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FRazorEngine.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FRazorEngine.cs%23L164%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%20is%20%22%20%2B%20nameof%28RazorProjectEngine%29%20%2B%20%22.%22%20%2B%20nameof%28RazorProjectEngine.Create%29%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20RazorEngine%20CreateDesignTime%28Action%3CIRazorEngineBuilder%3E%20configure%29%20%3D%3E%20CreateCore%28RazorConfiguration.Default%2C%20true%2C%20configure%29%3B%0D%0A%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngine.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This method is obsolete and will be removed in a future version. The recommended alternative is "" + nameof(RazorProjectEngine) + ""."" + nameof(RazorProjectEngine.Create))]\r\n        public static RazorEngine CreateDesignTime(Action<IRazorEngineBuilder> configure) => CreateCore(RazorConfiguration.Default, true, configure);\r\n\r\n```\r\n\r\n---\r\n\r\n\r\n#### (20) src\\Razor\\src\\Microsoft.AspNetCore.Razor.Language\\RazorEngine.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngine.cs#L167"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngine.cs#L167"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FRazorEngine.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FRazorEngine.cs%23L167%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20RazorEngine%20CreateEmpty%28Action%3CIRazorEngineBuilder%3E%20configure%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngine.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This method is obsolete and will be removed in a future version."")]\r\n        public static RazorEngine CreateEmpty(Action<IRazorEngineBuilder> configure)\r\n        {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (21) src\\Razor\\src\\Microsoft.AspNetCore.Razor.Language\\RazorEngine.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngine.cs#L180"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngine.cs#L180"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FRazorEngine.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FRazorEngine.cs%23L180%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20RazorEngine%20CreateDesignTimeEmpty%28Action%3CIRazorEngineBuilder%3E%20configure%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngine.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This method is obsolete and will be removed in a future version."")]\r\n        public static RazorEngine CreateDesignTimeEmpty(Action<IRazorEngineBuilder> configure)\r\n        {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (22) src\\Razor\\src\\Microsoft.AspNetCore.Razor.Language\\RazorEngineBuilderExtensions.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngineBuilderExtensions.cs#L14"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngineBuilderExtensions.cs#L14"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FRazorEngineBuilderExtensions.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FRazorEngineBuilderExtensions.cs%23L14%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%5BObsolete%28%22This%20class%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%20The%20recommended%20alternative%20is%20%22%20%2B%20nameof%28RazorProjectEngineBuilderExtensions%29%20%2B%20%22.%22%29%5D%0D%0A%20%20%20%20public%20static%20class%20RazorEngineBuilderExtensions%0D%0A%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Razor.Language/RazorEngineBuilderExtensions.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n    [Obsolete(""This class is obsolete and will be removed in a future version. The recommended alternative is "" + nameof(RazorProjectEngineBuilderExtensions) + ""."")]\r\n    public static class RazorEngineBuilderExtensions\r\n    {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (23) src\\Razor\\src\\Microsoft.CodeAnalysis.Razor\\DefaultTagHelperDescriptorProvider.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.CodeAnalysis.Razor/DefaultTagHelperDescriptorProvider.cs#L12"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.CodeAnalysis.Razor/DefaultTagHelperDescriptorProvider.cs#L12"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.CodeAnalysis.Razor%2FDefaultTagHelperDescriptorProvider.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.CodeAnalysis.Razor%2FDefaultTagHelperDescriptorProvider.cs%23L12%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%22This%20property%20is%20obsolete%20will%20not%20be%20honored.%20Documentation%20will%20be%20included%20if%20%22%20%2B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%22TagHelperDescriptorProviderContext.IncludeDocumentation%20is%20set%20to%20true.%20Hidden%20tag%20helpers%20will%22%20%2B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.CodeAnalysis.Razor/DefaultTagHelperDescriptorProvider.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(\r\n            ""This property is obsolete will not be honored. Documentation will be included if "" +\r\n            ""TagHelperDescriptorProviderContext.IncludeDocumentation is set to true. Hidden tag helpers will"" +\r\n```\r\n\r\n---\r\n\r\n\r\n#### (24) src\\Razor\\src\\Microsoft.AspNetCore.Razor.Language\\CodeGeneration\\DocumentWriter.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Razor.Language/CodeGeneration/DocumentWriter.cs#L28"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Razor.Language/CodeGeneration/DocumentWriter.cs#L28"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FCodeGeneration%2FDocumentWriter.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FCodeGeneration%2FDocumentWriter.cs%23L28%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20was%20intended%20to%20be%20static%2C%20use%20CreateDefault%20instead.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20DocumentWriter%20Create%28CodeTarget%20codeTarget%2C%20RazorCodeGenerationOptions%20options%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Razor.Language/CodeGeneration/DocumentWriter.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This method was intended to be static, use CreateDefault instead."")]\r\n        public DocumentWriter Create(CodeTarget codeTarget, RazorCodeGenerationOptions options)\r\n        {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (25) src\\Razor\\src\\Microsoft.AspNetCore.Razor.Language\\Extensions\\FunctionsDirective.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Razor.Language/Extensions/FunctionsDirective.cs#L31"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Razor.Language/Extensions/FunctionsDirective.cs#L31"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FExtensions%2FFunctionsDirective.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FExtensions%2FFunctionsDirective.cs%23L31%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20void%20Register%28IRazorEngineBuilder%20builder%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Razor.Language/Extensions/FunctionsDirective.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This method is obsolete and will be removed in a future version."")]\r\n        public static void Register(IRazorEngineBuilder builder)\r\n        {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (26) src\\Razor\\src\\Microsoft.AspNetCore.Razor.Language\\Extensions\\InheritsDirective.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Razor.Language/Extensions/InheritsDirective.cs#L33"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Razor.Language/Extensions/InheritsDirective.cs#L33"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FExtensions%2FInheritsDirective.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FExtensions%2FInheritsDirective.cs%23L33%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20void%20Register%28IRazorEngineBuilder%20builder%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Razor.Language/Extensions/InheritsDirective.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This method is obsolete and will be removed in a future version."")]\r\n        public static void Register(IRazorEngineBuilder builder)\r\n        {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (27) src\\Razor\\src\\Microsoft.AspNetCore.Razor.Language\\Extensions\\SectionDirective.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.AspNetCore.Razor.Language/Extensions/SectionDirective.cs#L33"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.AspNetCore.Razor.Language/Extensions/SectionDirective.cs#L33"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FExtensions%2FSectionDirective.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.AspNetCore.Razor.Language%2FExtensions%2FSectionDirective.cs%23L33%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22This%20method%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20static%20void%20Register%28IRazorEngineBuilder%20builder%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.AspNetCore.Razor.Language/Extensions/SectionDirective.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""This method is obsolete and will be removed in a future version."")]\r\n        public static void Register(IRazorEngineBuilder builder)\r\n        {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (28) src\\Razor\\src\\Microsoft.CodeAnalysis.Razor.Workspaces\\ProjectSystem\\ProjectChangeEventArgs.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.CodeAnalysis.Razor.Workspaces/ProjectSystem/ProjectChangeEventArgs.cs#L10"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.CodeAnalysis.Razor.Workspaces/ProjectSystem/ProjectChangeEventArgs.cs#L10"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.CodeAnalysis.Razor.Workspaces%2FProjectSystem%2FProjectChangeEventArgs.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.CodeAnalysis.Razor.Workspaces%2FProjectSystem%2FProjectChangeEventArgs.cs%23L10%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22Adding%20this%20as%20a%20workaround%20to%20unblock%20live%20share%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20ProjectChangeEventArgs%28string%20projectFilePath%2C%20ProjectChangeKind%20kind%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.CodeAnalysis.Razor.Workspaces/ProjectSystem/ProjectChangeEventArgs.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""Adding this as a workaround to unblock live share"")]\r\n        public ProjectChangeEventArgs(string projectFilePath, ProjectChangeKind kind)\r\n        {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (29) src\\Razor\\src\\Microsoft.CodeAnalysis.Razor.Workspaces\\ProjectSystem\\ProjectChangeEventArgs.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/src/Microsoft.CodeAnalysis.Razor.Workspaces/ProjectSystem/ProjectChangeEventArgs.cs#L22"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/src/Microsoft.CodeAnalysis.Razor.Workspaces/ProjectSystem/ProjectChangeEventArgs.cs#L22"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Fsrc%2FMicrosoft.CodeAnalysis.Razor.Workspaces%2FProjectSystem%2FProjectChangeEventArgs.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Fsrc%2FMicrosoft.CodeAnalysis.Razor.Workspaces%2FProjectSystem%2FProjectChangeEventArgs.cs%23L22%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22Adding%20this%20as%20a%20workaround%20to%20unblock%20live%20share%22%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20ProjectChangeEventArgs%28string%20projectFilePath%2C%20string%20documentFilePath%2C%20ProjectChangeKind%20kind%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/src/Microsoft.CodeAnalysis.Razor.Workspaces/ProjectSystem/ProjectChangeEventArgs.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""Adding this as a workaround to unblock live share"")]\r\n        public ProjectChangeEventArgs(string projectFilePath, string documentFilePath, ProjectChangeKind kind)\r\n        {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (30) src\\Razor\\test\\Microsoft.AspNetCore.Razor.Test.Common\\Language\\RazorEngineBuilderExtensions.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/test/Microsoft.AspNetCore.Razor.Test.Common/Language/RazorEngineBuilderExtensions.cs#L13"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/test/Microsoft.AspNetCore.Razor.Test.Common/Language/RazorEngineBuilderExtensions.cs#L13"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Ftest%2FMicrosoft.AspNetCore.Razor.Test.Common%2FLanguage%2FRazorEngineBuilderExtensions.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Ftest%2FMicrosoft.AspNetCore.Razor.Test.Common%2FLanguage%2FRazorEngineBuilderExtensions.cs%23L13%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%5BObsolete%28%22This%20class%20is%20obsolete%20and%20will%20be%20removed%20in%20a%20future%20version.%22%29%5D%0D%0A%20%20%20%20public%20static%20class%20RazorEngineBuilderExtensions%0D%0A%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/test/Microsoft.AspNetCore.Razor.Test.Common/Language/RazorEngineBuilderExtensions.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n    [Obsolete(""This class is obsolete and will be removed in a future version."")]\r\n    public static class RazorEngineBuilderExtensions\r\n    {\r\n```\r\n\r\n---\r\n\r\n\r\n#### (31) src\\Razor\\test\\Microsoft.VisualStudio.Editor.Razor.Test.Common\\Xunit\\ForegroundTestCase.cs\r\nLinks: <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/master/src/Razor/test/Microsoft.VisualStudio.Editor.Razor.Test.Common/Xunit/ForegroundTestCase.cs#L17"">[master]</a> | <a href=""https://github.com/aspnet/AspNetCore-Tooling/blob/release/2.2/src/Razor/test/Microsoft.VisualStudio.Editor.Razor.Test.Common/Xunit/ForegroundTestCase.cs#L17"">[release/2.2]</a>\r\n[File a bug for this](https://github.com/aspnet/AspNetCore/issues/new?body=Remove%20this%20obsolete%20member%20in%20%5Bsrc%2FRazor%2Ftest%2FMicrosoft.VisualStudio.Editor.Razor.Test.Common%2FXunit%2FForegroundTestCase.cs%5D%28https%3A%2F%2Fgithub.com%2Faspnet%2FAspNetCore-Tooling%2Fblob%2Fmaster%2Fsrc%2FRazor%2Ftest%2FMicrosoft.VisualStudio.Editor.Razor.Test.Common%2FXunit%2FForegroundTestCase.cs%23L17%29%3A%0D%0A%0D%0A%60%60%60c%23%0D%0A%20%20%20%20%20%20%20%20%5BObsolete%28%22Called%20by%20the%20de-serializer%22%2C%20error%3A%20true%29%5D%0D%0A%20%20%20%20%20%20%20%20public%20ForegroundTestCase%28%29%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%60%60%60%0D%0A%0D%0AAnd%20file%20a%20new%20issue%20in%20https%3A%2F%2Fgithub.com%2Faspnet%2FAnnouncements%2Fissues%2F%20if%20this%20is%20a%20notable%20breaking%20change.%0D%0A&labels=breaking-change&title=Remove%20obsolete%20member%20in%20src/Razor/test/Microsoft.VisualStudio.Editor.Razor.Test.Common/Xunit/ForegroundTestCase.cs&milestone=3.0.0-preview3)\r\n* [x] I attest that I have taken appropriate action on this item\r\n\r\n```c#\r\n        [Obsolete(""Called by the de-serializer"", error: true)]\r\n        public ForegroundTestCase()\r\n        {\r\n```\r\n\r\n---\r\n\r\n","c#\r\n        [Obsolete(""This method is obsolete and will be removed in a future version."")]\r\n        public static IRazorEngineBuilder Register(IRazorEngineBuilder builder)\r\n        {\r\n"
7098,LinkGenerator.GetPathByName() doesn't work### Describe the bug\r\n`LinkGenerator.GetPathByName()` doesn't work.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n\r\n1. Create a project with `dotnet new mvc`\r\n2. Change the `HomeController` code to this:\r\n\r\n\r\n\r\n3. `dotnet run`\r\n4. Go to `http://localhost:5000/Test`\r\n\r\n### Expected output\r\n\r\n```\r\nGetPathByAction: /Test\r\nGetPathByName: /Test\r\n```\r\n\r\n### Actual output\r\n\r\n```\r\nGetPathByAction: /Test\r\nGetPathByName: \r\n```\r\n\r\n### Additional context\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.103\r\n Commit:    8edbc2570a\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.2.103/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.1\r\n  Commit:  878dd11e62\r\n\r\n.NET Core SDKs installed:\r\n  2.2.103 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n,bug|Done|area-mvc,rynowak,"### Describe the bug\r\n`LinkGenerator.GetPathByName()` doesn't work.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n\r\n1. Create a project with `dotnet new mvc`\r\n2. Change the `HomeController` code to this:\r\n\r\n```csharp\r\n    public class HomeController : Controller\r\n    {\r\n        private readonly LinkGenerator _linkGenerator;\r\n        public HomeController(LinkGenerator linkGenerator)\r\n        {\r\n            _linkGenerator = linkGenerator;\r\n        }\r\n\r\n        [HttpGet(""Test"", Name = ""Test"")]\r\n        public IActionResult Test()\r\n        {\r\n            return Ok(\r\n$@""GetPathByAction: {_linkGenerator.GetPathByAction(HttpContext, ""Test"")}\r\nGetPathByName: {_linkGenerator.GetPathByName(""Test"", null)}""\r\n            );\r\n        }\r\n    }\r\n```\r\n\r\n3. `dotnet run`\r\n4. Go to `http://localhost:5000/Test`\r\n\r\n### Expected output\r\n\r\n```\r\nGetPathByAction: /Test\r\nGetPathByName: /Test\r\n```\r\n\r\n### Actual output\r\n\r\n```\r\nGetPathByAction: /Test\r\nGetPathByName: \r\n```\r\n\r\n### Additional context\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.103\r\n Commit:    8edbc2570a\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.2.103/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.1\r\n  Commit:  878dd11e62\r\n\r\n.NET Core SDKs installed:\r\n  2.2.103 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n","csharp\r\n    public class HomeController : Controller\r\n    {\r\n        private readonly LinkGenerator _linkGenerator;\r\n        public HomeController(LinkGenerator linkGenerator)\r\n        {\r\n            _linkGenerator = linkGenerator;\r\n        }\r\n\r\n        [HttpGet(""Test"", Name = ""Test"")]\r\n        public IActionResult Test()\r\n        {\r\n            return Ok(\r\n$@""GetPathByAction: {_linkGenerator.GetPathByAction(HttpContext, ""Test"")}\r\nGetPathByName: {_linkGenerator.GetPathByName(""Test"", null)}""\r\n            );\r\n        }\r\n    }\r\n"
7084,Improve healthchecks middleware error message when services not registered\r\n\r\nError message when services not registered:\r\n\r\n```\r\nInvalidOperationException: Unable to resolve service for type 'Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckService' while attempting to activate 'Microsoft.AspNetCore.Diagnostics.HealthChecks.HealthCheckMiddleware'.\r\n```\r\n\r\nShould also get a friendly error message from `UseHealthChecks`\r\n\r\n@rynowak ,help wanted|area-healthchecks,JamesNK,"```cs\r\napp.UseRouting(routes =>\r\n{\r\n    routes.MapGet(""/"", context => context.Response.WriteAsync(""Hi Contoso!""))\r\n        .RequireHost(""contoso.com"");\r\n\r\n    routes.MapGet(""/"", context => context.Response.WriteAsync(""Hi AdventureWorks!""))\r\n        .RequireHost(""adventure-works.com"");\r\n\r\n    routes.MapHealthChecks(""/healthz"").RequireHost(""*:8080"");\r\n});\r\n\r\n```\r\n\r\nError message when services not registered:\r\n\r\n```\r\nInvalidOperationException: Unable to resolve service for type 'Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckService' while attempting to activate 'Microsoft.AspNetCore.Diagnostics.HealthChecks.HealthCheckMiddleware'.\r\n```\r\n\r\nShould also get a friendly error message from `UseHealthChecks`\r\n\r\n@rynowak ","cs\r\napp.UseRouting(routes =>\r\n{\r\n    routes.MapGet(""/"", context => context.Response.WriteAsync(""Hi Contoso!""))\r\n        .RequireHost(""contoso.com"");\r\n\r\n    routes.MapGet(""/"", context => context.Response.WriteAsync(""Hi AdventureWorks!""))\r\n        .RequireHost(""adventure-works.com"");\r\n\r\n    routes.MapHealthChecks(""/healthz"").RequireHost(""*:8080"");\r\n});\r\n\r\n"
6899,"AuthorizationMiddleware should throw friendly error when AddAuthorization and AddAuthorizationPolicyEvaluator() isn't calledI tried using endpoint routing with authorization and it was a bit un-intuitive. This is the minimum required to use authorization. Nothing told me to add those services btw, I just got errors and had to read the source code to figure it out. Is there any reason AddAuthorization doesn't call AddAuthorizationPolicyEvaluator? \r\n\r\n\r\n\r\ncc @HaoK @JamesNK ",area-middleware,JamesNK,"I tried using endpoint routing with authorization and it was a bit un-intuitive. This is the minimum required to use authorization. Nothing told me to add those services btw, I just got errors and had to read the source code to figure it out. Is there any reason AddAuthorization doesn't call AddAuthorizationPolicyEvaluator? \r\n\r\n```C#\r\nusing Microsoft.AspNetCore.Authorization;\r\nusing Microsoft.AspNetCore.Builder;\r\nusing Microsoft.AspNetCore.Hosting;\r\nusing Microsoft.Extensions.DependencyInjection;\r\n\r\nnamespace WebApplication66\r\n{\r\n    public class Startup\r\n    {\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.AddAuthorization();\r\n            services.AddAuthorizationPolicyEvaluator();\r\n        }\r\n\r\n        public void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n        {\r\n            if (env.IsDevelopment())\r\n            {\r\n                app.UseDeveloperExceptionPage();\r\n            }\r\n\r\n            app.UseAuthentication();\r\n\r\n            app.UseRouting(routes =>\r\n            {\r\n                routes.MapGet(""/"", async context =>\r\n                {\r\n                })\r\n                .RequireAuthorization(new AuthorizeAttribute());\r\n            });\r\n\r\n            app.UseAuthorization();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\ncc @HaoK @JamesNK ","C#\r\nusing Microsoft.AspNetCore.Authorization;\r\nusing Microsoft.AspNetCore.Builder;\r\nusing Microsoft.AspNetCore.Hosting;\r\nusing Microsoft.Extensions.DependencyInjection;\r\n\r\nnamespace WebApplication66\r\n{\r\n    public class Startup\r\n    {\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.AddAuthorization();\r\n            services.AddAuthorizationPolicyEvaluator();\r\n        }\r\n\r\n        public void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n        {\r\n            if (env.IsDevelopment())\r\n            {\r\n                app.UseDeveloperExceptionPage();\r\n            }\r\n\r\n            app.UseAuthentication();\r\n\r\n            app.UseRouting(routes =>\r\n            {\r\n                routes.MapGet(""/"", async context =>\r\n                {\r\n                })\r\n                .RequireAuthorization(new AuthorizeAttribute());\r\n            });\r\n\r\n            app.UseAuthorization();\r\n        }\r\n    }\r\n}\r\n"
6897,Using RequireAuthorization results in an ambiguous method compilation error### Describe the bug\r\n\r\nTrying to require authorization on an endpoint route without passing authorize data or a policy name results in a compilation error.\r\n\r\n### To Reproduce\r\n\r\n\r\n\r\n### Expected behavior\r\nIt shouldn't result in a compilation error.\r\n\r\n### Screenshots\r\n![image](https://user-images.githubusercontent.com/95136/51458737-18d57980-1d0b-11e9-9fd9-ea022eb1a547.png)\r\n\r\ncc @JamesNK @rynowak ,area-middleware,JamesNK,"### Describe the bug\r\n\r\nTrying to require authorization on an endpoint route without passing authorize data or a policy name results in a compilation error.\r\n\r\n### To Reproduce\r\n\r\n```C#\r\napp.UseRouting(routes =>\r\n{\r\n\troutes.MapApplication();\r\n\r\n\troutes.MapGet(""/"", context =>\r\n\t{\r\n\t\treturn Task.CompletedTask;\r\n\t})\r\n\t.RequireAuthorization();\r\n});\r\n```\r\n\r\n### Expected behavior\r\nIt shouldn't result in a compilation error.\r\n\r\n### Screenshots\r\n![image](https://user-images.githubusercontent.com/95136/51458737-18d57980-1d0b-11e9-9fd9-ea022eb1a547.png)\r\n\r\ncc @JamesNK @rynowak ","C#\r\napp.UseRouting(routes =>\r\n{\r\n\troutes.MapApplication();\r\n\r\n\troutes.MapGet(""/"", context =>\r\n\t{\r\n\t\treturn Task.CompletedTask;\r\n\t})\r\n\t.RequireAuthorization();\r\n});\r\n"
6880,TestHost with HTTP2 featuresRelated: https://github.com/aspnet/AspNetCore/issues/6871\r\n\r\nAttempting to use HTTP2 features in the test website with TestHost...\r\n\r\n\r\n\r\n...results in an error: `Message: System.InvalidOperationException : Trailers are not supported for this response.`\r\n\r\nThis is the first error I encountered when using HTTP2 - I'm going to see if I can work around it in the test website - but I suspect there is other issues to fix to HTTP2-erize TestHost.\r\n\r\n// @davidfowl @Tratcher ,enhancement|HTTP2|area-networking,JamesNK,"Related: https://github.com/aspnet/AspNetCore/issues/6871\r\n\r\nAttempting to use HTTP2 features in the test website with TestHost...\r\n\r\n```cs\r\nhttpContext.Response.AppendTrailer(""grpc-status"", ((int)StatusCode.OK).ToString());\r\n```\r\n\r\n...results in an error: `Message: System.InvalidOperationException : Trailers are not supported for this response.`\r\n\r\nThis is the first error I encountered when using HTTP2 - I'm going to see if I can work around it in the test website - but I suspect there is other issues to fix to HTTP2-erize TestHost.\r\n\r\n// @davidfowl @Tratcher ","cs\r\nhttpContext.Response.AppendTrailer(""grpc-status"", ((int)StatusCode.OK).ToString());\r\n"
6864,Default values for component parameters get overwritten- Create a new Razor Components app\r\n- Add a parameter to the `Counter` component with a default value of 1\r\n\r\n    \r\n\r\n- Run the app and try the Counter on the Counter page\r\n\r\nExpected result:\r\n- Counter increments\r\n\r\nActual result:\r\n- Counter doesn't increment - stays at zero\r\n- The IncrementAmount parameter was overwritten to zero\r\n\r\n,bug|Done|area-blazor,SteveSandersonMS,- Create a new Razor Components app\r\n- Add a parameter to the `Counter` component with a default value of 1\r\n\r\n    ```csharp\r\n    [Parameter] int IncrementAmount { get; set; } = 1;\r\n    void IncrementCount()\r\n    {\r\n        currentCount+=IncrementAmount;\r\n    }\r\n    ```\r\n\r\n- Run the app and try the Counter on the Counter page\r\n\r\nExpected result:\r\n- Counter increments\r\n\r\nActual result:\r\n- Counter doesn't increment - stays at zero\r\n- The IncrementAmount parameter was overwritten to zero\r\n\r\n,csharp\r\n    [Parameter] int IncrementAmount { get; set; } = 1;\r\n    void IncrementCount()\r\n    {\r\n        currentCount+=IncrementAmount;\r\n    }\r\n    
6828,"Reconsider static JSRuntime.Current`JSRuntime.Current` is misleading. People commonly write code like this:\r\n\r\n\r\n\r\nThis is fine for client-side code, but when executing on the server, which user's browser is it sending the `handleTickerChanged` call to? The developer probably thinks it's the user whose browser is rendering the component that contains this call, but that's not true. In fact, it depends on the async context in which the `OnStockTickerUpdated` event fires - maybe it's some other user who caused the event, or maybe it's nobody at all. When testing locally there's a good chance it seems to work, but the problem of sending the call to the wrong user only surfaces in production when there is more than one user.\r\n\r\nThe underlying problem is having a static `JSRuntime.Current`. If, instead, you could only acquire the `IJSRuntime` from DI, then each component would get and store the right instance for its user, and the call would always be sent to the right user. It's already possible to get the `IJSRuntime` from DI, but people don't realise that's what they should do so they continue to use `JSRuntime.Current`.\r\n\r\n**Proposal: Just remove the static `JSRuntime.Current`, so you can only get it from DI.**\r\n\r\nDrawback: in the pure client-side Blazor scenario, this complicates things for library code that doesn't necessarily have access to DI. It forces the developer to obtain the `IJSRuntime` from DI and pass it into the library somehow. However I still think this is the right thing to do, because if libraries are ever going to work in both client and server code, they have to let the developer pass the `IJSRuntime` into them.",Done|enhancement|area-blazor,pranavkm,"`JSRuntime.Current` is misleading. People commonly write code like this:\r\n\r\n```csharp\r\npublic override void OnInit()\r\n{\r\n    StocksService.OnStockTickerUpdated += stockUpdate =>\r\n    {\r\n        JSRuntime.Current.InvokeAsync<object>(\r\n            ""handleTickerChanged"", stockUpdate.symbol, stockUpdate.price);\r\n    };\r\n}\r\n```\r\n\r\nThis is fine for client-side code, but when executing on the server, which user's browser is it sending the `handleTickerChanged` call to? The developer probably thinks it's the user whose browser is rendering the component that contains this call, but that's not true. In fact, it depends on the async context in which the `OnStockTickerUpdated` event fires - maybe it's some other user who caused the event, or maybe it's nobody at all. When testing locally there's a good chance it seems to work, but the problem of sending the call to the wrong user only surfaces in production when there is more than one user.\r\n\r\nThe underlying problem is having a static `JSRuntime.Current`. If, instead, you could only acquire the `IJSRuntime` from DI, then each component would get and store the right instance for its user, and the call would always be sent to the right user. It's already possible to get the `IJSRuntime` from DI, but people don't realise that's what they should do so they continue to use `JSRuntime.Current`.\r\n\r\n**Proposal: Just remove the static `JSRuntime.Current`, so you can only get it from DI.**\r\n\r\nDrawback: in the pure client-side Blazor scenario, this complicates things for library code that doesn't necessarily have access to DI. It forces the developer to obtain the `IJSRuntime` from DI and pass it into the library somehow. However I still think this is the right thing to do, because if libraries are ever going to work in both client and server code, they have to let the developer pass the `IJSRuntime` into them.","csharp\r\npublic override void OnInit()\r\n{\r\n    StocksService.OnStockTickerUpdated += stockUpdate =>\r\n    {\r\n        JSRuntime.Current.InvokeAsync<object>(\r\n            ""handleTickerChanged"", stockUpdate.symbol, stockUpdate.price);\r\n    };\r\n}\r\n"
6668,"Blazor: System.DllNotFoundException: MonoPosixHelper### Describe the bug\r\nI am developing a small app with blazor where a 3rd party ([ExcelDataReader](https://github.com/ExcelDataReader/ExcelDataReader) - [Nuget page](https://www.nuget.org/packages/ExcelDataReader/)) library have to decompress a zip file in memory. I encountered an error and I managed to reduce the problem to 2 lines of codes (see below).\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of Blazor 0.7.0\r\n2. Run this code: A simple Blazor page with an overrided OnInitAsync with the following code:\r\n\r\n\r\n\r\nwill result in the following exception being thrown:\r\n\r\n```\r\nSystem.DllNotFoundException: MonoPosixHelper\r\nat (wrapper managed-to-native) System.IO.Compression.DeflateStreamNative.CreateZStream(System.IO.Compression.CompressionMode,bool,System.IO.Compression.DeflateStreamNative/UnmanagedReadOrWrite,intptr)\r\nat System.IO.Compression.DeflateStreamNative.Create (System.IO.Stream compressedStream, System.IO.Compression.CompressionMode mode, System.Boolean gzip) <0x1ff7158 + 0x00088> in <7c5c7bfffd57465d85cd5b632c22c41b>:0\r\nat System.IO.Compression.DeflateStream..ctor (System.IO.Stream compressedStream, System.IO.Compression.CompressionMode mode, System.Boolean leaveOpen, System.Boolean gzip) <0x1ff3890 + 0x0006e> in <7c5c7bfffd57465d85cd5b632c22c41b>:0\r\nat System.IO.Compression.DeflateStream..ctor (System.IO.Stream stream, System.IO.Compression.CompressionMode mode) <0x1ff3780 + 0x0001c> in <7c5c7bfffd57465d85cd5b632c22c41b>:0\r\nat BlazorApp1.Pages.Index.OnInitAsync () <0x1ff3350 + 0x00030> in <9934c1196e1f4be5a4cb948658302568>:0 \r\n```\r\n\r\n### Expected behavior\r\nNo exception and no dependencies to a native dll.\r\n\r\n### Additional context\r\n```\r\n$ dotnet --info\r\nSDK .NET Core (refl\xe9tant tous les global.json) :\r\n Version:   2.1.502\r\n Commit:    c74ce8f29f\r\n\r\nEnvironnement d'ex\xe9cution :\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.502\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.6\r\n  Commit:  3f4f8eebd8\r\n\r\n.NET Core SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nmy csproj file\r\n\r\n```xml\r\n<Project Sdk=""Microsoft.NET.Sdk.Web"">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n    <RunCommand>dotnet</RunCommand>\r\n    <RunArguments>blazor serve</RunArguments>\r\n    <LangVersion>7.3</LangVersion>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=""Microsoft.AspNetCore.Blazor.Browser"" Version=""0.7.0"" />\r\n    <PackageReference Include=""Microsoft.AspNetCore.Blazor.Build"" Version=""0.7.0"" PrivateAssets=""all"" />\r\n    <PackageReference Include=""ExcelDataReader"" Version=""3.4.2"" />\r\n    <PackageReference Include=""System.Text.Encoding.CodePages"" Version=""4.5.1"" />\r\n    <DotNetCliToolReference Include=""Microsoft.AspNetCore.Blazor.Cli"" Version=""0.7.0"" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```",investigate|area-mvc,SteveSandersonMS,"### Describe the bug\r\nI am developing a small app with blazor where a 3rd party ([ExcelDataReader](https://github.com/ExcelDataReader/ExcelDataReader) - [Nuget page](https://www.nuget.org/packages/ExcelDataReader/)) library have to decompress a zip file in memory. I encountered an error and I managed to reduce the problem to 2 lines of codes (see below).\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of Blazor 0.7.0\r\n2. Run this code: A simple Blazor page with an overrided OnInitAsync with the following code:\r\n\r\n```cs\r\nprotected override async Task OnInitAsync()\r\n{\r\n    var stream = new System.IO.MemoryStream();\r\n\r\n    DeflateStream compressionStream = \r\n        new System.IO.Compression.DeflateStream(stream, CompressionMode.Compress);\r\n}\r\n```\r\n\r\nwill result in the following exception being thrown:\r\n\r\n```\r\nSystem.DllNotFoundException: MonoPosixHelper\r\nat (wrapper managed-to-native) System.IO.Compression.DeflateStreamNative.CreateZStream(System.IO.Compression.CompressionMode,bool,System.IO.Compression.DeflateStreamNative/UnmanagedReadOrWrite,intptr)\r\nat System.IO.Compression.DeflateStreamNative.Create (System.IO.Stream compressedStream, System.IO.Compression.CompressionMode mode, System.Boolean gzip) <0x1ff7158 + 0x00088> in <7c5c7bfffd57465d85cd5b632c22c41b>:0\r\nat System.IO.Compression.DeflateStream..ctor (System.IO.Stream compressedStream, System.IO.Compression.CompressionMode mode, System.Boolean leaveOpen, System.Boolean gzip) <0x1ff3890 + 0x0006e> in <7c5c7bfffd57465d85cd5b632c22c41b>:0\r\nat System.IO.Compression.DeflateStream..ctor (System.IO.Stream stream, System.IO.Compression.CompressionMode mode) <0x1ff3780 + 0x0001c> in <7c5c7bfffd57465d85cd5b632c22c41b>:0\r\nat BlazorApp1.Pages.Index.OnInitAsync () <0x1ff3350 + 0x00030> in <9934c1196e1f4be5a4cb948658302568>:0 \r\n```\r\n\r\n### Expected behavior\r\nNo exception and no dependencies to a native dll.\r\n\r\n### Additional context\r\n```\r\n$ dotnet --info\r\nSDK .NET Core (refl\xe9tant tous les global.json) :\r\n Version:   2.1.502\r\n Commit:    c74ce8f29f\r\n\r\nEnvironnement d'ex\xe9cution :\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.502\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.6\r\n  Commit:  3f4f8eebd8\r\n\r\n.NET Core SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nmy csproj file\r\n\r\n```xml\r\n<Project Sdk=""Microsoft.NET.Sdk.Web"">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n    <RunCommand>dotnet</RunCommand>\r\n    <RunArguments>blazor serve</RunArguments>\r\n    <LangVersion>7.3</LangVersion>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=""Microsoft.AspNetCore.Blazor.Browser"" Version=""0.7.0"" />\r\n    <PackageReference Include=""Microsoft.AspNetCore.Blazor.Build"" Version=""0.7.0"" PrivateAssets=""all"" />\r\n    <PackageReference Include=""ExcelDataReader"" Version=""3.4.2"" />\r\n    <PackageReference Include=""System.Text.Encoding.CodePages"" Version=""4.5.1"" />\r\n    <DotNetCliToolReference Include=""Microsoft.AspNetCore.Blazor.Cli"" Version=""0.7.0"" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```","cs\r\nprotected override async Task OnInitAsync()\r\n{\r\n    var stream = new System.IO.MemoryStream();\r\n\r\n    DeflateStream compressionStream = \r\n        new System.IO.Compression.DeflateStream(stream, CompressionMode.Compress);\r\n}\r\n"
6665,"AspNetCore 2.2 Web API Backward Compatibility broken when dealing with Nullable ValuesPreviously web api endpoints taking Nullable<value> parameters worked when called with explicit ""null"" from client's. eg.\r\n/api/Values/test/asdf=null or /api/Values/test/null\r\n\r\nWith AspNetCore 2.2 and the use of the new ApiController attribute. We started getting the error:\r\n{""errors"":{""asdf"":[""The value 'null' is not valid.""]},""title"":""One or more validation errors occurred."",""status"":400,""traceId"":""80000008-0002-d200-b63f-84710c7967bb""}\r\n\r\nTo reproduce:\r\n1) Create new web api net core 2.2 project. Using the VS 2017 project template.\r\n2) Add this endpoint.\r\n\r\n3) Run web api.\r\n4) use route /api/values/test?asdf=null\r\n5) error occurs\r\n\r\nWhat does work is:\r\n/api/values/test?asdf=1\r\n/api/values/test   - which sets asdf to default(int?) which is null.\r\n\r\nExpected behavior is that no error occurs and asdf is null within the scope of the method.\r\n\r\nWork around that defeats some of the purpose, but removes the error in this case. Add SuppressModelStateInvalidFilter code to ConfigureServices.\r\n```csharp\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_2)\r\n               .ConfigureApiBehaviorOptions(o => { o.SuppressModelStateInvalidFilter = true; });\r\n            \r\n        }\r\n",:heavy_check_mark: Resolution: By Design|area-mvc,pranavkm,"Previously web api endpoints taking Nullable<value> parameters worked when called with explicit ""null"" from client's. eg.\r\n/api/Values/test/asdf=null or /api/Values/test/null\r\n\r\nWith AspNetCore 2.2 and the use of the new ApiController attribute. We started getting the error:\r\n{""errors"":{""asdf"":[""The value 'null' is not valid.""]},""title"":""One or more validation errors occurred."",""status"":400,""traceId"":""80000008-0002-d200-b63f-84710c7967bb""}\r\n\r\nTo reproduce:\r\n1) Create new web api net core 2.2 project. Using the VS 2017 project template.\r\n2) Add this endpoint.\r\n```C#\r\n        [HttpGet]\r\n        [Route(""test"")]\r\n        public ActionResult<string> GetTest(int? asdf)\r\n        {\r\n            return ""value"";\r\n        }\r\n```\r\n3) Run web api.\r\n4) use route /api/values/test?asdf=null\r\n5) error occurs\r\n\r\nWhat does work is:\r\n/api/values/test?asdf=1\r\n/api/values/test   - which sets asdf to default(int?) which is null.\r\n\r\nExpected behavior is that no error occurs and asdf is null within the scope of the method.\r\n\r\nWork around that defeats some of the purpose, but removes the error in this case. Add SuppressModelStateInvalidFilter code to ConfigureServices.\r\n```csharp\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_2)\r\n               .ConfigureApiBehaviorOptions(o => { o.SuppressModelStateInvalidFilter = true; });\r\n            \r\n        }\r\n","C#\r\n        [HttpGet]\r\n        [Route(""test"")]\r\n        public ActionResult<string> GetTest(int? asdf)\r\n        {\r\n            return ""value"";\r\n        }\r\n"
6610,"Inconsistency in index.html in Blazor templateHere is a partial listing from index.html file generated by VS template (Blazor 0.7.0)\r\n\r\nFor consistency second `meta` element should have `/>` at the end.\r\n\r\nOn the other hand in HTML meta, base and link tags don't have end tags. They have to be properly closed only in XHTML. Do we need XHTML compatibility in Blazor?",Done|area-blazor,danroth27,"Here is a partial listing from index.html file generated by VS template (Blazor 0.7.0)\r\n```html\r\n<head>\r\n    <meta charset=""utf-8"" />\r\n    <meta name=""viewport"" content=""width=device-width"">\r\n    <title>temptest</title>\r\n    <base href=""/"" />\r\n    <link href=""css/bootstrap/bootstrap.min.css"" rel=""stylesheet"" />\r\n    <link href=""css/site.css"" rel=""stylesheet"" />\r\n</head>\r\n```\r\nFor consistency second `meta` element should have `/>` at the end.\r\n\r\nOn the other hand in HTML meta, base and link tags don't have end tags. They have to be properly closed only in XHTML. Do we need XHTML compatibility in Blazor?","html\r\n<head>\r\n    <meta charset=""utf-8"" />\r\n    <meta name=""viewport"" content=""width=device-width"">\r\n    <title>temptest</title>\r\n    <base href=""/"" />\r\n    <link href=""css/bootstrap/bootstrap.min.css"" rel=""stylesheet"" />\r\n    <link href=""css/site.css"" rel=""stylesheet"" />\r\n</head>\r\n"
6480,"New Razor SDK breaks CSS classes in static markupTo repro, add the following unit test to `ComponentRenderingRazorIntegrationTest.cs`:\r\n\r\n\r\n\r\nFails with:\r\n\r\n```\r\nExpected: <div class=""first second"">Hello</div>\r\nActual:   <div class=""firstsecond"">Hello</div>\r\n```\r\n\r\nI'm sure the fix is pretty trivial, but it would be great to handle soon as it will break all apps (e.g., it does break the layout in the stock template).\r\n\r\n## Main source file (component):\r\n```\r\n<div class=""first second"">Hello</div>\r\n```\r\n\r\n## Generated C#:\r\n",bug|Done|area-blazor,rynowak,"To repro, add the following unit test to `ComponentRenderingRazorIntegrationTest.cs`:\r\n\r\n```csharp\r\n[Fact]\r\npublic void Render_Component_StaticHtml()\r\n{\r\n    // Arrange\r\n    var component = CompileToComponent(@""<div class=""""first second"""">Hello</div>"");\r\n\r\n    // Act\r\n    var frames = GetRenderTree(component);\r\n\r\n    // Assert\r\n    Assert.Collection(\r\n        frames,\r\n        frame => AssertFrame.Markup(frame, @""<div class=""""first second"""">Hello</div>""));\r\n}\r\n```\r\n\r\nFails with:\r\n\r\n```\r\nExpected: <div class=""first second"">Hello</div>\r\nActual:   <div class=""firstsecond"">Hello</div>\r\n```\r\n\r\nI'm sure the fix is pretty trivial, but it would be great to handle soon as it will break all apps (e.g., it does break the layout in the stock template).\r\n\r\n## Main source file (component):\r\n```\r\n<div class=""first second"">Hello</div>\r\n```\r\n\r\n## Generated C#:\r\n```C#\r\n// <auto-generated/>\r\n#pragma warning disable 1591\r\nnamespace Test\r\n{\r\n    #line hidden\r\n    using System;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using System.Threading.Tasks;\r\n    using Microsoft.AspNetCore.Components;\r\n    public class TestComponent : Microsoft.AspNetCore.Components.ComponentBase\r\n    {\r\n        #pragma warning disable 1998\r\n        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder)\r\n        {\r\n            base.BuildRenderTree(builder);\r\n            builder.AddMarkupContent(0, ""<div class=\\""firstsecond\\"">Hello</div>"");\r\n        }\r\n        #pragma warning restore 1998\r\n    }\r\n}\r\n#pragma warning restore 1591\r\n\r\n```","csharp\r\n[Fact]\r\npublic void Render_Component_StaticHtml()\r\n{\r\n    // Arrange\r\n    var component = CompileToComponent(@""<div class=""""first second"""">Hello</div>"");\r\n\r\n    // Act\r\n    var frames = GetRenderTree(component);\r\n\r\n    // Assert\r\n    Assert.Collection(\r\n        frames,\r\n        frame => AssertFrame.Markup(frame, @""<div class=""""first second"""">Hello</div>""));\r\n}\r\n"
6474,"Blazor debug server cannot get assemblies because their names are lower-cased with current culture.When I try start debugging a blazor app in chrome  on windows with culture tr-TR, I get the following 404 error:\r\n![blazor-debug](https://user-images.githubusercontent.com/6473521/50812672-b18bf280-1324-11e9-9589-c855e8dfb6c9.jpg)\r\nCapital I is different when lower-cased in Turkish. Trying to get _microsoft.extensions.dependency\u0131njection.dll_ \r\nDebugStore ctor calls ToLower here :\r\n\r\n\r\n ",bug|area-mvc,SteveSandersonMS,"When I try start debugging a blazor app in chrome  on windows with culture tr-TR, I get the following 404 error:\r\n![blazor-debug](https://user-images.githubusercontent.com/6473521/50812672-b18bf280-1324-11e9-9589-c855e8dfb6c9.jpg)\r\nCapital I is different when lower-cased in Turkish. Trying to get _microsoft.extensions.dependency\u0131njection.dll_ \r\nDebugStore ctor calls ToLower here :\r\n```c#\r\nforeach (var f in loaded_files) {\r\n\tvar file_name = f.ToLower ();\r\n\tif (file_name.EndsWith ("".pdb"", StringComparison.Ordinal))\r\n\t\tpdb_files.Add (file_name);\r\n\telse\r\n\t\tasm_files.Add (file_name);\r\n}\r\n```\r\n\r\n ","c#\r\nforeach (var f in loaded_files) {\r\n\tvar file_name = f.ToLower ();\r\n\tif (file_name.EndsWith ("".pdb"", StringComparison.Ordinal))\r\n\t\tpdb_files.Add (file_name);\r\n\telse\r\n\t\tasm_files.Add (file_name);\r\n}\r\n"
6473,"TestServer hangs on CentOS 7 ### Describe the bug\r\n\r\nTestServer hangs on CentOS 7 .\r\n\r\n### To Reproduce\r\n\r\nI've created [a minimal repo here](https://github.com/newbienewbie/TestServerHangsOnCentOSTestDemo).\r\n\r\nSuppose we have a plain Razor library called `XLib`,  we create a  xunit test project for it called `XLib.Test` and also a sample web app called `XLib.Sample`:\r\n\r\n* `XLib` : a Razor class library project\r\n* `XLib.Sample` : a sample web app that references the `XLib`\r\n* `XLib.Test` : the xunit test project that references the `XLib`  project (for unit test) and `XLib.Sample` project (for integration test)\r\n\r\nThe code of `IntegrationTest` : \r\n\r\n\r\n\r\n\r\n\r\nThe test succeeds on `Microsoft Windows 10 Enterprise (Version\t10.0.17134 Build 17134)`, and then terminates as expected : \r\n```\r\nTpTrace Verbose: 0 : 49644, 8, 2019/01/08, 13:37:42.512, 14945980259794, vstest.console.dll, TestRequestSender.EndSession: Sending end session.\r\nTpTrace Warning: 0 : 49644, 10, 2019/01/08, 13:37:42.532, 14945980330270, vstest.console.dll, TestHostManagerCallbacks.ErrorReceivedCallback Test host standard error line: \r\nTpTrace Information: 0 : 49644, 7, 2019/01/08, 13:37:42.558, 14945980421978, vstest.console.dll, TestHostManagerCallbacks.ExitCallBack: Testhost processId: 43044 exited with exitcode: 0 error: ''\r\nTpTrace Information: 0 : 49644, 7, 2019/01/08, 13:37:42.559, 14945980422495, vstest.console.dll, TestRequestSender.OnClientProcessExit: Test host process exited. Standard error: \r\nTpTrace Information: 0 : 49644, 7, 2019/01/08, 13:37:42.559, 14945980422780, vstest.console.dll, SocketServer.Stop: Stop server endPoint: 127.0.0.1:50791\r\nTpTrace Information: 0 : 49644, 7, 2019/01/08, 13:37:42.559, 14945980423010, vstest.console.dll, SocketServer.Stop: Cancellation requested. Stopping message loop.\r\nTpTrace Warning: 0 : 49644, 8, 2019/01/08, 13:37:42.559, 14945980423304, vstest.console.dll, ProxyOperationManager: Timed out waiting for test host to exit. Will terminate process.\r\nTpTrace Verbose: 0 : 49644, 8, 2019/01/08, 13:37:42.594, 14945980546736, vstest.console.dll, TestRunRequest:SendTestRunStatsChange: Starting.\r\nTpTrace Information: 0 : 49644, 8, 2019/01/08, 13:37:42.594, 14945980547977, vstest.console.dll, TestRunRequest:SendTestRunStatsChange: Completed.\r\nTpTrace Verbose: 0 : 49644, 8, 2019/01/08, 13:37:42.595, 14945980549112, vstest.console.dll, ParallelProxyExecutionManager: HandlePartialRunComplete: Total completed clients = 1, Run complete = True, Run canceled: False.\r\nTpTrace Verbose: 0 : 49644, 8, 2019/01/08, 13:37:42.606, 14945980589535, vstest.console.dll, TestRunRequest:TestRunComplete: Starting. IsAborted:False IsCanceled:False.\r\nTpTrace Verbose: 0 : 49644, 8, 2019/01/08, 13:37:42.606, 14945980590271, vstest.console.dll, TestLoggerManager.HandleTestRunComplete: Ignoring as the object is disposed.\r\nTpTrace Information: 0 : 49644, 8, 2019/01/08, 13:37:42.607, 14945980591226, vstest.console.dll, TestRunRequest:TestRunComplete: Completed.\r\nTpTrace Verbose: 0 : 49644, 1, 2019/01/08, 13:37:42.607, 14945980591313, vstest.console.dll, TestRunRequest.Dispose: Starting.\r\n...\r\n```\r\n\r\nHowever,  if run command : `dotnet test -d x.log` on `CentOS 7`,  it hangs  even if the integrations test succeeds : \r\n\r\n> Starting test execution, please wait...\r\n> Logging Vstest Diagnostics in file: /root/TestServerHangDemo/XLib.Test/x.log\r\n\r\n\r\nthe x.log shows the the timeout is 90000\r\n\r\n```\r\nTestRequestSender.WaitForRequestHandlerConnection: waiting for connection with timeout: 90000\r\n```\r\n\r\nWhen the test completed, the `TestServer` still hangs  ( I guess that it will last for 15mins) : \r\n````\r\nTpTrace Verbose: 0 : 28002, 9, 2019/01/08, 12:56:32.918, 8312768037059225, vstest.console.dll, TcpClientExtensions.MessageLoopAsync: Polling on remoteEndPoint: 127.0.0.1:33231 localEndPoint: 127.0.0.1:34557\r\nTpTrace Verbose: 0 : 28002, 9, 2019/01/08, 12:56:33.919, 8312769038373672, vstest.console.dll, TcpClientExtensions.MessageLoopAsync: Polling on remoteEndPoint: 127.0.0.1:33231 localEndPoint: 127.0.0.1:34557\r\nTpTrace Verbose: 0 : 28002, 9, 2019/01/08, 12:56:34.921, 8312770039637413, vstest.console.dll, TcpClientExtensions.MessageLoopAsync: Polling on remoteEndPoint: 127.0.0.1:33231 localEndPoint: 127.0.0.1:34557\r\nTpTrace Verbose: 0 : 28002, 9, 2019/01/08, 12:56:35.922, 8312771040933455, vstest.console.dll, TcpClientExtensions.MessageLoopAsync: Polling on remoteEndPoint: 127.0.0.1:33231 localEndPoint: 127.0.0.1:34557\r\n````\r\n\r\n\r\n### Expected behavior\r\n\r\nThis test running on `CentOS7` should also terminates as it does on `Win10` .\r\n\r\n### Additional context\r\n\r\nthe `dotnet --info`\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     centos\r\n OS Version:  7\r\n OS Platform: Linux\r\n RID:         centos.7-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.2.100/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.500 [/usr/share/dotnet/sdk]\r\n  2.2.100 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n",investigate|area-mvc,javiercn,"### Describe the bug\r\n\r\nTestServer hangs on CentOS 7 .\r\n\r\n### To Reproduce\r\n\r\nI've created [a minimal repo here](https://github.com/newbienewbie/TestServerHangsOnCentOSTestDemo).\r\n\r\nSuppose we have a plain Razor library called `XLib`,  we create a  xunit test project for it called `XLib.Test` and also a sample web app called `XLib.Sample`:\r\n\r\n* `XLib` : a Razor class library project\r\n* `XLib.Sample` : a sample web app that references the `XLib`\r\n* `XLib.Test` : the xunit test project that references the `XLib`  project (for unit test) and `XLib.Sample` project (for integration test)\r\n\r\nThe code of `IntegrationTest` : \r\n\r\n```csharp\r\n    public class IntegrationTest\r\n    {\r\n        private IConfigurationRoot _config;\r\n\r\n        public IntegrationTest() {\r\n            var p = Path.GetDirectoryName((typeof(XLib.Sample.Startup).Assembly.Location));\r\n            this._config= new ConfigurationBuilder()\r\n                .SetBasePath(p)\r\n                .AddJsonFile(""appsettings.json"")\r\n                .Build();\r\n        }\r\n\r\n        [Fact]\r\n        public void Test2()\r\n        {\r\n            var hb = new WebHostBuilder()\r\n                .UseConfiguration(this._config)\r\n                .UseStartup<XLib.Sample.Startup>()\r\n                ;\r\n            using(var _testServer= new TestServer(hb))\r\n            using(var _client = _testServer.CreateClient())\r\n            {\r\n                var resp = _client.GetAsync(""/home/index"").Result;\r\n                Assert.Equal(HttpStatusCode.OK, resp.StatusCode);\r\n            }\r\n        }\r\n\r\n    }\r\n```\r\n\r\n\r\n\r\nThe test succeeds on `Microsoft Windows 10 Enterprise (Version\t10.0.17134 Build 17134)`, and then terminates as expected : \r\n```\r\nTpTrace Verbose: 0 : 49644, 8, 2019/01/08, 13:37:42.512, 14945980259794, vstest.console.dll, TestRequestSender.EndSession: Sending end session.\r\nTpTrace Warning: 0 : 49644, 10, 2019/01/08, 13:37:42.532, 14945980330270, vstest.console.dll, TestHostManagerCallbacks.ErrorReceivedCallback Test host standard error line: \r\nTpTrace Information: 0 : 49644, 7, 2019/01/08, 13:37:42.558, 14945980421978, vstest.console.dll, TestHostManagerCallbacks.ExitCallBack: Testhost processId: 43044 exited with exitcode: 0 error: ''\r\nTpTrace Information: 0 : 49644, 7, 2019/01/08, 13:37:42.559, 14945980422495, vstest.console.dll, TestRequestSender.OnClientProcessExit: Test host process exited. Standard error: \r\nTpTrace Information: 0 : 49644, 7, 2019/01/08, 13:37:42.559, 14945980422780, vstest.console.dll, SocketServer.Stop: Stop server endPoint: 127.0.0.1:50791\r\nTpTrace Information: 0 : 49644, 7, 2019/01/08, 13:37:42.559, 14945980423010, vstest.console.dll, SocketServer.Stop: Cancellation requested. Stopping message loop.\r\nTpTrace Warning: 0 : 49644, 8, 2019/01/08, 13:37:42.559, 14945980423304, vstest.console.dll, ProxyOperationManager: Timed out waiting for test host to exit. Will terminate process.\r\nTpTrace Verbose: 0 : 49644, 8, 2019/01/08, 13:37:42.594, 14945980546736, vstest.console.dll, TestRunRequest:SendTestRunStatsChange: Starting.\r\nTpTrace Information: 0 : 49644, 8, 2019/01/08, 13:37:42.594, 14945980547977, vstest.console.dll, TestRunRequest:SendTestRunStatsChange: Completed.\r\nTpTrace Verbose: 0 : 49644, 8, 2019/01/08, 13:37:42.595, 14945980549112, vstest.console.dll, ParallelProxyExecutionManager: HandlePartialRunComplete: Total completed clients = 1, Run complete = True, Run canceled: False.\r\nTpTrace Verbose: 0 : 49644, 8, 2019/01/08, 13:37:42.606, 14945980589535, vstest.console.dll, TestRunRequest:TestRunComplete: Starting. IsAborted:False IsCanceled:False.\r\nTpTrace Verbose: 0 : 49644, 8, 2019/01/08, 13:37:42.606, 14945980590271, vstest.console.dll, TestLoggerManager.HandleTestRunComplete: Ignoring as the object is disposed.\r\nTpTrace Information: 0 : 49644, 8, 2019/01/08, 13:37:42.607, 14945980591226, vstest.console.dll, TestRunRequest:TestRunComplete: Completed.\r\nTpTrace Verbose: 0 : 49644, 1, 2019/01/08, 13:37:42.607, 14945980591313, vstest.console.dll, TestRunRequest.Dispose: Starting.\r\n...\r\n```\r\n\r\nHowever,  if run command : `dotnet test -d x.log` on `CentOS 7`,  it hangs  even if the integrations test succeeds : \r\n\r\n> Starting test execution, please wait...\r\n> Logging Vstest Diagnostics in file: /root/TestServerHangDemo/XLib.Test/x.log\r\n\r\n\r\nthe x.log shows the the timeout is 90000\r\n\r\n```\r\nTestRequestSender.WaitForRequestHandlerConnection: waiting for connection with timeout: 90000\r\n```\r\n\r\nWhen the test completed, the `TestServer` still hangs  ( I guess that it will last for 15mins) : \r\n````\r\nTpTrace Verbose: 0 : 28002, 9, 2019/01/08, 12:56:32.918, 8312768037059225, vstest.console.dll, TcpClientExtensions.MessageLoopAsync: Polling on remoteEndPoint: 127.0.0.1:33231 localEndPoint: 127.0.0.1:34557\r\nTpTrace Verbose: 0 : 28002, 9, 2019/01/08, 12:56:33.919, 8312769038373672, vstest.console.dll, TcpClientExtensions.MessageLoopAsync: Polling on remoteEndPoint: 127.0.0.1:33231 localEndPoint: 127.0.0.1:34557\r\nTpTrace Verbose: 0 : 28002, 9, 2019/01/08, 12:56:34.921, 8312770039637413, vstest.console.dll, TcpClientExtensions.MessageLoopAsync: Polling on remoteEndPoint: 127.0.0.1:33231 localEndPoint: 127.0.0.1:34557\r\nTpTrace Verbose: 0 : 28002, 9, 2019/01/08, 12:56:35.922, 8312771040933455, vstest.console.dll, TcpClientExtensions.MessageLoopAsync: Polling on remoteEndPoint: 127.0.0.1:33231 localEndPoint: 127.0.0.1:34557\r\n````\r\n\r\n\r\n### Expected behavior\r\n\r\nThis test running on `CentOS7` should also terminates as it does on `Win10` .\r\n\r\n### Additional context\r\n\r\nthe `dotnet --info`\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     centos\r\n OS Version:  7\r\n OS Platform: Linux\r\n RID:         centos.7-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.2.100/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.500 [/usr/share/dotnet/sdk]\r\n  2.2.100 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n","csharp\r\n    public class IntegrationTest\r\n    {\r\n        private IConfigurationRoot _config;\r\n\r\n        public IntegrationTest() {\r\n            var p = Path.GetDirectoryName((typeof(XLib.Sample.Startup).Assembly.Location));\r\n            this._config= new ConfigurationBuilder()\r\n                .SetBasePath(p)\r\n                .AddJsonFile(""appsettings.json"")\r\n                .Build();\r\n        }\r\n\r\n        [Fact]\r\n        public void Test2()\r\n        {\r\n            var hb = new WebHostBuilder()\r\n                .UseConfiguration(this._config)\r\n                .UseStartup<XLib.Sample.Startup>()\r\n                ;\r\n            using(var _testServer= new TestServer(hb))\r\n            using(var _client = _testServer.CreateClient())\r\n            {\r\n                var resp = _client.GetAsync(""/home/index"").Result;\r\n                Assert.Equal(HttpStatusCode.OK, resp.StatusCode);\r\n            }\r\n        }\r\n\r\n    }\r\n"
6351,"EventCallback: Updates to Event Handling and Binding# Summary\r\n\r\nIn ASP.NET Core 3.0.0-preview3/Blazor-0.9 we're making a big set of changes to how event routing works in Components. Powering this is a new feature called `EventCallback` that every Components user will want to learn about. If you've ever had to add a manual `StatehasChanged` to get rendering to occur properly then these are changes you will probably be interested in.\r\n\r\n## What's changing\r\n\r\nEvent Handlers and `bind-...` are having their *event routing* improved to be more intuitive. Consider the following components:\r\n\r\n\r\n\r\nIf you've been using Components so far, you would expect that when you click the button, the `MyButton` component will re-render after the `UsesMyButton.ShowSecretMessage` method is called. We call this behaviour *event routing*. When the `onclick` event fires in the browser, the rendering process will notify the `MyButton` component that an event occured, and (by default) `MyButton` will re-render. `UsesMyButton` *does not* re-render because it was never notified about the event. The correct way to describe *event routing* in previous releases is to say that events are routed to the component that registered them. \r\n\r\nIf you wanted `UsesMyButton` to *also* re-render then you would have to insert a manual call to `StateHasChanged()`. Here's the corrected method:\r\n\r\n\r\n\r\nThere are a few more common cases where this could occur, but they can all be generalized under the statement:\r\n\r\n> You need to call `StateHasChanged` if a child component is going to call your method.\r\n\r\n-------\r\n\r\nWell not anymore. \r\n\r\nWe're making some changes that are going to make this *just work* for all of the common cases. Instead of routing events to the component that registered the event, we are going to route them based on the *delegate target*.\r\n\r\nThis seems kind of esoteric at first, but we can simplify it a bit. Delegates (lambdas, converted from methods) all have a `.Target` [property](https://docs.microsoft.com/en-us/dotnet/api/system.delegate.target?view=netframework-4.7.2).\r\n\r\nThe official docs describe it as: \r\n\r\n> The object on which the current delegate invokes the instance method, if the delegate represents an instance method; null if the delegate represents a static method.\r\n\r\nSo if you pass an *instance method* (like `ShowSecretMessage`) it means that the event will be now routed to `UsesButtonComponent`. This is inuitive because the whole purpose of an event handler is change the state of something. Now the event will be routed to the component whose state changed. With the updated *event routing* behavior the previous example will *just work*.\r\n\r\nWhat about a lambda? Well lambdas have a `.Target` as well. Usually what happens in a lamdba that changes a component's state is that you will *close over* the current component. The compiler adds a hidden instance method to the component class, and when the delegate object is created, its `.Target` will refer to the component. *There are some cases where this doesn't happen, and that will be explained further later*.\r\n\r\nSo we could also write `UsesMyButton` like the following, and it will *just work* with the new *event routing*.\r\n\r\n\r\n\r\n## Another problem\r\n\r\nHowever if you wrote `UsesMyButton` like the following, you'd have a problem.\r\n\r\n\r\n\r\nNow the lambda is a full *closure* because it *closes over* the `message` variable. The `.Target` property won't be the `MyButton` but will instead by an instance of a generated class. So when the button is clicked, there's nowhere to route the event.\r\n\r\nWe have a solution for this too. \r\n\r\nIntroducing `EventCallback`... We're adding a new basic building block to the Components programming model. `EventCallback` is a new value type that wraps a delegate and attempts to smooth over several of the problems that are common using delegates between components.\r\n\r\nHere's the same sample with an `EventCallback<UIMouseEventArgs>`.\r\n\r\n\r\n\r\nNotice the only code change here is that we changed `Action<UIMouseEventArgs>` to `EventCallback<UIMouseEventArgs>`. However, we've now solved the problem with *event routing*. The compiler has built-in support for converting a delegate to an `EventCallback`, and will do some other things to make sure that the rendering process has enough information to dispatch the event properly.\r\n\r\nThe generated code for this looks like:\r\n\r\n\r\nSo the `EventCallback` is always created with a reference to the component that created it. We also do some optimizations to try and limit the amount of allocations this creates (`EventCallback` is a struct, but will be boxed in some cases).\r\n\r\nFrom the point of view of `MyButton` - it gets a value of `EventCallback<>` and passes that off to the `onclick` event handler. Event handlers in Components now understand `EventCallback<>` as well as delegates. The experience for using `EventCallback` should be smooth at this point. You can use it in place of an `Action` for event handlers and `bind-...`. \r\n\r\nThe event handling infrastructue still understands delegates. So if you wrote C# code that uses the `RenderTreeBuilder` directly, it will still work. Using C# to program against new component code that exposes `EventCallback` as a parameter will need to use `EventCallback.Factory` to create values.\r\n\r\n## Adapting delegate types\r\n\r\nAnother feature of `EventCallback` is that it provides much better support for flexibility with delegates than we had before. Remember `MyButton`?\r\n\r\n\r\n\r\nThe author of `MyButton` made a choice that `OnClick` has to be a synchronous method that accepts a `UIMouseEventArgs` as an argument. Using basic delegates it's not possible to assign a `Func<UIMouseEventArgs, Task>` or an `Action` to this because the types are incompatible. If you *need* to do async work in this situation, your only option is `async void`.\r\n\r\nWe don't like `async void` as much as an option because it requires manual error handling - and we've tried to make error handling more predictable as well during this release. \r\n\r\nFortunately, using `EventCallback<T>` allows us to solve this problem as well. The set of overloads on `EventCallback.Factory` enables to convert a bunch of different delegate types to work transparently, and the compiler is smart enough to call `EventCallback.Factory` for you in a `.razor` file. \r\n\r\nDoing the following will now *just work* - with proper error handling.\r\n\r\n\r\n\r\n## Invoking EventCallback manually\r\n\r\nYou can invoke an `EventCallback` like: `await callback.InvokeAsync(arg)`. \r\n\r\nYes, `EventCallback` and `EventCallback<>` are async.  We think that this will work well, because it's now *much easier* to use async thanks to the other improvements we made in this area. `EventCallback<>` is strongly typed and requires a specific argument type to invoke. `EventCallback` is weakly-typed and will allow any argument type.  \r\n\r\n## TLDR Migration Guidance\r\n\r\nWe recommend using `EventCallback` and `EventCallback<T>` when you define component parameters for event handling and binding. The only place you can't use these new types is for child content - those should still be `RenderFragment` or `RenderFragment<>`.\r\n\r\nPrefer `EventCallback<>` where possible because it's strongly typed and will provide better feedback to users of your component. Use `EventCallback` when there's no value you will pass to the callback.\r\n\r\nRemember, consumers don't have to write different code when using a component because of `EventCallback`. It should be very un-impactful to adopt this, and hopefully you find that it resolves a few thorny problems and makes the experience better for you. As with all things we welcome your feedback, especially code samples of things that are hard or don't work well. \r\n\r\n## Known issues\r\n\r\nOne known issue is that we had to **weaken** the compiler's enforcement of strong-typing in this release. In particular, it should be possible to assign a delegate value in an attribute to just about any parameter. These cases are mostly non-sensical, and they will compile but fail at runtime.\r\n\r\nWe unfortunately had to do this because 3.0-preview3 does not line up with a Visual Studio release - Visual Studio 2019 is not public yet but is in a stabilization period and we will not be able to add new features until the next release. The problem with this exactly is that the editor sees all of the new types, but has the old code generation with no knowledge of `EventCallback`. There were a few cases where a common usage of this new feature would cause spurious errors in the editor. We had to scramble to workaround this problem by making a change to the runtime, resulting in weaker type-checking.\r\n\r\nThis is a fairly major compiler feature for us to without a corresponding tools update, so we are very excited to bring it to you!",Done|enhancement|area-blazor,rynowak,"# Summary\r\n\r\nIn ASP.NET Core 3.0.0-preview3/Blazor-0.9 we're making a big set of changes to how event routing works in Components. Powering this is a new feature called `EventCallback` that every Components user will want to learn about. If you've ever had to add a manual `StatehasChanged` to get rendering to occur properly then these are changes you will probably be interested in.\r\n\r\n## What's changing\r\n\r\nEvent Handlers and `bind-...` are having their *event routing* improved to be more intuitive. Consider the following components:\r\n\r\n```html\r\n\r\n@* MyButton.razor *@\r\n\r\n<button onclick=""@OnClick"">Click here and see what happens!</button>\r\n\r\n@functions {\r\n  [Parameter] Action<UIMouseEventArgs> OnClick { get; set; }\r\n}\r\n\r\n\r\n@* UsesMyButton.razor *@\r\n\r\n<div>@text</div>\r\n<MyButton OnClick=""@ShowSecretMessage"" />\r\n\r\n@function {\r\n    string text;\r\n    void ShowSecretMessage(UIMouseEventArgs e)\r\n    {\r\n        text = ""Hello, world!"";\r\n    }\r\n}\r\n```\r\n\r\nIf you've been using Components so far, you would expect that when you click the button, the `MyButton` component will re-render after the `UsesMyButton.ShowSecretMessage` method is called. We call this behaviour *event routing*. When the `onclick` event fires in the browser, the rendering process will notify the `MyButton` component that an event occured, and (by default) `MyButton` will re-render. `UsesMyButton` *does not* re-render because it was never notified about the event. The correct way to describe *event routing* in previous releases is to say that events are routed to the component that registered them. \r\n\r\nIf you wanted `UsesMyButton` to *also* re-render then you would have to insert a manual call to `StateHasChanged()`. Here's the corrected method:\r\n\r\n```C#\r\n    string text;\r\n    void ShowSecretMessage(UIMouseEventArgs e)\r\n    {\r\n        text = ""Hello, world!"";\r\n        StateHasChanged();\r\n    }\r\n```\r\n\r\nThere are a few more common cases where this could occur, but they can all be generalized under the statement:\r\n\r\n> You need to call `StateHasChanged` if a child component is going to call your method.\r\n\r\n-------\r\n\r\nWell not anymore. \r\n\r\nWe're making some changes that are going to make this *just work* for all of the common cases. Instead of routing events to the component that registered the event, we are going to route them based on the *delegate target*.\r\n\r\nThis seems kind of esoteric at first, but we can simplify it a bit. Delegates (lambdas, converted from methods) all have a `.Target` [property](https://docs.microsoft.com/en-us/dotnet/api/system.delegate.target?view=netframework-4.7.2).\r\n\r\nThe official docs describe it as: \r\n\r\n> The object on which the current delegate invokes the instance method, if the delegate represents an instance method; null if the delegate represents a static method.\r\n\r\nSo if you pass an *instance method* (like `ShowSecretMessage`) it means that the event will be now routed to `UsesButtonComponent`. This is inuitive because the whole purpose of an event handler is change the state of something. Now the event will be routed to the component whose state changed. With the updated *event routing* behavior the previous example will *just work*.\r\n\r\nWhat about a lambda? Well lambdas have a `.Target` as well. Usually what happens in a lamdba that changes a component's state is that you will *close over* the current component. The compiler adds a hidden instance method to the component class, and when the delegate object is created, its `.Target` will refer to the component. *There are some cases where this doesn't happen, and that will be explained further later*.\r\n\r\nSo we could also write `UsesMyButton` like the following, and it will *just work* with the new *event routing*.\r\n\r\n```cshtml\r\n@* UsesMyButton.razor *@\r\n\r\n<div>@text</div>\r\n<MyButton OnClick=""@(() => { text = ""Hello, world!""; }"" />\r\n\r\n@function {\r\n    string text;\r\n}\r\n```\r\n\r\n## Another problem\r\n\r\nHowever if you wrote `UsesMyButton` like the following, you'd have a problem.\r\n\r\n```cshtml\r\n@* UsesMyButton.razor *@\r\n\r\n<div>@text</div>\r\n\r\n@{ var message = ""Hello, world!""; }\r\n<MyButton OnClick=""@((e) => { text = message; }"" />\r\n\r\n@function {\r\n    string text;\r\n}\r\n```\r\n\r\nNow the lambda is a full *closure* because it *closes over* the `message` variable. The `.Target` property won't be the `MyButton` but will instead by an instance of a generated class. So when the button is clicked, there's nowhere to route the event.\r\n\r\nWe have a solution for this too. \r\n\r\nIntroducing `EventCallback`... We're adding a new basic building block to the Components programming model. `EventCallback` is a new value type that wraps a delegate and attempts to smooth over several of the problems that are common using delegates between components.\r\n\r\nHere's the same sample with an `EventCallback<UIMouseEventArgs>`.\r\n\r\n```html\r\n@* MyButton.razor *@\r\n\r\n<button onclick=""@OnClick"">Click here and see what happens!</button>\r\n\r\n@functions {\r\n  [Parameter] EventCallback<UIMouseEventArgs> OnClick { get; set; }\r\n}\r\n\r\n\r\n@* UsesMyButton.razor *@\r\n\r\n<div>@text</div>\r\n@{ var message = ""Hello, world!""; }\r\n<MyButton OnClick=""@((e) => { text = ""Hello, world!""; }"" />\r\n\r\n@function {\r\n    string text;\r\n}\r\n```\r\n\r\nNotice the only code change here is that we changed `Action<UIMouseEventArgs>` to `EventCallback<UIMouseEventArgs>`. However, we've now solved the problem with *event routing*. The compiler has built-in support for converting a delegate to an `EventCallback`, and will do some other things to make sure that the rendering process has enough information to dispatch the event properly.\r\n\r\nThe generated code for this looks like:\r\n```C#\r\nbuilder.AddAttribute(2, ""OnClick"", EventCallback.Factory.Create<UIMouseEventArgs>(this, <your code here>);\r\n```\r\n\r\nSo the `EventCallback` is always created with a reference to the component that created it. We also do some optimizations to try and limit the amount of allocations this creates (`EventCallback` is a struct, but will be boxed in some cases).\r\n\r\nFrom the point of view of `MyButton` - it gets a value of `EventCallback<>` and passes that off to the `onclick` event handler. Event handlers in Components now understand `EventCallback<>` as well as delegates. The experience for using `EventCallback` should be smooth at this point. You can use it in place of an `Action` for event handlers and `bind-...`. \r\n\r\nThe event handling infrastructue still understands delegates. So if you wrote C# code that uses the `RenderTreeBuilder` directly, it will still work. Using C# to program against new component code that exposes `EventCallback` as a parameter will need to use `EventCallback.Factory` to create values.\r\n\r\n## Adapting delegate types\r\n\r\nAnother feature of `EventCallback` is that it provides much better support for flexibility with delegates than we had before. Remember `MyButton`?\r\n\r\n```html\r\n@* MyButton.razor *@\r\n\r\n<button onclick=""@OnClick"">Click here and see what happens!</button>\r\n\r\n@functions {\r\n  [Parameter] Action<UIMouseEventArgs> OnClick { get; set; }\r\n}\r\n```\r\n\r\nThe author of `MyButton` made a choice that `OnClick` has to be a synchronous method that accepts a `UIMouseEventArgs` as an argument. Using basic delegates it's not possible to assign a `Func<UIMouseEventArgs, Task>` or an `Action` to this because the types are incompatible. If you *need* to do async work in this situation, your only option is `async void`.\r\n\r\nWe don't like `async void` as much as an option because it requires manual error handling - and we've tried to make error handling more predictable as well during this release. \r\n\r\nFortunately, using `EventCallback<T>` allows us to solve this problem as well. The set of overloads on `EventCallback.Factory` enables to convert a bunch of different delegate types to work transparently, and the compiler is smart enough to call `EventCallback.Factory` for you in a `.razor` file. \r\n\r\nDoing the following will now *just work* - with proper error handling.\r\n\r\n```html\r\n@* MyButton.razor *@\r\n\r\n<button onclick=""@OnClick"">Click here and see what happens!</button>\r\n\r\n@functions {\r\n  [Parameter] EventCallback<UIMouseEventArgs> OnClick { get; set; }\r\n}\r\n\r\n\r\n@* UsesMyButton.razor *@\r\n\r\n<div>@text</div>\r\n@{ var message = ""Hello, world!""; }\r\n<MyButton OnClick=""@(async () => { await Task.Yield(); text = ""Hello, world!""; }"" />\r\n\r\n@function {\r\n    string text;\r\n}\r\n```\r\n\r\n## Invoking EventCallback manually\r\n\r\nYou can invoke an `EventCallback` like: `await callback.InvokeAsync(arg)`. \r\n\r\nYes, `EventCallback` and `EventCallback<>` are async.  We think that this will work well, because it's now *much easier* to use async thanks to the other improvements we made in this area. `EventCallback<>` is strongly typed and requires a specific argument type to invoke. `EventCallback` is weakly-typed and will allow any argument type.  \r\n\r\n## TLDR Migration Guidance\r\n\r\nWe recommend using `EventCallback` and `EventCallback<T>` when you define component parameters for event handling and binding. The only place you can't use these new types is for child content - those should still be `RenderFragment` or `RenderFragment<>`.\r\n\r\nPrefer `EventCallback<>` where possible because it's strongly typed and will provide better feedback to users of your component. Use `EventCallback` when there's no value you will pass to the callback.\r\n\r\nRemember, consumers don't have to write different code when using a component because of `EventCallback`. It should be very un-impactful to adopt this, and hopefully you find that it resolves a few thorny problems and makes the experience better for you. As with all things we welcome your feedback, especially code samples of things that are hard or don't work well. \r\n\r\n## Known issues\r\n\r\nOne known issue is that we had to **weaken** the compiler's enforcement of strong-typing in this release. In particular, it should be possible to assign a delegate value in an attribute to just about any parameter. These cases are mostly non-sensical, and they will compile but fail at runtime.\r\n\r\nWe unfortunately had to do this because 3.0-preview3 does not line up with a Visual Studio release - Visual Studio 2019 is not public yet but is in a stabilization period and we will not be able to add new features until the next release. The problem with this exactly is that the editor sees all of the new types, but has the old code generation with no knowledge of `EventCallback`. There were a few cases where a common usage of this new feature would cause spurious errors in the editor. We had to scramble to workaround this problem by making a change to the runtime, resulting in weaker type-checking.\r\n\r\nThis is a fairly major compiler feature for us to without a corresponding tools update, so we are very excited to bring it to you!","html\r\n\r\n@* MyButton.razor *@\r\n\r\n<button onclick=""@OnClick"">Click here and see what happens!</button>\r\n\r\n@functions {\r\n  [Parameter] Action<UIMouseEventArgs> OnClick { get; set; }\r\n}\r\n\r\n\r\n@* UsesMyButton.razor *@\r\n\r\n<div>@text</div>\r\n<MyButton OnClick=""@ShowSecretMessage"" />\r\n\r\n@function {\r\n    string text;\r\n    void ShowSecretMessage(UIMouseEventArgs e)\r\n    {\r\n        text = ""Hello, world!"";\r\n    }\r\n}\r\n"
6332,"InsufficientExecutionStackException during model binding### Describe the bug\r\n\r\nDuring a GET request to an MVC action, an exception of type `InsufficientExecutionStackException` was thrown.\r\n\r\n```\r\nInsufficient stack to continue executing the program safely. This can happen from having too many functions on the call stack or function on the stack using too much stack space.\r\n```\r\n\r\n```\r\nSystem.InsufficientExecutionStackException: Insufficient stack to continue executing the program safely. This can happen from having too many functions on the call stack or function on the stack using too much stack space.\r\n   at void System.Runtime.CompilerServices.RuntimeHelpers.EnsureSufficientExecutionStack()\r\n   at bool Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.Visit(ModelMetadata metadata, string key, object model)\r\n   at bool Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.Validate(ModelMetadata metadata, string key, object model, bool alwaysValidateAtTopLevel)\r\n   at void Microsoft.AspNetCore.Mvc.ModelBinding.ObjectModelValidator.Validate(ActionContext actionContext, ValidationStateDictionary validationState, string prefix, object model, ModelMetadata metadata)\r\n   at void Microsoft.AspNetCore.Mvc.ModelBinding.ParameterBinder.EnforceBindRequiredAndValidate(ObjectModelValidator baseObjectValidator, ActionContext actionContext, ParameterDescriptor parameter, ModelMetadata metadata, ModelBindingContext modelBindingContext, ModelBindingResult modelBindingResult)\r\n   at async Task<ModelBindingResult> Microsoft.AspNetCore.Mvc.ModelBinding.ParameterBinder.BindModelAsync(ActionContext actionContext, IModelBinder modelBinder, IValueProvider valueProvider, ParameterDescriptor parameter, ModelMetadata metadata, object value)\r\n   at void Microsoft.AspNetCore.Mvc.Internal.ControllerBinderDelegateProvider+<>c__DisplayClass0_0+<<CreateBinderDelegate>g__Bind|0>d.MoveNext()\r\n   at async Task Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n   at async Task Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextExceptionFilterAsync()\r\n```\r\n\r\nThe action is defined as thus:\r\n\r\n\r\n\r\nThis issue looks similar to aspnet/Mvc#7357.\r\n\r\n### To Reproduce\r\n\r\nUnknown, occurred during a normal GET request to a JSON resource in an ASP.NET MVC 2.2.0 application.\r\n\r\n### Expected behavior\r\n\r\nRequest succeeds.\r\n\r\n### Additional context\r\n\r\nApplication uses ASP.NET Core 2.2.0 and in-process IIS hosting.\r\n",External|area-mvc,pranavkm,"### Describe the bug\r\n\r\nDuring a GET request to an MVC action, an exception of type `InsufficientExecutionStackException` was thrown.\r\n\r\n```\r\nInsufficient stack to continue executing the program safely. This can happen from having too many functions on the call stack or function on the stack using too much stack space.\r\n```\r\n\r\n```\r\nSystem.InsufficientExecutionStackException: Insufficient stack to continue executing the program safely. This can happen from having too many functions on the call stack or function on the stack using too much stack space.\r\n   at void System.Runtime.CompilerServices.RuntimeHelpers.EnsureSufficientExecutionStack()\r\n   at bool Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.Visit(ModelMetadata metadata, string key, object model)\r\n   at bool Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.Validate(ModelMetadata metadata, string key, object model, bool alwaysValidateAtTopLevel)\r\n   at void Microsoft.AspNetCore.Mvc.ModelBinding.ObjectModelValidator.Validate(ActionContext actionContext, ValidationStateDictionary validationState, string prefix, object model, ModelMetadata metadata)\r\n   at void Microsoft.AspNetCore.Mvc.ModelBinding.ParameterBinder.EnforceBindRequiredAndValidate(ObjectModelValidator baseObjectValidator, ActionContext actionContext, ParameterDescriptor parameter, ModelMetadata metadata, ModelBindingContext modelBindingContext, ModelBindingResult modelBindingResult)\r\n   at async Task<ModelBindingResult> Microsoft.AspNetCore.Mvc.ModelBinding.ParameterBinder.BindModelAsync(ActionContext actionContext, IModelBinder modelBinder, IValueProvider valueProvider, ParameterDescriptor parameter, ModelMetadata metadata, object value)\r\n   at void Microsoft.AspNetCore.Mvc.Internal.ControllerBinderDelegateProvider+<>c__DisplayClass0_0+<<CreateBinderDelegate>g__Bind|0>d.MoveNext()\r\n   at async Task Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n   at async Task Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextExceptionFilterAsync()\r\n```\r\n\r\nThe action is defined as thus:\r\n\r\n```csharp\r\n[HttpGet]\r\n[Route(""{id}"", Name = ""MyRoute"")]\r\n[Produces(""application/json"", Type = typeof(MyViewModel))]\r\n[ProducesResponseType(typeof(MyViewModel), StatusCodes.Status200OK)]\r\n[ServiceFilter(typeof(IdValidationFilterAttribute))]\r\npublic async Task<ActionResult<MyViewModel>> Index(string id, CancellationToken cancellationToken = default)\r\n{\r\n    //\r\n}\r\n```\r\n\r\nThis issue looks similar to aspnet/Mvc#7357.\r\n\r\n### To Reproduce\r\n\r\nUnknown, occurred during a normal GET request to a JSON resource in an ASP.NET MVC 2.2.0 application.\r\n\r\n### Expected behavior\r\n\r\nRequest succeeds.\r\n\r\n### Additional context\r\n\r\nApplication uses ASP.NET Core 2.2.0 and in-process IIS hosting.\r\n","csharp\r\n[HttpGet]\r\n[Route(""{id}"", Name = ""MyRoute"")]\r\n[Produces(""application/json"", Type = typeof(MyViewModel))]\r\n[ProducesResponseType(typeof(MyViewModel), StatusCodes.Status200OK)]\r\n[ServiceFilter(typeof(IdValidationFilterAttribute))]\r\npublic async Task<ActionResult<MyViewModel>> Index(string id, CancellationToken cancellationToken = default)\r\n{\r\n    //\r\n}\r\n"
6330,"There should be specialized normalizers for E-Mails### Is your feature request related to a problem? Please describe.\r\n\r\nGiven I have an E-Mail address that includes unicode characters. When its normalized in the database using the `UpperInvariantLookupNormalizer`, those unicode characters are not properly escaped into [Punycode](https://en.wikipedia.org/wiki/Punycode) using the [System.Globalization.IdnMapping](https://docs.microsoft.com/en-us/dotnet/api/system.globalization.idnmapping) class. \r\n\r\nWhen registering a custom normalizer, it will apply to email addresses *and* user names, even in use cases when the user name is not an email address. \r\n\r\n### Describe the solution you'd like\r\n\r\nI propose to have specialized versions of `ILookupNormalizer` for e-mail addresses and user names: \r\n\r\n\r\n\r\nas well as appropriate default implementations that remove diacritic symbols, or escape punycode respectively. \r\n\r\n### Describe alternatives you've considered\r\n\r\nThe current workaround is to implement custom `IUserEmailStore<TUser>`, `UserManager<User>`, and `RoleManager<Role>` derived classes and overwrite the methods which use the normalized username or the normalized email address. One can that implement the interfaces above and provide the normalizers using Dependency Injection. ",Done|enhancement|breaking-change|area-identity,HaoK,"### Is your feature request related to a problem? Please describe.\r\n\r\nGiven I have an E-Mail address that includes unicode characters. When its normalized in the database using the `UpperInvariantLookupNormalizer`, those unicode characters are not properly escaped into [Punycode](https://en.wikipedia.org/wiki/Punycode) using the [System.Globalization.IdnMapping](https://docs.microsoft.com/en-us/dotnet/api/system.globalization.idnmapping) class. \r\n\r\nWhen registering a custom normalizer, it will apply to email addresses *and* user names, even in use cases when the user name is not an email address. \r\n\r\n### Describe the solution you'd like\r\n\r\nI propose to have specialized versions of `ILookupNormalizer` for e-mail addresses and user names: \r\n\r\n```csharp\r\npublic interface IUserNameLookupNormalizer : ILookupNormalizer {}\r\npublic interface IEmailLookupNormalizer : ILookupNormalizer {}\r\n```\r\n\r\nas well as appropriate default implementations that remove diacritic symbols, or escape punycode respectively. \r\n\r\n### Describe alternatives you've considered\r\n\r\nThe current workaround is to implement custom `IUserEmailStore<TUser>`, `UserManager<User>`, and `RoleManager<Role>` derived classes and overwrite the methods which use the normalized username or the normalized email address. One can that implement the interfaces above and provide the normalizers using Dependency Injection. ",csharp\r\npublic interface IUserNameLookupNormalizer : ILookupNormalizer {}\r\npublic interface IEmailLookupNormalizer : ILookupNormalizer {}\r\n
6187,"Razor Compiler isn't removing whitespace aggressively enoughThere's an extra call to `AddContent(""\\n"", ...);` after the element which shouldn't be there. The Razor compiler for components should remove extra whitespace at the top-level.\r\n\r\nThis regression is causing lots of rendering tests to fail.\r\n\r\n## Main source file (component):\r\n```\r\n<elem attr=@MyHandleEvent />\r\n                @functions {\r\n                    public bool HandlerWasCalled { get; set; } = false;\r\n\r\n                    void MyHandleEvent(Microsoft.AspNetCore.Components.UIEventArgs eventArgs)\r\n                    {\r\n                        HandlerWasCalled = true;\r\n                    }\r\n                }\r\n```\r\n\r\n## Generated C#:\r\n",bug|Done,rynowak,"There's an extra call to `AddContent(""\\n"", ...);` after the element which shouldn't be there. The Razor compiler for components should remove extra whitespace at the top-level.\r\n\r\nThis regression is causing lots of rendering tests to fail.\r\n\r\n## Main source file (component):\r\n```\r\n<elem attr=@MyHandleEvent />\r\n                @functions {\r\n                    public bool HandlerWasCalled { get; set; } = false;\r\n\r\n                    void MyHandleEvent(Microsoft.AspNetCore.Components.UIEventArgs eventArgs)\r\n                    {\r\n                        HandlerWasCalled = true;\r\n                    }\r\n                }\r\n```\r\n\r\n## Generated C#:\r\n```C#\r\n// <auto-generated/>\r\n#pragma warning disable 1591\r\nnamespace Test\r\n{\r\n    #line hidden\r\n    using System;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using System.Threading.Tasks;\r\n    using Microsoft.AspNetCore.Components;\r\n    public class TestComponent : Microsoft.AspNetCore.Components.ComponentBase\r\n    {\r\n        #pragma warning disable 1998\r\n        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder)\r\n        {\r\n            base.BuildRenderTree(builder);\r\n            builder.OpenElement(0, ""elem"");\r\n            builder.AddAttribute(1, ""attr"", MyHandleEvent);\r\n            builder.CloseElement();\r\n            builder.AddContent(2, ""\\n"");\r\n        }\r\n        #pragma warning restore 1998\r\n#line 2 ""x:\\dir\\subdir\\Test\\TestComponent.cshtml""\r\n                            \r\n                    public bool HandlerWasCalled { get; set; } = false;\r\n\r\n                    void MyHandleEvent(Microsoft.AspNetCore.Components.UIEventArgs eventArgs)\r\n                    {\r\n                        HandlerWasCalled = true;\r\n                    }\r\n                \r\n\r\n#line default\r\n#line hidden\r\n    }\r\n}\r\n#pragma warning restore 1591\r\n\r\n```","C#\r\n// <auto-generated/>\r\n#pragma warning disable 1591\r\nnamespace Test\r\n{\r\n    #line hidden\r\n    using System;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using System.Threading.Tasks;\r\n    using Microsoft.AspNetCore.Components;\r\n    public class TestComponent : Microsoft.AspNetCore.Components.ComponentBase\r\n    {\r\n        #pragma warning disable 1998\r\n        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder)\r\n        {\r\n            base.BuildRenderTree(builder);\r\n            builder.OpenElement(0, ""elem"");\r\n            builder.AddAttribute(1, ""attr"", MyHandleEvent);\r\n            builder.CloseElement();\r\n            builder.AddContent(2, ""\\n"");\r\n        }\r\n        #pragma warning restore 1998\r\n#line 2 ""x:\\dir\\subdir\\Test\\TestComponent.cshtml""\r\n                            \r\n                    public bool HandlerWasCalled { get; set; } = false;\r\n\r\n                    void MyHandleEvent(Microsoft.AspNetCore.Components.UIEventArgs eventArgs)\r\n                    {\r\n                        HandlerWasCalled = true;\r\n                    }\r\n                \r\n\r\n#line default\r\n#line hidden\r\n    }\r\n}\r\n#pragma warning restore 1591\r\n\r\n"
6185,"Razor Compiler has a different HTML encoding behavior than BlazorThe Razor+Components compiler has a different encoding behavior than Blazor did. Anglesharp used to aggressively decode everything, so we would re-encode entities in the compiler before generating the code - since we know that it's going to be passed to the DOM in a safe way.\r\n\r\nExpected: `<span>Hi</span>`\r\n\r\n## Main source file (component):\r\n```\r\n&lt;span&gt;Hi&lt;/span&gt;\r\n```\r\n\r\n## Generated C#:\r\n",Done|area-blazor,ajaybhargavb,"The Razor+Components compiler has a different encoding behavior than Blazor did. Anglesharp used to aggressively decode everything, so we would re-encode entities in the compiler before generating the code - since we know that it's going to be passed to the DOM in a safe way.\r\n\r\nExpected: `<span>Hi</span>`\r\n\r\n## Main source file (component):\r\n```\r\n&lt;span&gt;Hi&lt;/span&gt;\r\n```\r\n\r\n## Generated C#:\r\n```C#\r\n// <auto-generated/>\r\n#pragma warning disable 1591\r\nnamespace Test\r\n{\r\n    #line hidden\r\n    using System;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using System.Threading.Tasks;\r\n    using Microsoft.AspNetCore.Components;\r\n    public class TestComponent : Microsoft.AspNetCore.Components.ComponentBase\r\n    {\r\n        #pragma warning disable 1998\r\n        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder)\r\n        {\r\n            base.BuildRenderTree(builder);\r\n            builder.AddContent(0, ""&lt;span&gt;Hi&lt;/span&gt;"");\r\n        }\r\n        #pragma warning restore 1998\r\n    }\r\n}\r\n#pragma warning restore 1591\r\n\r\n```","C#\r\n// <auto-generated/>\r\n#pragma warning disable 1591\r\nnamespace Test\r\n{\r\n    #line hidden\r\n    using System;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using System.Threading.Tasks;\r\n    using Microsoft.AspNetCore.Components;\r\n    public class TestComponent : Microsoft.AspNetCore.Components.ComponentBase\r\n    {\r\n        #pragma warning disable 1998\r\n        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder)\r\n        {\r\n            base.BuildRenderTree(builder);\r\n            builder.AddContent(0, ""&lt;span&gt;Hi&lt;/span&gt;"");\r\n        }\r\n        #pragma warning restore 1998\r\n    }\r\n}\r\n#pragma warning restore 1591\r\n\r\n"
5681,"Parent ViewModel is not bound (null) when error occurs in child VM_From @montella1507 on Monday, 17 December 2018 22:24:34_\r\n\r\n# General\r\nWhen error occurs in binding of child viewmodel, parent ViewModel is NULL. \r\n\r\n#Desired behavior\r\nParent ViewModel should not be NULL, only Child VM.\r\n\r\nHow to simulate:\r\n\r\n\r\nResult in controller is, VM is NULL:\r\n![image](https://user-images.githubusercontent.com/10418323/50119343-c9ef7c80-0252-11e9-86c6-356a32326bad.png)\r\n\r\nVersion info:\r\nMicrosoft.AspnetCore.App (2.1.1) \r\nWin 10 x64  .NET Core runtime.\r\n\r\n\r\n_Copied from original issue: dotnet/core#2156_",question|area-mvc,dougbu,"_From @montella1507 on Monday, 17 December 2018 22:24:34_\r\n\r\n# General\r\nWhen error occurs in binding of child viewmodel, parent ViewModel is NULL. \r\n\r\n#Desired behavior\r\nParent ViewModel should not be NULL, only Child VM.\r\n\r\nHow to simulate:\r\n```c#\r\npublic class ParentVM {\r\n   public string FirstName { get; set; }\r\n   public string LastName { get; set; }\r\n   public ChildVM Xyz { get; set; }\r\n}\r\n\r\npublic class ChildVM \r\n    {\r\n        public string A { get; set; }\r\n        public string B { get; set; }\r\n}\r\n\r\nRequest payload:\r\n{\r\n    ""firstName"": ""PETER"",\r\n    ""lastName"": ""PARKER"",\r\n    ""xyz"":  ""kldqwjkld""  <<<< should be { ""a"": ""qddq"", ""b"": ""dqdd"" }\r\n}\r\n```\r\n\r\nResult in controller is, VM is NULL:\r\n![image](https://user-images.githubusercontent.com/10418323/50119343-c9ef7c80-0252-11e9-86c6-356a32326bad.png)\r\n\r\nVersion info:\r\nMicrosoft.AspnetCore.App (2.1.1) \r\nWin 10 x64  .NET Core runtime.\r\n\r\n\r\n_Copied from original issue: dotnet/core#2156_","c#\r\npublic class ParentVM {\r\n   public string FirstName { get; set; }\r\n   public string LastName { get; set; }\r\n   public ChildVM Xyz { get; set; }\r\n}\r\n\r\npublic class ChildVM \r\n    {\r\n        public string A { get; set; }\r\n        public string B { get; set; }\r\n}\r\n\r\nRequest payload:\r\n{\r\n    ""firstName"": ""PETER"",\r\n    ""lastName"": ""PARKER"",\r\n    ""xyz"":  ""kldqwjkld""  <<<< should be { ""a"": ""qddq"", ""b"": ""dqdd"" }\r\n}\r\n"
5160,"Double compression when response returns ContentEncoding headerWhen the back-end returns a compressed response, Microsoft.AspNetCore.ResponseCompression is double-compressing the response unnecessarily.\r\n\r\nMy sugestion is to check the response header ContentEncoding before begin to write and compress the content.\r\n\r\nHere how I fix the problem locally:\r\n\r\nPlease consider those changes.\r\n\r\nRegards\r\n\r\n\r\n\r\n",area-middleware,Tratcher,"When the back-end returns a compressed response, Microsoft.AspNetCore.ResponseCompression is double-compressing the response unnecessarily.\r\n\r\nMy sugestion is to check the response header ContentEncoding before begin to write and compress the content.\r\n\r\nHere how I fix the problem locally:\r\n```csharp\r\n        private async void InternalWriteAsync(byte[] buffer, int offset, int count, AsyncCallback callback, TaskCompletionSource<object> tcs)\r\n        {\r\n            // Avoid to compress responses with any ContentEncoding header.\r\n            if (_context.Response.Headers.ContainsKey(HeaderNames.ContentEncoding))\r\n                _compressionChecked = true;\r\n\r\n            try\r\n            {\r\n                await WriteAsync(buffer, offset, count);\r\n                tcs.TrySetResult(null);\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                tcs.TrySetException(ex);\r\n            }\r\n\r\n            if (callback != null)\r\n            {\r\n                // Offload callbacks to avoid stack dives on sync completions.\r\n                var ignored = Task.Run(() =>\r\n                {\r\n                    try\r\n                    {\r\n                        callback(tcs.Task);\r\n                    }\r\n                    catch (Exception)\r\n                    {\r\n                        // Suppress exceptions on background threads.\r\n                    }\r\n                });\r\n            }\r\n        }\r\n```\r\nPlease consider those changes.\r\n\r\nRegards\r\n\r\n\r\n\r\n","csharp\r\n        private async void InternalWriteAsync(byte[] buffer, int offset, int count, AsyncCallback callback, TaskCompletionSource<object> tcs)\r\n        {\r\n            // Avoid to compress responses with any ContentEncoding header.\r\n            if (_context.Response.Headers.ContainsKey(HeaderNames.ContentEncoding))\r\n                _compressionChecked = true;\r\n\r\n            try\r\n            {\r\n                await WriteAsync(buffer, offset, count);\r\n                tcs.TrySetResult(null);\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                tcs.TrySetException(ex);\r\n            }\r\n\r\n            if (callback != null)\r\n            {\r\n                // Offload callbacks to avoid stack dives on sync completions.\r\n                var ignored = Task.Run(() =>\r\n                {\r\n                    try\r\n                    {\r\n                        callback(tcs.Task);\r\n                    }\r\n                    catch (Exception)\r\n                    {\r\n                        // Suppress exceptions on background threads.\r\n                    }\r\n                });\r\n            }\r\n        }\r\n"
5153,"ANCM In process: Managed exceptions before full initialization are too hard to look atEpic https://github.com/aspnet/AspNetCore/issues/8833\r\n\r\nWhile testing out the generic host with the new ValidateOnBuild feature (which fails to build the host if there's an issue with services), I noticed that its really hard (even in development) to just get access to the managed exception when using ANCM in proc. If there's an exception in Program.cs, this is what you see:\r\n\r\n![image](https://user-images.githubusercontent.com/95136/50070452-dc01ea00-0182-11e9-93e4-8e7bc08c0c31.png)\r\n\r\nThen the event log shows this:\r\n\r\n![image](https://user-images.githubusercontent.com/95136/50070363-82012480-0182-11e9-9d25-c76b1475c7d4.png)\r\n\r\nThis is a pretty bad experience for looking at a simple managed exception. Here are the steps we advertise to troubleshoot:\r\n\r\n```\r\nTroubleshooting steps:\r\n- Check the system event log for error messages\r\n- Enable logging the application process' stdout messages\r\n- Attach a debugger to the application process and inspect\r\n```\r\n\r\n- The event log tells me there's a manged exception, but nothing more.\r\n- Enabling stdout logging means I suddenly need a web.config file. Do we have a tooling gesture to turn this on? When I add a web.config it gives me this:\r\n    ```xml\r\n    <?xml version=""1.0"" encoding=""utf-8""?>\r\n    <configuration>\r\n\r\n      <!-- To customize the asp.net core module uncomment and edit the following section. \r\n      For more info see https://go.microsoft.com/fwlink/?linkid=838655 -->\r\n      <!--\r\n      <system.webServer>\r\n        <handlers>\r\n          <remove name=""aspNetCore""/>\r\n          <add name=""aspNetCore"" path=""*"" verb=""*"" modules=""AspNetCoreModule"" resourceType=""Unspecified""/>\r\n        </handlers>\r\n        <aspNetCore processPath=""%LAUNCHER_PATH%"" arguments=""%LAUNCHER_ARGS%"" stdoutLogEnabled=""false"" stdoutLogFile="".\\logs\\stdout"" />\r\n      </system.webServer>\r\n      -->\r\n\r\n    </configuration>\r\n    ```\r\n    Which I am assuming isn't correct for inproc hosting.\r\n- The default debugger settings don't break when this exception occurs. The output window does show this obscure message though:\r\n    ```\r\n    Exception thrown: 'System.InvalidOperationException' in Microsoft.Extensions.DependencyInjection.dll\r\n    Exception thrown: 'System.InvalidOperationException' in Microsoft.Extensions.DependencyInjection.dll\r\n    Exception thrown: 'System.AggregateException' in Microsoft.Extensions.DependencyInjection.dll\r\n    ```\r\n- Changing the debugger settings to break on all exceptions does work.\r\n\r\n![image](https://user-images.githubusercontent.com/95136/50070823-76aef880-0184-11e9-8c71-6977c33c2c1b.png)\r\n\r\nWe need to improve this. Here are some things I can think of:\r\n- We should re-think replacing the built in exception handler for .NET or finding a way to call into it when an unhandled exception happens. It logs the exception information to the event log with all of the details. Here's an example:\r\n![image](https://user-images.githubusercontent.com/95136/50070936-dad1bc80-0184-11e9-85f9-ac7d192a5d09.png)\r\n- We should show an error page with the exception in development.\r\n- We could potentially make our own managed entry point that we call into first in order to set things up such that we can get unhandled exceptions and handle them appropriately. Something like the following:\r\n\r\n\r\n\r\nWe would call this delegate first (it would exist in the IIS integration assembly) so that before we called into main, we'd have logic in managed code to hook up the unhandled exception event handler.\r\n\r\n",Done|cost: L|feature-iis|area-networking,jkotalik,"Epic https://github.com/aspnet/AspNetCore/issues/8833\r\n\r\nWhile testing out the generic host with the new ValidateOnBuild feature (which fails to build the host if there's an issue with services), I noticed that its really hard (even in development) to just get access to the managed exception when using ANCM in proc. If there's an exception in Program.cs, this is what you see:\r\n\r\n![image](https://user-images.githubusercontent.com/95136/50070452-dc01ea00-0182-11e9-93e4-8e7bc08c0c31.png)\r\n\r\nThen the event log shows this:\r\n\r\n![image](https://user-images.githubusercontent.com/95136/50070363-82012480-0182-11e9-9d25-c76b1475c7d4.png)\r\n\r\nThis is a pretty bad experience for looking at a simple managed exception. Here are the steps we advertise to troubleshoot:\r\n\r\n```\r\nTroubleshooting steps:\r\n- Check the system event log for error messages\r\n- Enable logging the application process' stdout messages\r\n- Attach a debugger to the application process and inspect\r\n```\r\n\r\n- The event log tells me there's a manged exception, but nothing more.\r\n- Enabling stdout logging means I suddenly need a web.config file. Do we have a tooling gesture to turn this on? When I add a web.config it gives me this:\r\n    ```xml\r\n    <?xml version=""1.0"" encoding=""utf-8""?>\r\n    <configuration>\r\n\r\n      <!-- To customize the asp.net core module uncomment and edit the following section. \r\n      For more info see https://go.microsoft.com/fwlink/?linkid=838655 -->\r\n      <!--\r\n      <system.webServer>\r\n        <handlers>\r\n          <remove name=""aspNetCore""/>\r\n          <add name=""aspNetCore"" path=""*"" verb=""*"" modules=""AspNetCoreModule"" resourceType=""Unspecified""/>\r\n        </handlers>\r\n        <aspNetCore processPath=""%LAUNCHER_PATH%"" arguments=""%LAUNCHER_ARGS%"" stdoutLogEnabled=""false"" stdoutLogFile="".\\logs\\stdout"" />\r\n      </system.webServer>\r\n      -->\r\n\r\n    </configuration>\r\n    ```\r\n    Which I am assuming isn't correct for inproc hosting.\r\n- The default debugger settings don't break when this exception occurs. The output window does show this obscure message though:\r\n    ```\r\n    Exception thrown: 'System.InvalidOperationException' in Microsoft.Extensions.DependencyInjection.dll\r\n    Exception thrown: 'System.InvalidOperationException' in Microsoft.Extensions.DependencyInjection.dll\r\n    Exception thrown: 'System.AggregateException' in Microsoft.Extensions.DependencyInjection.dll\r\n    ```\r\n- Changing the debugger settings to break on all exceptions does work.\r\n\r\n![image](https://user-images.githubusercontent.com/95136/50070823-76aef880-0184-11e9-8c71-6977c33c2c1b.png)\r\n\r\nWe need to improve this. Here are some things I can think of:\r\n- We should re-think replacing the built in exception handler for .NET or finding a way to call into it when an unhandled exception happens. It logs the exception information to the event log with all of the details. Here's an example:\r\n![image](https://user-images.githubusercontent.com/95136/50070936-dad1bc80-0184-11e9-85f9-ac7d192a5d09.png)\r\n- We should show an error page with the exception in development.\r\n- We could potentially make our own managed entry point that we call into first in order to set things up such that we can get unhandled exceptions and handle them appropriately. Something like the following:\r\n\r\n```C#\r\npublic static void HookExceptionHandler()\r\n{\r\n    AppDomain.CurrentDomain.UnhandledException += (sender, e) =>\r\n    {\r\n        if (e.IsTerminating)\r\n        {\r\n            // Log to the event log here\r\n        }\r\n    };\r\n}\r\n```\r\n\r\nWe would call this delegate first (it would exist in the IIS integration assembly) so that before we called into main, we'd have logic in managed code to hook up the unhandled exception event handler.\r\n\r\n","C#\r\npublic static void HookExceptionHandler()\r\n{\r\n    AppDomain.CurrentDomain.UnhandledException += (sender, e) =>\r\n    {\r\n        if (e.IsTerminating)\r\n        {\r\n            // Log to the event log here\r\n        }\r\n    };\r\n}\r\n"
5152,"Global Filters OrderFilters of the same type (like `IResourceFilter`), with the same `IOrderedFilter.Order` are supposed to be ordered by their scope, which is working just fine. But when I add Global filters using the `Add<T>()` or `Add(Type)` method, it's not working correctly!\r\nVersion: 2.1\r\n\r\n### To Reproduce\r\n1. Create some filters:\r\n\r\n\r\n2. Decorate an Action and a Controller with the appropriate filters:\r\n\r\n\r\n3. Configure MVC with global filters:\r\n\r\n\r\n### Expected behavior\r\nI suppose the output should be something like this:\r\n> Global1  Controller1  Action1  Global2  Controller2  Action2\r\n\r\nbut it's not! Something's wrong with the global filters. This is what I get:\r\n> Global1  Global2  Controller1  Action1  Controller2  Action2\r\n\r\nYou can generate the correct result only if you pass an instance of global filters to the add method:\r\n",investigate|area-mvc,pranavkm,"Filters of the same type (like `IResourceFilter`), with the same `IOrderedFilter.Order` are supposed to be ordered by their scope, which is working just fine. But when I add Global filters using the `Add<T>()` or `Add(Type)` method, it's not working correctly!\r\nVersion: 2.1\r\n\r\n### To Reproduce\r\n1. Create some filters:\r\n```c#\r\npublic class Global1 : Attribute, IResourceFilter, IOrderedFilter\r\n{\r\n    public int Order => 1;\r\n\r\n    public void OnResourceExecuted(ResourceExecutedContext context) { }\r\n\r\n    public void OnResourceExecuting(ResourceExecutingContext context)\r\n    {\r\n        Console.WriteLine(""Global1"");\r\n    }\r\n}\r\n\r\npublic class Global2 : Attribute, IResourceFilter, IOrderedFilter\r\n{\r\n    public int Order => 2;\r\n\r\n    public void OnResourceExecuted(ResourceExecutedContext context) { }\r\n\r\n    public void OnResourceExecuting(ResourceExecutingContext context)\r\n    {\r\n        Console.WriteLine(""Global2"");\r\n    }\r\n}\r\n\r\npublic class Controller1 : Attribute, IResourceFilter, IOrderedFilter\r\n{\r\n    public int Order => 1;\r\n\r\n    public void OnResourceExecuted(ResourceExecutedContext context) { }\r\n\r\n    public void OnResourceExecuting(ResourceExecutingContext context)\r\n    {\r\n        Console.WriteLine(""Controller1"");\r\n    }\r\n}\r\n\r\npublic class Controller2 : Attribute, IResourceFilter, IOrderedFilter\r\n{\r\n    public int Order => 2;\r\n\r\n    public void OnResourceExecuted(ResourceExecutedContext context) { }\r\n\r\n    public void OnResourceExecuting(ResourceExecutingContext context)\r\n    {\r\n        Console.WriteLine(""Controller2"");\r\n    }\r\n}\r\n\r\npublic class Action1 : Attribute, IResourceFilter, IOrderedFilter\r\n{\r\n    public int Order => 1;\r\n\r\n    public void OnResourceExecuted(ResourceExecutedContext context) { }\r\n\r\n    public void OnResourceExecuting(ResourceExecutingContext context)\r\n    {\r\n        Console.WriteLine(""Action1"");\r\n    }\r\n}\r\n\r\npublic class Action2 : Attribute, IResourceFilter, IOrderedFilter\r\n{\r\n    public int Order => 2;\r\n\r\n    public void OnResourceExecuted(ResourceExecutedContext context) { }\r\n\r\n    public void OnResourceExecuting(ResourceExecutingContext context)\r\n    {\r\n        Console.WriteLine(""Action2"");\r\n    }\r\n}\r\n```\r\n\r\n2. Decorate an Action and a Controller with the appropriate filters:\r\n```c#\r\n[Controller1]\r\n[Controller2]\r\npublic class HomeController : Controller\r\n{\r\n    [Action1]\r\n    [Action2]\r\n    public IActionResult Index()\r\n    {\r\n        return View();\r\n    }\r\n}\r\n```\r\n\r\n3. Configure MVC with global filters:\r\n```c#\r\nservices.AddMvc(cfg =>\r\n{\r\n    cfg.Filters.Add<Global1>();  // or cfg.Filters.Add(typeof(Global1));\r\n    cfg.Filters.Add<Global2>();  // or cfg.Filters.Add(typeof(Global2));\r\n});\r\n```\r\n\r\n### Expected behavior\r\nI suppose the output should be something like this:\r\n> Global1  Controller1  Action1  Global2  Controller2  Action2\r\n\r\nbut it's not! Something's wrong with the global filters. This is what I get:\r\n> Global1  Global2  Controller1  Action1  Controller2  Action2\r\n\r\nYou can generate the correct result only if you pass an instance of global filters to the add method:\r\n```c#\r\ncfg.Filters.Add(new Global1());\r\ncfg.Filters.Add(new Global2());\r\n```","c#\r\npublic class Global1 : Attribute, IResourceFilter, IOrderedFilter\r\n{\r\n    public int Order => 1;\r\n\r\n    public void OnResourceExecuted(ResourceExecutedContext context) { }\r\n\r\n    public void OnResourceExecuting(ResourceExecutingContext context)\r\n    {\r\n        Console.WriteLine(""Global1"");\r\n    }\r\n}\r\n\r\npublic class Global2 : Attribute, IResourceFilter, IOrderedFilter\r\n{\r\n    public int Order => 2;\r\n\r\n    public void OnResourceExecuted(ResourceExecutedContext context) { }\r\n\r\n    public void OnResourceExecuting(ResourceExecutingContext context)\r\n    {\r\n        Console.WriteLine(""Global2"");\r\n    }\r\n}\r\n\r\npublic class Controller1 : Attribute, IResourceFilter, IOrderedFilter\r\n{\r\n    public int Order => 1;\r\n\r\n    public void OnResourceExecuted(ResourceExecutedContext context) { }\r\n\r\n    public void OnResourceExecuting(ResourceExecutingContext context)\r\n    {\r\n        Console.WriteLine(""Controller1"");\r\n    }\r\n}\r\n\r\npublic class Controller2 : Attribute, IResourceFilter, IOrderedFilter\r\n{\r\n    public int Order => 2;\r\n\r\n    public void OnResourceExecuted(ResourceExecutedContext context) { }\r\n\r\n    public void OnResourceExecuting(ResourceExecutingContext context)\r\n    {\r\n        Console.WriteLine(""Controller2"");\r\n    }\r\n}\r\n\r\npublic class Action1 : Attribute, IResourceFilter, IOrderedFilter\r\n{\r\n    public int Order => 1;\r\n\r\n    public void OnResourceExecuted(ResourceExecutedContext context) { }\r\n\r\n    public void OnResourceExecuting(ResourceExecutingContext context)\r\n    {\r\n        Console.WriteLine(""Action1"");\r\n    }\r\n}\r\n\r\npublic class Action2 : Attribute, IResourceFilter, IOrderedFilter\r\n{\r\n    public int Order => 2;\r\n\r\n    public void OnResourceExecuted(ResourceExecutedContext context) { }\r\n\r\n    public void OnResourceExecuting(ResourceExecutingContext context)\r\n    {\r\n        Console.WriteLine(""Action2"");\r\n    }\r\n}\r\n"
5149,UseStartup on GenericWebHostBuilder should fail when Startup.ConfigureServices returns an IServiceProviderRight now it's being ignored and it should throw instead.\r\n\r\nProgram.cs\r\n\r\n\r\n\r\nStartup.cs\r\n\r\n\r\n\r\nHere's the code that supposed to do that check.\r\n\r\nhttps://github.com/aspnet/AspNetCore/blob/cc899e2be729364589ba7f4392bce9942e4faca4/src/Hosting/Hosting/src/GenericHost/GenericWebHostBuilder.cs#L245-L249,bug|Done|area-hosting|area-networking,Tratcher,"Right now it's being ignored and it should throw instead.\r\n\r\nProgram.cs\r\n\r\n```C#\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.IO;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.AspNetCore;\r\nusing Microsoft.AspNetCore.Hosting;\r\nusing Microsoft.Extensions.Configuration;\r\nusing Microsoft.Extensions.Hosting;\r\nusing Microsoft.Extensions.Logging;\r\n\r\nnamespace WebApplication44\r\n{\r\n    public class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            CreateWebHostBuilder(args).Build().Run();\r\n        }\r\n\r\n        public static IHostBuilder CreateWebHostBuilder(string[] args) =>\r\n            Host.CreateDefaultBuilder(args)\r\n                .ConfigureWebHostDefaults(builder =>\r\n                {\r\n                    builder.UseStartup<Startup>();\r\n                });\r\n    }\r\n}\r\n```\r\n\r\nStartup.cs\r\n\r\n```C#\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.AspNetCore.Builder;\r\nusing Microsoft.AspNetCore.Hosting;\r\nusing Microsoft.AspNetCore.Http;\r\nusing Microsoft.Extensions.DependencyInjection;\r\n\r\nnamespace WebApplication44\r\n{\r\n    public class Startup\r\n    {\r\n        // This method gets called by the runtime. Use this method to add services to the container.\r\n        // For more information on how to configure your application, visit https://go.microsoft.com/fwlink/?LinkID=398940\r\n        public IServiceProvider ConfigureServices(IServiceCollection services)\r\n        {\r\n            return services.BuildServiceProvider();\r\n        }\r\n\r\n        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.\r\n        public void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n        {\r\n            if (env.IsDevelopment())\r\n            {\r\n                app.UseDeveloperExceptionPage();\r\n            }\r\n\r\n            app.Run(async (context) =>\r\n            {\r\n                await context.Response.WriteAsync(""Hello World!"");\r\n            });\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nHere's the code that supposed to do that check.\r\n\r\nhttps://github.com/aspnet/AspNetCore/blob/cc899e2be729364589ba7f4392bce9942e4faca4/src/Hosting/Hosting/src/GenericHost/GenericWebHostBuilder.cs#L245-L249",C#\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.IO;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.AspNetCore;\r\nusing Microsoft.AspNetCore.Hosting;\r\nusing Microsoft.Extensions.Configuration;\r\nusing Microsoft.Extensions.Hosting;\r\nusing Microsoft.Extensions.Logging;\r\n\r\nnamespace WebApplication44\r\n{\r\n    public class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            CreateWebHostBuilder(args).Build().Run();\r\n        }\r\n\r\n        public static IHostBuilder CreateWebHostBuilder(string[] args) =>\r\n            Host.CreateDefaultBuilder(args)\r\n                .ConfigureWebHostDefaults(builder =>\r\n                {\r\n                    builder.UseStartup<Startup>();\r\n                });\r\n    }\r\n}\r\n
5677,"MouseEvent does not adopt the propertiesThe Javascript function returns normal values like:\r\n\r\n> ClientX: 106, ClientY: 285\r\n\r\nThe C# function only returns default values.\r\n\r\n> {""detail"":0,""screenX"":0,""screenY"":0,""clientX"":0,""clientY"":0,""button"":0,""buttons"":0,""ctrlKey"":false,""shiftKey"":false,""altKey"":false,""metaKey"":false,""type"":null}\r\n\r\nJavaScript Interop\r\n\r\n\r\n\r\nJavaScriptInteropClass\r\n\r\nIs this an error? This is Blazor ServerSide",question|area-blazor,SteveSandersonMS,"The Javascript function returns normal values like:\r\n\r\n> ClientX: 106, ClientY: 285\r\n\r\nThe C# function only returns default values.\r\n\r\n> {""detail"":0,""screenX"":0,""screenY"":0,""clientX"":0,""clientY"":0,""button"":0,""buttons"":0,""ctrlKey"":false,""shiftKey"":false,""altKey"":false,""metaKey"":false,""type"":null}\r\n\r\nJavaScript Interop\r\n```javascript\r\n        document.onmouseup = function (event) {\r\n            console.log(event);\r\n            DotNet.invokeMethodAsync('DSA.App', 'JsMouseUp', event);\r\n        }\r\n```\r\n\r\n\r\nJavaScriptInteropClass\r\n```c#\r\n [JSInvokable]\r\n        public static Task<bool> JsMouseUp(UIMouseEventArgs eventArgs)\r\n        {\r\n            var found = false;\r\n            Console.WriteLine(Json.Serialize(eventArgs));\r\n            return Task.FromResult(found);\r\n        }\r\n```\r\nIs this an error? This is Blazor ServerSide","javascript\r\n        document.onmouseup = function (event) {\r\n            console.log(event);\r\n            DotNet.invokeMethodAsync('DSA.App', 'JsMouseUp', event);\r\n        }\r\n"
5144,"HttpContext property of HttpContextAccessor is null![httpcontextaccessor_problem](https://user-images.githubusercontent.com/22634221/50058414-a1974d80-0180-11e9-9ca5-ccd675d6aca5.png)\r\nI have a REST API web application which worked perfectly with ASP.Net Core 2.1. Now the constructor injected IHttpContextAccessor returns a null value for HttpContext property.\r\n\r\nIn Startup.cs class, in ConfigureServices method I have:\r\n\r\n\r\nThis is the WorklistPagedTasksHalRepresentationConverter class\r\n\r\n\r\n\r\nThe Convert method is called by a controller method.",bug|Done|area-networking,JunTaoLuo,"![httpcontextaccessor_problem](https://user-images.githubusercontent.com/22634221/50058414-a1974d80-0180-11e9-9ca5-ccd675d6aca5.png)\r\nI have a REST API web application which worked perfectly with ASP.Net Core 2.1. Now the constructor injected IHttpContextAccessor returns a null value for HttpContext property.\r\n\r\nIn Startup.cs class, in ConfigureServices method I have:\r\n```C#\r\nservices.AddSingleton<IHttpContextAccessor, HttpContextAccessor>();          \r\nservices.AddScoped<WorklistPagedTasksHalRepresentationConverter>();\r\n```\r\n\r\nThis is the WorklistPagedTasksHalRepresentationConverter class\r\n\r\n```C#\r\npublic class WorklistPagedTasksHalRepresentationConverter : TypeConverter<WorklistWithPagedTasks, WorklistPagedTasksHalRepresentation>\r\n    {\r\n        private readonly IHttpContextAccessor httpContextAccessor;\r\n\r\n        private readonly IMapper mapper;\r\n\r\n        public WorklistPagedTasksHalRepresentationConverter(IHttpContextAccessor httpContextAccessor, IMapper mapper)\r\n        {\r\n            this.httpContextAccessor = httpContextAccessor;\r\n            this.mapper = mapper;\r\n        }\r\n\r\n        public WorklistPagedTasksHalRepresentation Convert(WorklistWithPagedTasks source, WorklistPagedTasksHalRepresentation destination, ResolutionContext context)\r\n        {\r\n            var tasks = mapper.Map<IList<TaskSummaryHalRepresentation>>(source.Tasks.ResultPage.ToList());\r\n            var worklistPagedTasksHalRepresentation = new WorklistPagedTasksHalRepresentation(\r\n                new PaginatedResult<TaskSummaryHalRepresentation>\r\n                {\r\n                    ResultPage = tasks.AsQueryable(),\r\n                    TotalCount = source.Tasks.TotalCount,\r\n                    PageNumber = source.Tasks.PageNumber\r\n                },\r\n                httpContextAccessor.HttpContext.Request)\r\n            {\r\n                Id = source.Id,\r\n                OwnerId = source.OwnerId,\r\n                OwnerName = source.OwnerName\r\n            };\r\n            return worklistPagedTasksHalRepresentation;\r\n        }\r\n    }\r\n```\r\n\r\nThe Convert method is called by a controller method.","C#\r\nservices.AddSingleton<IHttpContextAccessor, HttpContextAccessor>();          \r\nservices.AddScoped<WorklistPagedTasksHalRepresentationConverter>();\r\n"
5055,"Generating URL with page parameter fails with new endpoint routing (regression from 2.1)This appears to be a regression due to the new endpoint routing system in 2.2. As per aspnet/Mvc#7876, using parameter names `action` and `page` is somewhat difficult, however using a `page` parameter inside an MVC action or using an `action` parameter inside of a Razor page does work fine. At least it did.\r\n\r\nWith endpoint routing activated (through the MVC compatibility switch `CompatibilityVersion.Version_2_2`), generating an action link that has a `page` parameter will now fail **iff** Razor pages exist in the same project.\r\n\r\n### Steps to reproduce\r\n#### Without Razor pages\r\n1. Create new 2.2 application from standard MVC template.\r\n2. Add an action to the `HomeController`:\r\n    \r\n3. Launch the application and open `http://localhost:5000/Home/Test?page=4`\r\n4. Observe the result which shows a generated URL `/Home/Test?page=123`.\r\n\r\n#### Add Razor pages\r\n5. Now, create a Razor page at `Pages/Foo.cshtml` with the contents `@page`.\r\n6. Launch the application and open the previous URL again.\r\n7. Observe that the generated URL is now `null`.\r\n\r\n#### Disable endpoint routing\r\n8. Disable endpoint routing by changing the `AddMvc()` call in `Startup` to set the compatibility level switch back to 2.1:\r\n    \r\n9. Launch the application and open the previous URL again.\r\n10. Observe that the URL is generated properly again.\r\n\r\n---\r\n\r\nAs you can see, endpoint routing breaks the URL generation here although the target URL exists just fine and although it also can be used properly the whole time (note that the JSON response always includes the passed `page` value). The mere presence of Razor pages should not make the URL generation treat any `page` parameter in a special way here.",bug|Done|area-mvc,rynowak,"This appears to be a regression due to the new endpoint routing system in 2.2. As per aspnet/Mvc#7876, using parameter names `action` and `page` is somewhat difficult, however using a `page` parameter inside an MVC action or using an `action` parameter inside of a Razor page does work fine. At least it did.\r\n\r\nWith endpoint routing activated (through the MVC compatibility switch `CompatibilityVersion.Version_2_2`), generating an action link that has a `page` parameter will now fail **iff** Razor pages exist in the same project.\r\n\r\n### Steps to reproduce\r\n#### Without Razor pages\r\n1. Create new 2.2 application from standard MVC template.\r\n2. Add an action to the `HomeController`:\r\n    ```c#\r\n    public IActionResult Test(int page)\r\n    {\r\n        return Json(new\r\n        {\r\n            Url = Url.Action(nameof(Test), new { page = 123 }),\r\n            Page = page,\r\n        });\r\n    }\r\n    ```\r\n3. Launch the application and open `http://localhost:5000/Home/Test?page=4`\r\n4. Observe the result which shows a generated URL `/Home/Test?page=123`.\r\n\r\n#### Add Razor pages\r\n5. Now, create a Razor page at `Pages/Foo.cshtml` with the contents `@page`.\r\n6. Launch the application and open the previous URL again.\r\n7. Observe that the generated URL is now `null`.\r\n\r\n#### Disable endpoint routing\r\n8. Disable endpoint routing by changing the `AddMvc()` call in `Startup` to set the compatibility level switch back to 2.1:\r\n    ```c#\r\n    services.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_1);\r\n    ```\r\n9. Launch the application and open the previous URL again.\r\n10. Observe that the URL is generated properly again.\r\n\r\n---\r\n\r\nAs you can see, endpoint routing breaks the URL generation here although the target URL exists just fine and although it also can be used properly the whole time (note that the JSON response always includes the passed `page` value). The mere presence of Razor pages should not make the URL generation treat any `page` parameter in a special way here.","c#\r\n    public IActionResult Test(int page)\r\n    {\r\n        return Json(new\r\n        {\r\n            Url = Url.Action(nameof(Test), new { page = 123 }),\r\n            Page = page,\r\n        });\r\n    }\r\n    "
4959,Asp Core custom Modelbinder DateTime not working in post### Describe the bug\r\nMy custom DateTimeModelBinder is working on HttpGet but not binding on HttpPost (DateTime value is always null ). How can i fix this?\r\n\r\n,question|area-mvc,dougbu,"### Describe the bug\r\nMy custom DateTimeModelBinder is working on HttpGet but not binding on HttpPost (DateTime value is always null ). How can i fix this?\r\n\r\n```csharp\r\n /// <summary>\r\n    /// \u041d\u0443\u0436\u0435\u043d \u0434\u043b\u044f \u043f\u0440\u0438\u0432\u044f\u0437\u043a\u0438 \u0434\u0430\u0442\u044b \u0444\u043e\u0440\u043c\u0430\u0442\u0430 31-01-2018 \u0438 31.01.2018 \u043a \u0434\u0430\u0442\u0435 \u0432 \u043b\u044e\u0431\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438\r\n    /// </summary>\r\n    public class DateTimeModelBinder : IModelBinder\r\n    {\r\n\r\n        string[] _customDateFormats = { ""dd.M.yyyy"", ""dd/M/yyyy"", ""dd-M-yyyy"" };\r\n\r\n        private string GetModelName(ModelBindingContext bindingContext)\r\n        {\r\n            // The ""Name"" property of the ModelBinder attribute can be used to specify the\r\n            // route parameter name when the action parameter name is different from the route parameter name.\r\n            // For instance, when the route is /api/{birthDate} and the action parameter name is ""date"".\r\n            // We can add this attribute with a Name property [DateTimeModelBinder(Name =""birthDate"")]\r\n            // Now bindingContext.BinderModelName will be ""birthDate"" and bindingContext.ModelName will be ""date""\r\n            if (!string.IsNullOrEmpty(bindingContext.BinderModelName))\r\n            {\r\n                return bindingContext.BinderModelName;\r\n            }\r\n\r\n            return bindingContext.ModelName;\r\n        }\r\n\r\n        public Task BindModelAsync(ModelBindingContext bindingContext)\r\n        {\r\n            if (bindingContext == null)\r\n            {\r\n                throw new ArgumentNullException(nameof(bindingContext));\r\n            }\r\n\r\n            if (bindingContext.ModelType != typeof(DateTime?))\r\n            {\r\n                return Task.CompletedTask;\r\n            }\r\n\r\n            var modelName = GetModelName(bindingContext);\r\n\r\n            var valueProviderResult = bindingContext.ValueProvider.GetValue(modelName);\r\n            if (valueProviderResult == ValueProviderResult.None)\r\n            {\r\n                return Task.CompletedTask;\r\n            }\r\n\r\n            bindingContext.ModelState.SetModelValue(modelName, valueProviderResult);\r\n\r\n            var dateToParse = valueProviderResult.FirstValue;\r\n\r\n            if (string.IsNullOrEmpty(dateToParse))\r\n            {\r\n                return Task.CompletedTask;\r\n            }\r\n\r\n            var dateTime = ParseDate(bindingContext, dateToParse);\r\n\r\n            bindingContext.Result = ModelBindingResult.Success(dateTime);\r\n\r\n            return Task.CompletedTask;\r\n        }\r\n\r\n        private DateTime? ParseDate(ModelBindingContext bindingContext, string dateToParse)\r\n        {\r\n            if (DateTime.TryParseExact(dateToParse, _customDateFormats, CultureInfo.InvariantCulture,DateTimeStyles.None, out DateTime dateValue))\r\n                 return dateValue;\r\n             else\r\n             {\r\n                 bindingContext.ModelState.AddModelError(bindingContext.ModelName, ""Passed date is in incorrect format"");\r\n                 return null;\r\n             }        \r\n        }\r\n    }\r\n}\r\n```","csharp\r\n /// <summary>\r\n    /// \u041d\u0443\u0436\u0435\u043d \u0434\u043b\u044f \u043f\u0440\u0438\u0432\u044f\u0437\u043a\u0438 \u0434\u0430\u0442\u044b \u0444\u043e\u0440\u043c\u0430\u0442\u0430 31-01-2018 \u0438 31.01.2018 \u043a \u0434\u0430\u0442\u0435 \u0432 \u043b\u044e\u0431\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438\r\n    /// </summary>\r\n    public class DateTimeModelBinder : IModelBinder\r\n    {\r\n\r\n        string[] _customDateFormats = { ""dd.M.yyyy"", ""dd/M/yyyy"", ""dd-M-yyyy"" };\r\n\r\n        private string GetModelName(ModelBindingContext bindingContext)\r\n        {\r\n            // The ""Name"" property of the ModelBinder attribute can be used to specify the\r\n            // route parameter name when the action parameter name is different from the route parameter name.\r\n            // For instance, when the route is /api/{birthDate} and the action parameter name is ""date"".\r\n            // We can add this attribute with a Name property [DateTimeModelBinder(Name =""birthDate"")]\r\n            // Now bindingContext.BinderModelName will be ""birthDate"" and bindingContext.ModelName will be ""date""\r\n            if (!string.IsNullOrEmpty(bindingContext.BinderModelName))\r\n            {\r\n                return bindingContext.BinderModelName;\r\n            }\r\n\r\n            return bindingContext.ModelName;\r\n        }\r\n\r\n        public Task BindModelAsync(ModelBindingContext bindingContext)\r\n        {\r\n            if (bindingContext == null)\r\n            {\r\n                throw new ArgumentNullException(nameof(bindingContext));\r\n            }\r\n\r\n            if (bindingContext.ModelType != typeof(DateTime?))\r\n            {\r\n                return Task.CompletedTask;\r\n            }\r\n\r\n            var modelName = GetModelName(bindingContext);\r\n\r\n            var valueProviderResult = bindingContext.ValueProvider.GetValue(modelName);\r\n            if (valueProviderResult == ValueProviderResult.None)\r\n            {\r\n                return Task.CompletedTask;\r\n            }\r\n\r\n            bindingContext.ModelState.SetModelValue(modelName, valueProviderResult);\r\n\r\n            var dateToParse = valueProviderResult.FirstValue;\r\n\r\n            if (string.IsNullOrEmpty(dateToParse))\r\n            {\r\n                return Task.CompletedTask;\r\n            }\r\n\r\n            var dateTime = ParseDate(bindingContext, dateToParse);\r\n\r\n            bindingContext.Result = ModelBindingResult.Success(dateTime);\r\n\r\n            return Task.CompletedTask;\r\n        }\r\n\r\n        private DateTime? ParseDate(ModelBindingContext bindingContext, string dateToParse)\r\n        {\r\n            if (DateTime.TryParseExact(dateToParse, _customDateFormats, CultureInfo.InvariantCulture,DateTimeStyles.None, out DateTime dateValue))\r\n                 return dateValue;\r\n             else\r\n             {\r\n                 bindingContext.ModelState.AddModelError(bindingContext.ModelName, ""Passed date is in incorrect format"");\r\n                 return null;\r\n             }        \r\n        }\r\n    }\r\n}\r\n"
4549,"IUrlHelper behave strange for new version of .net core 2.2_From @benzhi2011 on Wednesday, 05 December 2018 15:00:37_\r\n\r\nIUrlHelper behave strange for new version of .net core 2.2\r\n\r\nHelper method that is working for all early version\r\n\r\nabout one line of code return the Url of the executing MVC controller, in my case here it should return DNS + /Login/SSO and this code has been working for .core 1.1 and 2.1\r\n\r\nAfter I updated to 2.2 this  serviceUrl return DNS + /Contact/SSO when I call it from Login controller method SSO. This is really weird.\r\n\r\n\r\n\r\n\r\n_Copied from original issue: dotnet/core#2107_",investigate|area-mvc,JamesNK,"_From @benzhi2011 on Wednesday, 05 December 2018 15:00:37_\r\n\r\nIUrlHelper behave strange for new version of .net core 2.2\r\n\r\nHelper method that is working for all early version\r\n```c#\r\n    public static string AbsoluteRouteUrl(\r\n    this IUrlHelper url,\r\n    string routeName,\r\n    object routeValues = null)\r\n    {\r\n        return url.RouteUrl(routeName, routeValues, url.ActionContext.HttpContext.Request.Scheme);\r\n     }\r\n\r\n    string serviceUrl = Url.AbsoluteRouteUrl(""default"");\r\n```\r\nabout one line of code return the Url of the executing MVC controller, in my case here it should return DNS + /Login/SSO and this code has been working for .core 1.1 and 2.1\r\n\r\nAfter I updated to 2.2 this  serviceUrl return DNS + /Contact/SSO when I call it from Login controller method SSO. This is really weird.\r\n\r\n\r\n\r\n\r\n_Copied from original issue: dotnet/core#2107_","c#\r\n    public static string AbsoluteRouteUrl(\r\n    this IUrlHelper url,\r\n    string routeName,\r\n    object routeValues = null)\r\n    {\r\n        return url.RouteUrl(routeName, routeValues, url.ActionContext.HttpContext.Request.Scheme);\r\n     }\r\n\r\n    string serviceUrl = Url.AbsoluteRouteUrl(""default"");\r\n"
4951,"Api analyzer does't recognize `ApiConventionType` on a base controller#### Is this a Bug or Feature request?:\r\nBug.\r\n\r\n#### Steps to reproduce:\r\n\r\n\r\n\r\n\r\n#### Description of the problem:\r\n\r\nIn child controllers, the analyzer doesn't realize that there is an api convention being applied and it produces warnings. A workaround is to apply the convention on assembly level.\r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`:\r\n\r\nUsing Asp.Net Core 2.2.\r\n\r\n\r\n<!--\r\n                                    --- NOTE ---\r\n1.  Try enabling logging (in the most verbose level) and see if the details help you in fixing\r\n    the issue you are seeing. Share the logs too if it helps in diagnosing the issue faster.\r\n    More info: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/logging\r\n\r\n2.  If you are seeing an exception, include the full exceptions details (message and stack trace).\r\n    More info: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/error-handling\r\n\r\n3.  If you believe you have an issue that affects the security of the platform please do\r\n    not create an issue, instead email your issue to 'secure@microsoft.com'. Your report may\r\n    be eligible for our bug bounty. More info: https://technet.microsoft.com/en-us/mt764065.aspx\r\n-->\r\n",bug|Done|area-mvc,pranavkm,"#### Is this a Bug or Feature request?:\r\nBug.\r\n\r\n#### Steps to reproduce:\r\n```cs\r\n[ApiConventionType(typeof(DefaultApiConventions))]\r\npublic abstract class MyBaseController : ControllerBase\r\n```\r\n\r\n```cs\r\npublic class SomeController : MyBaseController\r\n{\r\n\t[HttpGet]\r\n\tpublic async Task<ActionResult<SomeDto>> Get(string id)\r\n\t{\r\n\t\tvar result = await GetData(id);\r\n\t\tif (result == null)\r\n\t\t{\r\n\t\t\treturn NotFound(); // WARNING: undocumented \r\n\t\t}\r\n\r\n\t\treturn Ok(result);\r\n\t}\r\n}\r\n```\r\n\r\n#### Description of the problem:\r\n\r\nIn child controllers, the analyzer doesn't realize that there is an api convention being applied and it produces warnings. A workaround is to apply the convention on assembly level.\r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`:\r\n\r\nUsing Asp.Net Core 2.2.\r\n\r\n\r\n<!--\r\n                                    --- NOTE ---\r\n1.  Try enabling logging (in the most verbose level) and see if the details help you in fixing\r\n    the issue you are seeing. Share the logs too if it helps in diagnosing the issue faster.\r\n    More info: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/logging\r\n\r\n2.  If you are seeing an exception, include the full exceptions details (message and stack trace).\r\n    More info: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/error-handling\r\n\r\n3.  If you believe you have an issue that affects the security of the platform please do\r\n    not create an issue, instead email your issue to 'secure@microsoft.com'. Your report may\r\n    be eligible for our bug bounty. More info: https://technet.microsoft.com/en-us/mt764065.aspx\r\n-->\r\n",cs\r\n[ApiConventionType(typeof(DefaultApiConventions))]\r\npublic abstract class MyBaseController : ControllerBase\r\n
4480,"Api Analyzer crashes, when trying to see potential fixesCreate a new ASP.NET Core API project, and in the default controller add the following code:\r\n\r\nThere will be a squiggle under the `NotFound()` method. Click to show potential fix and it will crash with the following error:\r\n\r\n```\r\nSystem.ArgumentException : An item with the same key has already been added.\r\n   at System.ThrowHelper.ThrowArgumentException(ExceptionResource resource)\r\n   at System.Collections.Generic.Dictionary`2.Insert(TKey key,TValue value,Boolean add)\r\n   at Microsoft.AspNetCore.Mvc.Api.Analyzers.AddResponseTypeAttributeCodeFixAction.CalculateStatusCodesToApply(CodeActionContext& context,IList`1 declaredResponseMetadata)\r\n   at async Microsoft.AspNetCore.Mvc.Api.Analyzers.AddResponseTypeAttributeCodeFixAction.GetChangedDocumentAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeActions.CodeAction.GetChangedSolutionAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeActions.CodeAction.ComputeOperationsAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeActions.CodeAction.GetPreviewOperationsAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedAction.GetPreviewResultAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedActionWithNestedFlavors.<>c__DisplayClass11_0.<GetPreviewAsync>b__0(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.Extensions.IExtensionManagerExtensions.PerformFunctionAsync[T](<Unknown Parameters>)\r\n```\r\nThe issue doesn't reproduce, if one of the `NotFound` returns is removed.",bug|Done|area-mvc,pranavkm,"Create a new ASP.NET Core API project, and in the default controller add the following code:\r\n```csharp\r\n    public class Person\r\n    {\r\n        public int Id { get; set; }\r\n        public string Name { get; set; }\r\n    }\r\n\r\npublic static List<Person> People = new List<Person>()\r\n        {\r\n            new Person { Id = 0, Name = ""S1"" },\r\n            new Person { Id = 1, Name = ""S2""},\r\n            new Person { Id = 2, Name = ""S3""}\r\n        };\r\n\r\n[HttpGet(""{id}"")]\r\n        public ActionResult<Person> Get(int id)\r\n        {\r\n            if (id < 0)\r\n            {\r\n                return NotFound();\r\n            }\r\n            var person = People.Where(p => p.Id == id);\r\n            if (person != null)\r\n            {\r\n                return Ok(person);\r\n            } else\r\n            {\r\n                return NotFound();\r\n            }\r\n        }\r\n```\r\nThere will be a squiggle under the `NotFound()` method. Click to show potential fix and it will crash with the following error:\r\n\r\n```\r\nSystem.ArgumentException : An item with the same key has already been added.\r\n   at System.ThrowHelper.ThrowArgumentException(ExceptionResource resource)\r\n   at System.Collections.Generic.Dictionary`2.Insert(TKey key,TValue value,Boolean add)\r\n   at Microsoft.AspNetCore.Mvc.Api.Analyzers.AddResponseTypeAttributeCodeFixAction.CalculateStatusCodesToApply(CodeActionContext& context,IList`1 declaredResponseMetadata)\r\n   at async Microsoft.AspNetCore.Mvc.Api.Analyzers.AddResponseTypeAttributeCodeFixAction.GetChangedDocumentAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeActions.CodeAction.GetChangedSolutionAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeActions.CodeAction.ComputeOperationsAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeActions.CodeAction.GetPreviewOperationsAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedAction.GetPreviewResultAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedActionWithNestedFlavors.<>c__DisplayClass11_0.<GetPreviewAsync>b__0(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.Extensions.IExtensionManagerExtensions.PerformFunctionAsync[T](<Unknown Parameters>)\r\n```\r\nThe issue doesn't reproduce, if one of the `NotFound` returns is removed.","csharp\r\n    public class Person\r\n    {\r\n        public int Id { get; set; }\r\n        public string Name { get; set; }\r\n    }\r\n\r\npublic static List<Person> People = new List<Person>()\r\n        {\r\n            new Person { Id = 0, Name = ""S1"" },\r\n            new Person { Id = 1, Name = ""S2""},\r\n            new Person { Id = 2, Name = ""S3""}\r\n        };\r\n\r\n[HttpGet(""{id}"")]\r\n        public ActionResult<Person> Get(int id)\r\n        {\r\n            if (id < 0)\r\n            {\r\n                return NotFound();\r\n            }\r\n            var person = People.Where(p => p.Id == id);\r\n            if (person != null)\r\n            {\r\n                return Ok(person);\r\n            } else\r\n            {\r\n                return NotFound();\r\n            }\r\n        }\r\n"
4468,"Cannot generate routes that are defined but not implemented in ASP.NET Core 2.2.0 compared to 2.1.x### Describe the bug\r\n\r\nIn ASP.NET Core 2.1.x, it was possible to define routes without having to implement handlers for them and then use `IUrlHelper` to build URLs for these routes in the application.\r\n\r\nThis was useful for microservice scenarios where multiple applications are deployed behind a load balancer for the same domain name and could generate URLs for other applications. For example, you could use them for `Location` HTTP response headers and other HATEOS/HAL-style scenarios where links to other resources servied by other applications are contained in the response.\r\n\r\nIn ASP.NET Core 2.2.0, attempts to build such routes using `IUrlHelper` just return `null`.\r\n\r\nThe previous behaviour can be restored by setting `MvcOptions.EnableEndpointRouting` to `false`.\r\n\r\n### To Reproduce\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\nRoutes can be defined and built with `IUrlHelper` or `LinkGenerator`, even if they do not map to an MVC action.\r\n",Done|investigate|area-mvc,JamesNK,"### Describe the bug\r\n\r\nIn ASP.NET Core 2.1.x, it was possible to define routes without having to implement handlers for them and then use `IUrlHelper` to build URLs for these routes in the application.\r\n\r\nThis was useful for microservice scenarios where multiple applications are deployed behind a load balancer for the same domain name and could generate URLs for other applications. For example, you could use them for `Location` HTTP response headers and other HATEOS/HAL-style scenarios where links to other resources servied by other applications are contained in the response.\r\n\r\nIn ASP.NET Core 2.2.0, attempts to build such routes using `IUrlHelper` just return `null`.\r\n\r\nThe previous behaviour can be restored by setting `MvcOptions.EnableEndpointRouting` to `false`.\r\n\r\n### To Reproduce\r\n\r\n```csharp\r\npublic void Configure(IApplicationBuilder app)\r\n{\r\n    app.UseMvc(\r\n        (routes) =>\r\n        {\r\n            routes.MapRoute(\r\n                name: ""default"",\r\n                template: ""{controller=Home}/{action=Index}/{id?}"");\r\n\r\n            routes.MapRoute(""foo"", ""/foo/foo"");\r\n            routes.MapRoute(""bar"", ""/bar/bar/{id}"");\r\n        });\r\n}\r\n\r\npublic IActionResult Index()\r\n{\r\n    var data =  new\r\n    {\r\n        foo = urlHelper.RouteUrl(""foo"", new { page = 1 }),    // Actual: null; Expected: ""/foo/foo?page=1""\r\n        bar = urlHelper.RouteUrl(""bar"", new { id = ""myId"" }), // Actual: null; Expected: ""/bar/bar/myId""\r\n    };\r\n\r\n    return Ok(data);\r\n}\r\n```\r\n\r\n### Expected behavior\r\n\r\nRoutes can be defined and built with `IUrlHelper` or `LinkGenerator`, even if they do not map to an MVC action.\r\n","csharp\r\npublic void Configure(IApplicationBuilder app)\r\n{\r\n    app.UseMvc(\r\n        (routes) =>\r\n        {\r\n            routes.MapRoute(\r\n                name: ""default"",\r\n                template: ""{controller=Home}/{action=Index}/{id?}"");\r\n\r\n            routes.MapRoute(""foo"", ""/foo/foo"");\r\n            routes.MapRoute(""bar"", ""/bar/bar/{id}"");\r\n        });\r\n}\r\n\r\npublic IActionResult Index()\r\n{\r\n    var data =  new\r\n    {\r\n        foo = urlHelper.RouteUrl(""foo"", new { page = 1 }),    // Actual: null; Expected: ""/foo/foo?page=1""\r\n        bar = urlHelper.RouteUrl(""bar"", new { id = ""myId"" }), // Actual: null; Expected: ""/bar/bar/myId""\r\n    };\r\n\r\n    return Ok(data);\r\n}\r\n"
4439,"Microsoft.AspNetCore.Mvc.Api.Analyzers not respecting XML comments.### Describe the bug\r\n\r\nWhen I first installed `Microsoft.AspNetCore.Mvc.Api.Analyzers` I got a ton of: \r\n\r\n> Action method returns undeclared status code '404'.\r\n\r\nAfter clicking on them, they went away. Swashbuckle supports a nonstandard XML comment `<response ...` [as seen here.](https://github.com/domaindrivendev/Swashbuckle#response-codes). Is this supported?\r\n\r\nIt also has an attribute for [`[SwaggerResponse(404...`](https://github.com/domaindrivendev/Swashbuckle.AspNetCore#enrich-response-metadata) is this support in lieu of `[ProducesResponseType]`? I assume so since [it inherits from `ProducesResponseTypeAttribute`](https://github.com/domaindrivendev/Swashbuckle.AspNetCore/blob/master/src/Swashbuckle.AspNetCore.Annotations/SwaggerResponseAttribute.cs). But i didn't see any of this information in the announcement [here](https://blogs.msdn.microsoft.com/webdev/2018/08/23/asp-net-core-2-20-preview1-open-api-analyzers-conventions/).\r\n\r\nAre we locked into using `[ProducesResponseType]` and/or `[SwaggerResponse]`?\r\n\r\n### To Reproduce\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\nIf `/// <response ...`  XML tags are used to state we return a 404, then the `Microsoft.AspNetCore.Mvc.Api.Analyzers` should not complain about it because this is official supported by Swashbuckle and the correct Swagger doc will in fact be generated. Just as it would by using `[SwaggerResponse]` and `[ProducesResponseType]`.\r\n\r\n### Screenshots\r\n\r\nIf applicable, add screenshots to help explain your problem.\r\n![image](https://user-images.githubusercontent.com/2934507/49542206-8da73e00-f89a-11e8-9518-f00d411e964f.png)\r\n\r\n\r\n### Additional context\r\n\r\nTo see why I want this, it might be helpful to see this discussion I had with @domaindrivendev https://github.com/domaindrivendev/Swashbuckle.AspNetCore/issues/816#issuecomment-405442154\r\n",area-mvc|Needs: Spec,glennc,"### Describe the bug\r\n\r\nWhen I first installed `Microsoft.AspNetCore.Mvc.Api.Analyzers` I got a ton of: \r\n\r\n> Action method returns undeclared status code '404'.\r\n\r\nAfter clicking on them, they went away. Swashbuckle supports a nonstandard XML comment `<response ...` [as seen here.](https://github.com/domaindrivendev/Swashbuckle#response-codes). Is this supported?\r\n\r\nIt also has an attribute for [`[SwaggerResponse(404...`](https://github.com/domaindrivendev/Swashbuckle.AspNetCore#enrich-response-metadata) is this support in lieu of `[ProducesResponseType]`? I assume so since [it inherits from `ProducesResponseTypeAttribute`](https://github.com/domaindrivendev/Swashbuckle.AspNetCore/blob/master/src/Swashbuckle.AspNetCore.Annotations/SwaggerResponseAttribute.cs). But i didn't see any of this information in the announcement [here](https://blogs.msdn.microsoft.com/webdev/2018/08/23/asp-net-core-2-20-preview1-open-api-analyzers-conventions/).\r\n\r\nAre we locked into using `[ProducesResponseType]` and/or `[SwaggerResponse]`?\r\n\r\n### To Reproduce\r\n\r\n```csharp\r\n/// <summary>\r\n/// Gets a single Product.\r\n/// </summary>\r\n/// <param name=""productId"">The requested Product identifier.</param>\r\n/// <returns>The requested Product.</returns>\r\n/// <response code=""200"">The Product was successfully retrieved.</response>\r\n/// <response code=""404"">The Product does not exist.</response>\r\n[HttpGet(""{productId}"", Name = ITILLifecycleControllerRoute.GetProduct)]\r\n[HttpHead(""{productId}"", Name = ITILLifecycleControllerRoute.HeadProduct)]\r\npublic async Task<ActionResult<ProductViewModel>> Get(int productId)\r\n{\r\n    var product = await _genericGetters.GetByIdAsync(productId);\r\n\r\n    if (product == null)\r\n    {\r\n        return NotFound();\r\n    }\r\n\r\n    return product;\r\n}\r\n```\r\n\r\n### Expected behavior\r\n\r\nIf `/// <response ...`  XML tags are used to state we return a 404, then the `Microsoft.AspNetCore.Mvc.Api.Analyzers` should not complain about it because this is official supported by Swashbuckle and the correct Swagger doc will in fact be generated. Just as it would by using `[SwaggerResponse]` and `[ProducesResponseType]`.\r\n\r\n### Screenshots\r\n\r\nIf applicable, add screenshots to help explain your problem.\r\n![image](https://user-images.githubusercontent.com/2934507/49542206-8da73e00-f89a-11e8-9518-f00d411e964f.png)\r\n\r\n\r\n### Additional context\r\n\r\nTo see why I want this, it might be helpful to see this discussion I had with @domaindrivendev https://github.com/domaindrivendev/Swashbuckle.AspNetCore/issues/816#issuecomment-405442154\r\n","csharp\r\n/// <summary>\r\n/// Gets a single Product.\r\n/// </summary>\r\n/// <param name=""productId"">The requested Product identifier.</param>\r\n/// <returns>The requested Product.</returns>\r\n/// <response code=""200"">The Product was successfully retrieved.</response>\r\n/// <response code=""404"">The Product does not exist.</response>\r\n[HttpGet(""{productId}"", Name = ITILLifecycleControllerRoute.GetProduct)]\r\n[HttpHead(""{productId}"", Name = ITILLifecycleControllerRoute.HeadProduct)]\r\npublic async Task<ActionResult<ProductViewModel>> Get(int productId)\r\n{\r\n    var product = await _genericGetters.GetByIdAsync(productId);\r\n\r\n    if (product == null)\r\n    {\r\n        return NotFound();\r\n    }\r\n\r\n    return product;\r\n}\r\n"
5666,"Update to SDK 2.2.100 throws ""An item with the same key has already been added. Key: .wasm""I updated my Blazor project from `2.2.100-preview3-009430` to `2.2.100` release. I now get the following exception:\r\n\r\n\r\n\r\nThe line\r\n`app.UseServerSideBlazor<Client.Startup>();`\r\nseems to be the reason. \r\n\r\nAny suggestions?",bug|Done|area-blazor,SteveSandersonMS,"I updated my Blazor project from `2.2.100-preview3-009430` to `2.2.100` release. I now get the following exception:\r\n\r\n```C#\r\nSystem.ArgumentException : An item with the same key has already been added. Key: .wasm\r\nStack Trace:\r\n   at System.Collections.Generic.Dictionary`2.TryInsert(TKey key, TValue value, InsertionBehavior behavior)\r\n   at System.Collections.Generic.Dictionary`2.Add(TKey key, TValue value)\r\n   at Microsoft.AspNetCore.Builder.BlazorApplicationBuilderExtensions.CreateContentTypeProvider(Boolean enableDebugging)\r\n   at Microsoft.AspNetCore.Builder.BlazorApplicationBuilderExtensions.UseBlazor(IApplicationBuilder app, BlazorOptions options)\r\n   at Microsoft.AspNetCore.Builder.ServerSideBlazorApplicationBuilderExtensions.UseServerSideBlazor[TStartup](IApplicationBuilder builder)\r\n   at OpenGraphTilemaker.Web.Server.Startup.Configure(IApplicationBuilder app, IHostingEnvironment env) in C:\\Users\\flynn\\Projects\\OpenGraphTilemaker\\src\\OpenGraphTilemaker.Web.Server\\Startup.cs:line 36\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Hosting.ConventionBasedStartup.Configure(IApplicationBuilder app)\r\n   at Microsoft.AspNetCore.HostFilteringStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder app)\r\n   at Microsoft.AspNetCore.Hosting.Internal.AutoRequestServicesStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder builder)\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.StartAsync(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.TestHost.TestServer..ctor(IWebHostBuilder builder, IFeatureCollection featureCollection)\r\n   at Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.CreateServer(IWebHostBuilder builder)\r\n   at Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.EnsureServer()\r\n   at Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.CreateDefaultClient(DelegatingHandler[] handlers)\r\n   at Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.CreateClient(WebApplicationFactoryClientOptions options)\r\n   at OpenGraphTilemaker.Web.Client.Tests.FunctionalTests.Get_EndpointsReturnSuccessAndCorrectContentType(String url) in C:\\Users\\flynn\\Projects\\OpenGraphTilemaker\\tests\\OpenGraphTilemaker.Web.Client.Tests\\FunctionalTests.cs:line 25\r\n--- End of stack trace from previous location where exception was thrown ---\r\n```\r\n\r\nThe line\r\n`app.UseServerSideBlazor<Client.Startup>();`\r\nseems to be the reason. \r\n\r\nAny suggestions?","C#\r\nSystem.ArgumentException : An item with the same key has already been added. Key: .wasm\r\nStack Trace:\r\n   at System.Collections.Generic.Dictionary`2.TryInsert(TKey key, TValue value, InsertionBehavior behavior)\r\n   at System.Collections.Generic.Dictionary`2.Add(TKey key, TValue value)\r\n   at Microsoft.AspNetCore.Builder.BlazorApplicationBuilderExtensions.CreateContentTypeProvider(Boolean enableDebugging)\r\n   at Microsoft.AspNetCore.Builder.BlazorApplicationBuilderExtensions.UseBlazor(IApplicationBuilder app, BlazorOptions options)\r\n   at Microsoft.AspNetCore.Builder.ServerSideBlazorApplicationBuilderExtensions.UseServerSideBlazor[TStartup](IApplicationBuilder builder)\r\n   at OpenGraphTilemaker.Web.Server.Startup.Configure(IApplicationBuilder app, IHostingEnvironment env) in C:\\Users\\flynn\\Projects\\OpenGraphTilemaker\\src\\OpenGraphTilemaker.Web.Server\\Startup.cs:line 36\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Hosting.ConventionBasedStartup.Configure(IApplicationBuilder app)\r\n   at Microsoft.AspNetCore.HostFilteringStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder app)\r\n   at Microsoft.AspNetCore.Hosting.Internal.AutoRequestServicesStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder builder)\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.StartAsync(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.TestHost.TestServer..ctor(IWebHostBuilder builder, IFeatureCollection featureCollection)\r\n   at Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.CreateServer(IWebHostBuilder builder)\r\n   at Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.EnsureServer()\r\n   at Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.CreateDefaultClient(DelegatingHandler[] handlers)\r\n   at Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.CreateClient(WebApplicationFactoryClientOptions options)\r\n   at OpenGraphTilemaker.Web.Client.Tests.FunctionalTests.Get_EndpointsReturnSuccessAndCorrectContentType(String url) in C:\\Users\\flynn\\Projects\\OpenGraphTilemaker\\tests\\OpenGraphTilemaker.Web.Client.Tests\\FunctionalTests.cs:line 25\r\n--- End of stack trace from previous location where exception was thrown ---\r\n"
4396,"Content-Type Enforcement LogicIt appears that when upgrading from ASP.Net Core 2.1.x libraries to 2.2.0, our existing MVC controllers exhibit issues with GET requests for JSON content returning 415 errors. Example controller definition:\r\n\r\n\r\n\r\nSteps to reproduce the behavior:\r\n1. Create .NET Framework 4.6.2 project.\r\n1. Install ASP.NET Core 2.1.x.\r\n1. Create a controller similar to the above example.\r\n1. Attempt to request the resource `GET /Test` w/out explicitly specifying `Content-Type application/json` header.\r\n1. JSON response body is returned as expected.\r\n1. Update all ASP.NET Core libraries to the 2.2.0 version.\r\n1. Retry `4.` above and you should see a HTTP 415 response.\r\n\r\nAdditionally, we find that removal of the `[Consumes(""application/json"")]` attribute at the class-level will restore the former behavior under the 2.2.0 version, but we are skeptical that this would continue to function as expected for all of our other POST methods which _do_ consume JSON content. Alternatively, we could specify these `[Consumes(""application/json"")]` attributes at a per-method-call level if that is the actual intent here.\r\n\r\nI am simply looking to understand if this is an intentional change in behavior or a bug. I feel as if GET requests should be exempt from this apparent new Content-Type constraint (especially if declared in the class scope), but there are likely other considerations at play.",investigate|area-mvc,JamesNK,"It appears that when upgrading from ASP.Net Core 2.1.x libraries to 2.2.0, our existing MVC controllers exhibit issues with GET requests for JSON content returning 415 errors. Example controller definition:\r\n\r\n```csharp\r\n[Route(""Test"")]\r\n[Produces(""application/json"")]\r\n[Consumes(""application/json"")]\r\npublic class TestController : Controller\r\n{\r\n    [HttpGet]\r\n    [ProducesResponseType(typeof(IEnumerable<string>), 200)]\r\n    public async Task<IActionResult> GetTestAsync()\r\n    {\r\n        var results = new List<string>() { ""1"", ""2"", ""3"" };\r\n        return Json(results);\r\n    }\r\n\r\n    //Also some potential [HttpPost] items down here as well that accept JSON as [FromBody] args.\r\n    //This is an important consideration as some of our controllers have 50+ methods covering GET/POST/PUT/etc.\r\n}\r\n```\r\n\r\nSteps to reproduce the behavior:\r\n1. Create .NET Framework 4.6.2 project.\r\n1. Install ASP.NET Core 2.1.x.\r\n1. Create a controller similar to the above example.\r\n1. Attempt to request the resource `GET /Test` w/out explicitly specifying `Content-Type application/json` header.\r\n1. JSON response body is returned as expected.\r\n1. Update all ASP.NET Core libraries to the 2.2.0 version.\r\n1. Retry `4.` above and you should see a HTTP 415 response.\r\n\r\nAdditionally, we find that removal of the `[Consumes(""application/json"")]` attribute at the class-level will restore the former behavior under the 2.2.0 version, but we are skeptical that this would continue to function as expected for all of our other POST methods which _do_ consume JSON content. Alternatively, we could specify these `[Consumes(""application/json"")]` attributes at a per-method-call level if that is the actual intent here.\r\n\r\nI am simply looking to understand if this is an intentional change in behavior or a bug. I feel as if GET requests should be exempt from this apparent new Content-Type constraint (especially if declared in the class scope), but there are likely other considerations at play.","csharp\r\n[Route(""Test"")]\r\n[Produces(""application/json"")]\r\n[Consumes(""application/json"")]\r\npublic class TestController : Controller\r\n{\r\n    [HttpGet]\r\n    [ProducesResponseType(typeof(IEnumerable<string>), 200)]\r\n    public async Task<IActionResult> GetTestAsync()\r\n    {\r\n        var results = new List<string>() { ""1"", ""2"", ""3"" };\r\n        return Json(results);\r\n    }\r\n\r\n    //Also some potential [HttpPost] items down here as well that accept JSON as [FromBody] args.\r\n    //This is an important consideration as some of our controllers have 50+ methods covering GET/POST/PUT/etc.\r\n}\r\n"
5840,"UserStore.UpdateAsync should not always attach TUser entityIf you set AutoSaveChanges to false and call more then one method of UserManager, you receive DbUpdateConcurrencyException.\r\n\r\n> DbUpdateConcurrencyException: Database operation expected to affect 1 row(s) but actually affected 0 row(s). Data may have been modified or deleted since entities were loaded. See http://go.microsoft.com/fwlink/?LinkId=527962 for information on understanding and handling optimistic concurrency exceptions.\r\n\r\nTo reproduce exception, setup custom UserStore:\r\n\r\nThen call this example:\r\n\r\nEvery call of UserManager.AddClaimAsync method internaly calls UserStore.UpdateAsync. This method Context.Attach() and updates ConcurrencyStamp. Because Context.Attach() always attach entity as Unchanged the second call of AddClaimAsync overrides ""OriginalValue"" of ConcurrencyStamp.\r\nAnd this cause exception on DbContext.SaveChangesAsync because generated SQL update query a use wrong value of ConcurrencyStamp in where clause.\r\n\r\nI think that this line:\r\nhttps://github.com/aspnet/Identity/blob/8003a5550e7c9b02de035de04b0758f898d8237f/src/EF/UserStore.cs#L185\r\nshould by replaced by this:\r\n\r\nWhat do you think? Thanks\r\n",bug|area-identity,ajcvickers,"If you set AutoSaveChanges to false and call more then one method of UserManager, you receive DbUpdateConcurrencyException.\r\n\r\n> DbUpdateConcurrencyException: Database operation expected to affect 1 row(s) but actually affected 0 row(s). Data may have been modified or deleted since entities were loaded. See http://go.microsoft.com/fwlink/?LinkId=527962 for information on understanding and handling optimistic concurrency exceptions.\r\n\r\nTo reproduce exception, setup custom UserStore:\r\n```csharp\r\npublic class IdentityUserStore : UserStore<ApplicationUser>\r\n{\r\n  public IdentityUserStore(ApplicationDbContext context, IdentityErrorDescriber describer = null) : base(context, describer)\r\n  {\r\n    this.AutoSaveChanges = false;\r\n  }\r\n}\r\n// and register custom user store in Startup.cs\r\nservices.AddIdentity<ApplicationUser, IdentityRole>()\r\n                .AddEntityFrameworkStores<ApplicationDbContext>()\r\n                .AddUserStore<IdentityUserStore>()\r\n                .AddDefaultTokenProviders();\r\n```\r\nThen call this example:\r\n```csharp\r\nvar user = await _userManager.FindByEmailAsync(""test@user.cz"");\r\nvar claim1 = new Claim(""TestClaim1"", ""one"");\r\nvar res1 = await _userManager.AddClaimAsync(user, claim1);\r\nvar claim2 = new Claim(""TestClaim2"", ""two"");\r\nvar res2 = await _userManager.AddClaimAsync(user, claim2);\r\nawait _dbContext.SaveChangesAsync(); // DbUpdateConcurrencyException\r\n```\r\nEvery call of UserManager.AddClaimAsync method internaly calls UserStore.UpdateAsync. This method Context.Attach() and updates ConcurrencyStamp. Because Context.Attach() always attach entity as Unchanged the second call of AddClaimAsync overrides ""OriginalValue"" of ConcurrencyStamp.\r\nAnd this cause exception on DbContext.SaveChangesAsync because generated SQL update query a use wrong value of ConcurrencyStamp in where clause.\r\n\r\nI think that this line:\r\nhttps://github.com/aspnet/Identity/blob/8003a5550e7c9b02de035de04b0758f898d8237f/src/EF/UserStore.cs#L185\r\nshould by replaced by this:\r\n```csharp\r\nvar entry = Context.Entry(user);\r\nif (entry.State == EntityState.Detached)\r\n  Context.Attach(user);\r\n```\r\nWhat do you think? Thanks\r\n","csharp\r\npublic class IdentityUserStore : UserStore<ApplicationUser>\r\n{\r\n  public IdentityUserStore(ApplicationDbContext context, IdentityErrorDescriber describer = null) : base(context, describer)\r\n  {\r\n    this.AutoSaveChanges = false;\r\n  }\r\n}\r\n// and register custom user store in Startup.cs\r\nservices.AddIdentity<ApplicationUser, IdentityRole>()\r\n                .AddEntityFrameworkStores<ApplicationDbContext>()\r\n                .AddUserStore<IdentityUserStore>()\r\n                .AddDefaultTokenProviders();\r\n"
4175,"Controllers in entry assembly are not getting discovered automatically in 3.0Likely the result of #4061. \r\n\r\nControllers are not getting discovered in simple apps, such as `dotnet new mvc`. Instead, the app fails with 404.\r\n\r\n**Workaround**\r\n\r\n\r\ncc @pranavkm @Eilon @mkArtakMSFT - this seems like a critical bug to fix for preview1",area-mvc,natemcmaster,"Likely the result of #4061. \r\n\r\nControllers are not getting discovered in simple apps, such as `dotnet new mvc`. Instead, the app fails with 404.\r\n\r\n**Workaround**\r\n```c#\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n\t\t\t/// ...\r\n            var mvcBuilder = services.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_2);\r\n            ConfigureControllers(mvcBuilder.PartManager);\r\n        }\r\n\r\n\t\t\r\n        private void ConfigureControllers(ApplicationPartManager applicationPartManager)\r\n        {\r\n            var thisAssembly = typeof(Startup).Assembly;\r\n            var partFactory = ApplicationPartFactory.GetApplicationPartFactory(thisAssembly);\r\n            foreach (var part in partFactory.GetApplicationParts(thisAssembly))\r\n            {\r\n                applicationPartManager.ApplicationParts.Add(part);\r\n            }\r\n\r\n            var relatedAssemblies = RelatedAssemblyAttribute.GetRelatedAssemblies(thisAssembly, throwOnError: true);\r\n            foreach (var assembly in relatedAssemblies)\r\n            {\r\n                partFactory = ApplicationPartFactory.GetApplicationPartFactory(assembly);\r\n                foreach (var part in partFactory.GetApplicationParts(assembly))\r\n                {\r\n                    applicationPartManager.ApplicationParts.Add(part);\r\n                }\r\n            }\r\n        }\r\n```\r\n\r\ncc @pranavkm @Eilon @mkArtakMSFT - this seems like a critical bug to fix for preview1","c#\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n\t\t\t/// ...\r\n            var mvcBuilder = services.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_2);\r\n            ConfigureControllers(mvcBuilder.PartManager);\r\n        }\r\n\r\n\t\t\r\n        private void ConfigureControllers(ApplicationPartManager applicationPartManager)\r\n        {\r\n            var thisAssembly = typeof(Startup).Assembly;\r\n            var partFactory = ApplicationPartFactory.GetApplicationPartFactory(thisAssembly);\r\n            foreach (var part in partFactory.GetApplicationParts(thisAssembly))\r\n            {\r\n                applicationPartManager.ApplicationParts.Add(part);\r\n            }\r\n\r\n            var relatedAssemblies = RelatedAssemblyAttribute.GetRelatedAssemblies(thisAssembly, throwOnError: true);\r\n            foreach (var assembly in relatedAssemblies)\r\n            {\r\n                partFactory = ApplicationPartFactory.GetApplicationPartFactory(assembly);\r\n                foreach (var part in partFactory.GetApplicationParts(assembly))\r\n                {\r\n                    applicationPartManager.ApplicationParts.Add(part);\r\n                }\r\n            }\r\n        }\r\n"
4212,"Link generation behaviour change: page to controller in areaLinking from a page in an area to a controller in the same area, without specifying the area is changing.\r\n\r\n* Succeeded in 2.1\r\n* Succeeded in 2.2 (unintentionally)\r\n* Fails in 3.0 (current behaviour)\r\n\r\nWe could make 3.0 succeed with a moderate amount of additional work. The question is whether anyone is doing this and if it is important to customers.\r\n\r\nThis issue is something to evaluate near the end of 3.0 to make a decision.\r\n\r\nAffected test: PagesInAreas_CanGenerateLinksToControllersAndPages\r\n\r\n\r\nPR that is changing this - https://github.com/aspnet/Routing/pull/914",Done|area-mvc,rynowak,"Linking from a page in an area to a controller in the same area, without specifying the area is changing.\r\n\r\n* Succeeded in 2.1\r\n* Succeeded in 2.2 (unintentionally)\r\n* Fails in 3.0 (current behaviour)\r\n\r\nWe could make 3.0 succeed with a moderate amount of additional work. The question is whether anyone is doing this and if it is important to customers.\r\n\r\nThis issue is something to evaluate near the end of 3.0 to make a decision.\r\n\r\nAffected test: PagesInAreas_CanGenerateLinksToControllersAndPages\r\n```cs\r\n<a asp-controller=""Home"" asp-action=""Index"">Link to area action</a>\r\n```\r\n\r\nPR that is changing this - https://github.com/aspnet/Routing/pull/914","cs\r\n<a asp-controller=""Home"" asp-action=""Index"">Link to area action</a>\r\n"
4946,"JsonInputFromatter validation issue#### Is this a Bug or Feature request?:\r\nBug\r\n\r\n#### Steps to reproduce (preferably a link to a GitHub repo with a repro project):\r\n1. You have an action in a Controller\r\n2. The action has a requestModel with array of integers\r\n3. You send a request to the action with invalid model - for example array with string.Empty instead integers\r\n4. You expect to receive BadRequest, but you will receive Http Ok after a long period of time\r\n\r\nI've attached the repo to reproduce this issue https://github.com/ArtemAstashkin/JsonInputFormatterTest\r\n\r\n1) The repo has 2 projects (Web and Web.Tests). Web has HomeController and Post action with RequestModel \r\n\r\n2) The Web.Tests project has only one specific test to reproduce the issue\r\n\r\n\r\nThe test will fail. But, if you change 621 to 199 it will pass.\r\n\r\n#### Description of the problem:\r\nThe issue is related to the JsonInputFormatter which tries to mark validation errors as handled and validate all items in arrays and all properties in a model. But it take a lot of time. Moreover it has a limit of exceptions (200 as default). Eventually if somebody sends invalid model with 600 string.Empty (for example, 201 - enough) in array instead of integers, the formatter will spend a lot of time to parse it without any expected result - because it will fail after 200th error and return status OK instead of BadRequest.\r\n\r\nIt has 2 problems:\r\n1) validation doesn't work properly\r\n2) performance issue - formatter spends a lot of time to try to parse all invalid values so a malefactor can cause serious performance issues on online high-load services\r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`:\r\n2.1.1\r\n",bug|:heavy_check_mark: Resolution: Duplicate|area-mvc,dougbu,"#### Is this a Bug or Feature request?:\r\nBug\r\n\r\n#### Steps to reproduce (preferably a link to a GitHub repo with a repro project):\r\n1. You have an action in a Controller\r\n2. The action has a requestModel with array of integers\r\n3. You send a request to the action with invalid model - for example array with string.Empty instead integers\r\n4. You expect to receive BadRequest, but you will receive Http Ok after a long period of time\r\n\r\nI've attached the repo to reproduce this issue https://github.com/ArtemAstashkin/JsonInputFormatterTest\r\n\r\n1) The repo has 2 projects (Web and Web.Tests). Web has HomeController and Post action with RequestModel \r\n```C#\r\n    public class RequestModel\r\n    {\r\n        public string Key { get; set; }\r\n\r\n        [FromBody]\r\n        [Required]\r\n        public PostRequestModelBody Body { get; set; }\r\n    }\r\n```\r\n2) The Web.Tests project has only one specific test to reproduce the issue\r\n```C#\r\n        [Fact]\r\n        public async Task ShouldReturnBadRequest()\r\n        {\r\n            var itemIds = Enumerable.Repeat(string.Empty, 621).ToArray();\r\n            var body = JSON.SerializeDynamic(new { ItemIds = itemIds });\r\n\r\n            var request = new HttpRequestMessage\r\n            {\r\n                Method = HttpMethod.Post,\r\n                RequestUri = new Uri(""/api/home?key=test"", UriKind.Relative),\r\n                Content = new StringContent(body, Encoding.UTF8, ""application/json""),\r\n            };\r\n\r\n            var sut = await Sut.AsyncInstance;\r\n            var response = await sut.SendAsync(request);\r\n\r\n            Assert.Equal(\r\n                expected: HttpStatusCode.BadRequest,\r\n                actual: response.StatusCode);\r\n        }\r\n```\r\n\r\nThe test will fail. But, if you change 621 to 199 it will pass.\r\n\r\n#### Description of the problem:\r\nThe issue is related to the JsonInputFormatter which tries to mark validation errors as handled and validate all items in arrays and all properties in a model. But it take a lot of time. Moreover it has a limit of exceptions (200 as default). Eventually if somebody sends invalid model with 600 string.Empty (for example, 201 - enough) in array instead of integers, the formatter will spend a lot of time to parse it without any expected result - because it will fail after 200th error and return status OK instead of BadRequest.\r\n\r\nIt has 2 problems:\r\n1) validation doesn't work properly\r\n2) performance issue - formatter spends a lot of time to try to parse all invalid values so a malefactor can cause serious performance issues on online high-load services\r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`:\r\n2.1.1\r\n",C#\r\n    public class RequestModel\r\n    {\r\n        public string Key { get; set; }\r\n\r\n        [FromBody]\r\n        [Required]\r\n        public PostRequestModelBody Body { get; set; }\r\n    }\r\n
4268,"camelCase Resolver not always Default?_From @ArgTang on November 12, 2018 11:13_\n\n# Description\r\n\r\nI am trying to create an api call to Slack with a typed `httpClient`. Slack gives a statuscode of `400 ` when formatting with PascalCase.\r\nAlthough in the documentation it says that .net core is using **Camelcase** as default, my payload is serialized with **PascalCase**, and i manually have to serialize correctly. This feels redundant, I have tried setting `contractresolver` in startup, but it does not help for this.\r\n\r\n \r\n\r\nThe documentation for `PostAsJsonAsync` is as follows:\r\n\r\n\r\nAt first glance it seems good, pick the current apps set `Contractresolver`. But when i breakpoint it seems like it is using `JsonContractResolver` with no `Namingstrategy` set. \r\nWhich makes it understandable why it does **not** serialize with camelcase, but lessens the usefulness of the extentionmethod provided. If this is the case i would ask if it was possible to make an api wich sets the current `SerializerSetting` and posts an object with that.\r\n\r\nIs there another method i can use for this?\r\n\r\n## system info:\r\nLocal runtime 2.1.500-preview-009404\r\nTarget Framework: 2.1\r\n\r\n## sample\r\n\n\n_Copied from original issue: dotnet/corefx#33408_",question|area-mvc,dougbu,"_From @ArgTang on November 12, 2018 11:13_\n\n# Description\r\n\r\nI am trying to create an api call to Slack with a typed `httpClient`. Slack gives a statuscode of `400 ` when formatting with PascalCase.\r\nAlthough in the documentation it says that .net core is using **Camelcase** as default, my payload is serialized with **PascalCase**, and i manually have to serialize correctly. This feels redundant, I have tried setting `contractresolver` in startup, but it does not help for this.\r\n\r\n ```C#\r\nservices.AddMvc(options => options.Filters.Add(new AutoValidateAntiforgeryTokenAttribute()))\r\n                .AddJsonOptions(options => {\r\n                    var settings = options.SerializerSettings;\r\n                    settings.NullValueHandling = NullValueHandling.Ignore;\r\n                    settings.DefaultValueHandling = DefaultValueHandling.Ignore;\r\n                    settings.ContractResolver = new CamelCasePropertyNamesContractResolver();\r\n                })\r\n                .SetCompatibilityVersion(CompatibilityVersion.Version_2_1);\r\n```\r\n\r\nThe documentation for `PostAsJsonAsync` is as follows:\r\n```C#\r\n        // Remarks:\r\n        //     This method uses a default instance of System.Net.Http.Formatting.JsonMediaTypeFormatter.\r\n        public static Task<HttpResponseMessage> PostAsJsonAsync<T>(this HttpClient client, string requestUri, T value);\r\n```\r\n\r\nAt first glance it seems good, pick the current apps set `Contractresolver`. But when i breakpoint it seems like it is using `JsonContractResolver` with no `Namingstrategy` set. \r\nWhich makes it understandable why it does **not** serialize with camelcase, but lessens the usefulness of the extentionmethod provided. If this is the case i would ask if it was possible to make an api wich sets the current `SerializerSetting` and posts an object with that.\r\n\r\nIs there another method i can use for this?\r\n\r\n## system info:\r\nLocal runtime 2.1.500-preview-009404\r\nTarget Framework: 2.1\r\n\r\n## sample\r\n```C#\r\n    public class SlackClient\r\n    {\r\n        private readonly HttpClient _client;\r\n\r\n        public SlackClient(HttpClient client, string baseUrl)\r\n        {\r\n            _client = client;\r\n            _client.BaseAddress = baseUrl;\r\n        }\r\n\r\n        public async Task<(HttpStatusCode status, string message)> DeliverMessageAsyncWork(SlackMessage payload)\r\n        {\r\n//**************\r\n// I have to manually do it like this, to serialize the object correctly a.k.a as camelCase\r\n//***************\r\n            var settings = new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n            };\r\n            var camelCaseLoad = JsonConvert.SerializeObject(payload, settings);\r\n            var content = new StringContent(camelCaseLoad, Encoding.UTF8, ""application/json"");\r\n\r\n            var res = await _client.PostAsync("""", content);\r\n\r\n            if (!res.IsSuccessStatusCode)\r\n            {\r\n                return (res.StatusCode, $""Status: {res.ReasonPhrase}"");\r\n            }\r\n            return (status: HttpStatusCode.OK, message: $""Status: {HttpStatusCode.OK}"");\r\n        }\r\n\r\n        public async Task<(HttpStatusCode status, string message)> DeliverMessageAsyncFail(SlackMessage payload)\r\n        {\r\n// ***********\r\n// This will post object as PascalCase (standard C# obj)\r\n// **************\r\n            var res = await _client.PostAsJsonAsync("""", payload);\r\n\r\n            if (!res.IsSuccessStatusCode)\r\n            {\r\n                return (res.StatusCode, $""Status: {res.ReasonPhrase}"");\r\n            }\r\n            return (status: HttpStatusCode.OK, message: $""Status: {HttpStatusCode.OK}"");\r\n        }\r\n    }\r\n```\n\n_Copied from original issue: dotnet/corefx#33408_",C#\r\nservices.AddMvc(options => options.Filters.Add(new AutoValidateAntiforgeryTokenAttribute()))\r\n                .AddJsonOptions(options => {\r\n                    var settings = options.SerializerSettings;\r\n                    settings.NullValueHandling = NullValueHandling.Ignore;\r\n                    settings.DefaultValueHandling = DefaultValueHandling.Ignore;\r\n                    settings.ContractResolver = new CamelCasePropertyNamesContractResolver();\r\n                })\r\n                .SetCompatibilityVersion(CompatibilityVersion.Version_2_1);\r\n
5640,"FormatException: Input string was not in a correct formatWhen working on replicating the `TabSet` component from the last Blazor community standup I got this exception with VS 2017 15.9 and the Blazor 0.7.0-preview1 build:\r\n\r\n```\r\nSystem.FormatException: Input string was not in a correct format.\r\n at System.Text.StringBuilder.AppendFormatHelper(IFormatProvider provider, String format, ParamsArray args)\r\n at System.String.FormatHelper(IFormatProvider provider, String format, ParamsArray args)\r\n at System.String.Format(IFormatProvider provider, String format, Object[] args)\r\n at Microsoft.AspNetCore.Razor.Language.DefaultRazorDiagnostic.GetMessage(IFormatProvider formatProvider)\r\n at Microsoft.VisualStudio.Web.Editors.Razor.RazorCodeGenerator.NotifyOnCodeGenerationComplete()\r\n at Microsoft.VisualStudio.Web.Editors.Razor.RazorCodeGenerator.<>c__DisplayClass67_0.<OnDocumentStructureChanged>b__0()\r\n at Microsoft.Web.Editor.Utility.GuardedOperations.InvokeExtensionPoint(Object errorSource, Action action)\r\n --- End of stack trace from previous location where exception was thrown ---\r\n at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n```\r\n\r\nHere's the component file I was working on:\r\n\r\n\r\n",bug|Done|area-blazor,rynowak,"When working on replicating the `TabSet` component from the last Blazor community standup I got this exception with VS 2017 15.9 and the Blazor 0.7.0-preview1 build:\r\n\r\n```\r\nSystem.FormatException: Input string was not in a correct format.\r\n at System.Text.StringBuilder.AppendFormatHelper(IFormatProvider provider, String format, ParamsArray args)\r\n at System.String.FormatHelper(IFormatProvider provider, String format, ParamsArray args)\r\n at System.String.Format(IFormatProvider provider, String format, Object[] args)\r\n at Microsoft.AspNetCore.Razor.Language.DefaultRazorDiagnostic.GetMessage(IFormatProvider formatProvider)\r\n at Microsoft.VisualStudio.Web.Editors.Razor.RazorCodeGenerator.NotifyOnCodeGenerationComplete()\r\n at Microsoft.VisualStudio.Web.Editors.Razor.RazorCodeGenerator.<>c__DisplayClass67_0.<OnDocumentStructureChanged>b__0()\r\n at Microsoft.Web.Editor.Utility.GuardedOperations.InvokeExtensionPoint(Object errorSource, Action action)\r\n --- End of stack trace from previous location where exception was thrown ---\r\n at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n```\r\n\r\nHere's the component file I was working on:\r\n\r\n```html\r\n<ul class=""nav nav-tabs"">\r\n    @foreach (var tab in tabs)\r\n    {\r\n        <li class=""nav-item"">\r\n            <a onclick=""@(() => SelectTab(tab))"" class=""nav-link @(tab==)\r\n        </li>\r\n    }\r\n\r\n</ul>\r\n\r\n\r\n@functions {\r\n\r\n}\r\n```\r\n","html\r\n<ul class=""nav nav-tabs"">\r\n    @foreach (var tab in tabs)\r\n    {\r\n        <li class=""nav-item"">\r\n            <a onclick=""@(() => SelectTab(tab))"" class=""nav-link @(tab==)\r\n        </li>\r\n    }\r\n\r\n</ul>\r\n\r\n\r\n@functions {\r\n\r\n}\r\n"
4939,"Inifinite loop during model binding when using [ModelBinder] attribute#### Is this a Bug or Feature request?:\r\nBug\r\n\r\n#### Steps to reproduce (preferably a link to a GitHub repo with a repro project):\r\nLink to repro: https://github.com/Costo/aspnetcore-binding-bug\r\n\r\n* Run project with `dotnet run`\r\n* Go to https://localhost:5001\r\n* Submit the Form\r\n\r\nExpected result:\r\n* Form is submitted and server responds with 200 OK\r\n\r\nActual result:\r\n* Server never responds. If you attach a debugger and add a breakpoint to `NumberModelBinder.BindModelAsync`, you can see that the program is in an inifinite loop (see screenshot below).\r\n\r\n ![](https://raw.githubusercontent.com/Costo/aspnetcore-binding-bug/master/screenshot.png)\r\n\r\n#### Description of the problem:\r\n\r\nThe problem occurs when using a custom Model Binder for a decimal property in this model:\r\n\r\n\r\nDuring a POST, it seems that model binding is stuck in an infinite loop in [CollectionModelBinder](https://github.com/aspnet/Mvc/blob/5ed7658bf221fe136d8cedafe4c3466ed19726a3/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/CollectionModelBinder.cs#L340)\r\n\r\nThe code of the `NumberModelBinder` class is actually the code of [DecimalModelBinder](https://github.com/aspnet/Mvc/blob/master/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/DecimalModelBinder.cs), with internal logging code stripped out, so nothing out of the ordinary.\r\n\r\nIf the `[ModelBinder]` attribute is removed, the application works fine.\r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`:\r\n\r\n`netcoreapp2.1` or `netcoreapp2.2` with SDK `2.2.100-preview3-009430`\r\n\r\n\r\n",Done|Needs: Design|enhancement|area-mvc|feature-model-binding,dougbu,"#### Is this a Bug or Feature request?:\r\nBug\r\n\r\n#### Steps to reproduce (preferably a link to a GitHub repo with a repro project):\r\nLink to repro: https://github.com/Costo/aspnetcore-binding-bug\r\n\r\n* Run project with `dotnet run`\r\n* Go to https://localhost:5001\r\n* Submit the Form\r\n\r\nExpected result:\r\n* Form is submitted and server responds with 200 OK\r\n\r\nActual result:\r\n* Server never responds. If you attach a debugger and add a breakpoint to `NumberModelBinder.BindModelAsync`, you can see that the program is in an inifinite loop (see screenshot below).\r\n\r\n ![](https://raw.githubusercontent.com/Costo/aspnetcore-binding-bug/master/screenshot.png)\r\n\r\n#### Description of the problem:\r\n\r\nThe problem occurs when using a custom Model Binder for a decimal property in this model:\r\n```cs\r\n\r\npublic class TestModel\r\n{\r\n    public TestInnerModel[] InnerModels { get; set; } = new TestInnerModel[0];\r\n}\r\n\r\npublic class TestInnerModel\r\n{\r\n    public TestInnerModel()\r\n    {\r\n    }\r\n\r\n    [ModelBinder(BinderType = typeof(NumberModelBinder))]\r\n    public decimal Rate { get; set; }\r\n}\r\n```\r\n\r\nDuring a POST, it seems that model binding is stuck in an infinite loop in [CollectionModelBinder](https://github.com/aspnet/Mvc/blob/5ed7658bf221fe136d8cedafe4c3466ed19726a3/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/CollectionModelBinder.cs#L340)\r\n\r\nThe code of the `NumberModelBinder` class is actually the code of [DecimalModelBinder](https://github.com/aspnet/Mvc/blob/master/src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/DecimalModelBinder.cs), with internal logging code stripped out, so nothing out of the ordinary.\r\n\r\nIf the `[ModelBinder]` attribute is removed, the application works fine.\r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`:\r\n\r\n`netcoreapp2.1` or `netcoreapp2.2` with SDK `2.2.100-preview3-009430`\r\n\r\n\r\n",cs\r\n\r\npublic class TestModel\r\n{\r\n    public TestInnerModel[] InnerModels { get; set; } = new TestInnerModel[0];\r\n}\r\n\r\npublic class TestInnerModel\r\n{\r\n    public TestInnerModel()\r\n    {\r\n    }\r\n\r\n    [ModelBinder(BinderType = typeof(NumberModelBinder))]\r\n    public decimal Rate { get; set; }\r\n}\r\n
4640,"AspNet.Identity doesn't respect LowercaseUrlsHi,\r\n\r\nI have an application base on IdentityServer4 and AspNet.Identity. I use the following configuration to make all URLs lowercase:\r\n\r\nBut after the latest update (from Microsoft.AspNetCore.Identity v2.0.1 to v2.1.1) URL pointing to login page '/account/login' started to appear in pascal case like '/Account/Login'. \r\n\r\nAfter some investigation I found that exact place where this string comes from is [IdentityServiceCollectionExtensions.cs#L53](https://github.com/aspnet/Identity/blob/master/src/Identity/IdentityServiceCollectionExtensions.cs#L53):\r\n",area-mvc,JamesNK,"Hi,\r\n\r\nI have an application base on IdentityServer4 and AspNet.Identity. I use the following configuration to make all URLs lowercase:\r\n```csharp\r\nservices.Configure<RouteOptions>(options => options.LowercaseUrls = true);\r\n```\r\nBut after the latest update (from Microsoft.AspNetCore.Identity v2.0.1 to v2.1.1) URL pointing to login page '/account/login' started to appear in pascal case like '/Account/Login'. \r\n\r\nAfter some investigation I found that exact place where this string comes from is [IdentityServiceCollectionExtensions.cs#L53](https://github.com/aspnet/Identity/blob/master/src/Identity/IdentityServiceCollectionExtensions.cs#L53):\r\n```csharp\r\n.AddCookie(IdentityConstants.ApplicationScheme, o =>\r\n            {\r\n                o.LoginPath = new PathString(""/Account/Login"");\r\n                o.Events = new CookieAuthenticationEvents\r\n                {\r\n                    OnValidatePrincipal = SecurityStampValidator.ValidatePrincipalAsync\r\n                };\r\n            })\r\n```",csharp\r\nservices.Configure<RouteOptions>(options => options.LowercaseUrls = true);\r\n
4935,"Custom naming when binding nested objects as properties of a model in controllers actionsHi guys,\r\n\r\nI'm creating another API with .net core mvc 2.2.\r\nEvery time we have some date as a parameter, we follow the same behavior. I need a date start, date end or a relative time info as parameter (today, yesterday, this month, last month, etc).\r\n\r\nSo imagine a bill report and I want to bring all bills with reference date between X and Y, but I also want to filter by generated bill date between Z and W.\r\n\r\nA possible model for just the date related parameters:\r\n\r\n\r\n\r\nSo far so good. My hope was to use that in my request models:\r\n\r\n\r\n\r\nSwagger will generate the api explorer correctly using the namespace to get to the properties. Binding works as well:\r\n\r\n- Reference.DateStart\r\n- Reference.DateEnd\r\n- Generated.DateStart\r\n- Generated.DateEnd\r\n\r\nHowever:\r\n\r\nThat's ok for Razor pages, but as this is an API, and it's not our standard to have "".""s in our parameters. \r\nIt's much more popular on REST APIs to use hyphen, not camelcase, dots or underscores as words delimiters.\r\nAlso, I loose the ability to lowercase the property names. Ex:\r\n\r\n\r\n\r\nThat will break everything, as having two properties of this same class in a parent model object will combine both DateStart (parent property's name is not applied anymore).\r\n\r\nSo the feature would be a way to:\r\n\r\n1 - ability to replace the ""."" with whatever I want (in my case, hyphen) when creating the map to the property\r\n2 - change the external property name to a custom one without breaking the classe hierarchy\r\n\r\n\r\n\r\nSo with attributes like this:\r\n\r\n\r\n\r\nThe final endpoint parameters would be:\r\n- reference-date-start\r\n- reference-date-end\r\n- generated-date-start\r\n- generated-date-end\r\n\r\n\r\n\r\n\r\n\r\n\r\n",Needs: Design|enhancement|area-mvc,rynowak,"Hi guys,\r\n\r\nI'm creating another API with .net core mvc 2.2.\r\nEvery time we have some date as a parameter, we follow the same behavior. I need a date start, date end or a relative time info as parameter (today, yesterday, this month, last month, etc).\r\n\r\nSo imagine a bill report and I want to bring all bills with reference date between X and Y, but I also want to filter by generated bill date between Z and W.\r\n\r\nA possible model for just the date related parameters:\r\n\r\n```cs\r\npublic class DateInfo {\r\n\tpublic DateTime? DateStart { get; set; }\r\n\tpublic DateTime? DateEnd { get; set; }\r\n\tpublic RelativeTime? RelativeTime { get; set; }\r\n}\r\n```\r\n\r\nSo far so good. My hope was to use that in my request models:\r\n\r\n```cs\r\npublic class MyModel {\r\n\t[FromQuery]\r\n\tpublic DateInfo Reference { get; set; } = new DateInfo();\r\n\r\n\t[FromQuery]\r\n\tpublic DateInfo Generated { get; set; } = new DateInfo();\r\n       \r\n        //other\r\n}\r\n```\r\n\r\nSwagger will generate the api explorer correctly using the namespace to get to the properties. Binding works as well:\r\n\r\n- Reference.DateStart\r\n- Reference.DateEnd\r\n- Generated.DateStart\r\n- Generated.DateEnd\r\n\r\nHowever:\r\n\r\nThat's ok for Razor pages, but as this is an API, and it's not our standard to have "".""s in our parameters. \r\nIt's much more popular on REST APIs to use hyphen, not camelcase, dots or underscores as words delimiters.\r\nAlso, I loose the ability to lowercase the property names. Ex:\r\n\r\n```cs\r\npublic class DateInfo {\r\n\t[FromQuery(Name = ""date-start"")]\r\n\tpublic DateTime? DateStart { get; set; }\r\n\tpublic DateTime? DateEnd { get; set; }\r\n\tpublic RelativeTime? RelativeTime { get; set; }\r\n}\r\n```\r\n\r\nThat will break everything, as having two properties of this same class in a parent model object will combine both DateStart (parent property's name is not applied anymore).\r\n\r\nSo the feature would be a way to:\r\n\r\n1 - ability to replace the ""."" with whatever I want (in my case, hyphen) when creating the map to the property\r\n2 - change the external property name to a custom one without breaking the classe hierarchy\r\n\r\n\r\n\r\nSo with attributes like this:\r\n\r\n```cs\r\npublic class MyModel {\r\n\t[FromQuery(Name = 'reference')]\r\n\tpublic DateInfo Reference { get; set; } = new DateInfo();\r\n\r\n\t[FromQuery(Name = 'generated')]\r\n\tpublic DateInfo Generated { get; set; } = new DateInfo();\r\n}\r\n\r\n\r\npublic class DateInfo {\r\n\t[FromQuery(Name = ""date-start"")]\r\n\tpublic DateTime? DateStart { get; set; }\r\n\t[FromQuery(Name = ""date-end"")]\r\n\tpublic DateTime? DateEnd { get; set; }\r\n}\r\n```\r\n\r\nThe final endpoint parameters would be:\r\n- reference-date-start\r\n- reference-date-end\r\n- generated-date-start\r\n- generated-date-end\r\n\r\n\r\n\r\n\r\n\r\n\r\n",cs\r\npublic class DateInfo {\r\n\tpublic DateTime? DateStart { get; set; }\r\n\tpublic DateTime? DateEnd { get; set; }\r\n\tpublic RelativeTime? RelativeTime { get; set; }\r\n}\r\n
4215,"Static files and matchingI updated [a sample](https://github.com/aspnet/AuthSamples/pull/65) to use static files + endpoints + authz. To achieve the desired result I had to write a DIY static file endpoint matcher and it got me thinking.\r\n\r\n# RANDOM THOUGHT 1\r\nWe could add configurable static file matching to `UseEndpointRouting`. It would be useful when you want to run the file through APIs that use endpoints, e.g. `AuthorizationMiddleware`. There could be a couple of modes for matching:\r\n* The static files all live as endpoints provided by an endpoint datasource. High memory, long startup time, high perf\r\n* Or the endpoint for a static file is created on demand. Low memory, short startup time, low perf. This is what the [authz sample](https://github.com/aspnet/AuthSamples/pull/65) is doing.\r\n\r\n\r\n\r\n# RANDOM THOUGHT 2\r\n`UseStaticFiles` today is terminal if there is a matching file. If static files have endpoints then it could disappear from 3.0 templates and the static file could be returned at the end of the request pipeline.\r\n\r\nWould there be performance considerations from doing this? It would mean static files experience the entire request pipeline, e.g. if authentication is enabled then static file requests would be authenticated.\r\n\r\nAlternatively `UseStaticFiles` could remain present in templates, and if the request was matched to a static file endpoint in `UseEndpointRouting` then `UseStaticFiles` would do nothing more than invoke the endpoint and exit.",Needs: Design|enhancement|area-mvc,JamesNK,"I updated [a sample](https://github.com/aspnet/AuthSamples/pull/65) to use static files + endpoints + authz. To achieve the desired result I had to write a DIY static file endpoint matcher and it got me thinking.\r\n\r\n# RANDOM THOUGHT 1\r\nWe could add configurable static file matching to `UseEndpointRouting`. It would be useful when you want to run the file through APIs that use endpoints, e.g. `AuthorizationMiddleware`. There could be a couple of modes for matching:\r\n* The static files all live as endpoints provided by an endpoint datasource. High memory, long startup time, high perf\r\n* Or the endpoint for a static file is created on demand. Low memory, short startup time, low perf. This is what the [authz sample](https://github.com/aspnet/AuthSamples/pull/65) is doing.\r\n\r\n```cs\r\napp.UseEndpointRouting(routes =>\r\n{\r\n    routes.MapApplication();\r\n    routes.MapStaticFiles();\r\n});\r\n```\r\n\r\n# RANDOM THOUGHT 2\r\n`UseStaticFiles` today is terminal if there is a matching file. If static files have endpoints then it could disappear from 3.0 templates and the static file could be returned at the end of the request pipeline.\r\n\r\nWould there be performance considerations from doing this? It would mean static files experience the entire request pipeline, e.g. if authentication is enabled then static file requests would be authenticated.\r\n\r\nAlternatively `UseStaticFiles` could remain present in templates, and if the request was matched to a static file endpoint in `UseEndpointRouting` then `UseStaticFiles` would do nothing more than invoke the endpoint and exit.",cs\r\napp.UseEndpointRouting(routes =>\r\n{\r\n    routes.MapApplication();\r\n    routes.MapStaticFiles();\r\n});\r\n
3705,"EnumSerialization fails when duplicate EnumMember(Value="""") exists On .NET Core 2.1.x when a developer inadvertedly duplicates an [EnumValue(""name"")] in an Enum and serialization of enum is done using StringEnumConverter, WebAPI fails silently and in some cases (in a ServiceFabric App) fails with incomplete chunked response.\r\n\r\nYou can reproduce on a fresh .NET Core API Project with:\r\nModel\\ContentType.cs:\r\n\r\n\r\nValuesController:\r\n\r\n\r\nStartup.cs:\r\n\r\n\r\nShould the expected behavior be a runtime exception ?\r\n\r\nIt is my first bug report to .NET Core, so bear with me :)",question|area-mvc,JamesNK,"On .NET Core 2.1.x when a developer inadvertedly duplicates an [EnumValue(""name"")] in an Enum and serialization of enum is done using StringEnumConverter, WebAPI fails silently and in some cases (in a ServiceFabric App) fails with incomplete chunked response.\r\n\r\nYou can reproduce on a fresh .NET Core API Project with:\r\nModel\\ContentType.cs:\r\n```C#\r\npublic enum ContentType\r\n    {\r\n        [EnumMember(Value = ""type-1"")]\r\n        Type1 = 1,\r\n        [EnumMember(Value = ""type-2"")]\r\n        Type2 = 2,\r\n        [EnumMember(Value = ""type-2"")]\r\n        Type3 = 3,\r\n    }\r\n```\r\n\r\nValuesController:\r\n```C#\r\n[Route(""api/[controller]"")]\r\n    [ApiController]\r\n    public class ValuesController : ControllerBase\r\n    {\r\n        // GET api/values\r\n        [HttpGet]\r\n        public ActionResult<IEnumerable<ContentType>> Get()\r\n        {\r\n            return new List<ContentType> { ContentType.Type1, ContentType.Type2, ContentType.Type3 };\r\n        }\r\n    }\r\n```\r\n\r\nStartup.cs:\r\n```C#\r\nservices.AddMvc()\r\n                .AddJsonOptions(options =>\r\n                {\r\n                    options.SerializerSettings.Converters.Add(new Newtonsoft.Json.Converters.StringEnumConverter());\r\n                })\r\n                .SetCompatibilityVersion(CompatibilityVersion.Version_2_1);\r\n```\r\n\r\nShould the expected behavior be a runtime exception ?\r\n\r\nIt is my first bug report to .NET Core, so bear with me :)","C#\r\npublic enum ContentType\r\n    {\r\n        [EnumMember(Value = ""type-1"")]\r\n        Type1 = 1,\r\n        [EnumMember(Value = ""type-2"")]\r\n        Type2 = 2,\r\n        [EnumMember(Value = ""type-2"")]\r\n        Type3 = 3,\r\n    }\r\n"
3700,"Add RequestLoggingMiddlewareThere's lots of advice on how to log the headers and body of an incoming and outgoing http request (and response) on the interwebs:\r\n\r\n- https://stackoverflow.com/questions/46361958/asp-net-core-mvc-log-request-body\r\n- https://elanderson.net/2017/02/log-requests-and-responses-in-asp-net-core/\r\n\r\nTo name a few of them. They are not done in very safe ways: \r\n- Some buffer the entire request body of every request (not respecting the IHttpBufferingFeature). This results in memory bloats (a potential DoS)\r\n- Some don't rewind the Stream properly.\r\n- The implementations aren't lazy \r\n- There are security implications as well (sensitive data may be in headers, other PII, GDPR?)\r\n\r\nIt seems like lots of people are doing this and doing it incorrectly and inefficiently, we should add a middleware here as this is very common and requires no new dependencies.\r\n\r\nStrawman:\r\n\r\n\r\n\r\ncc @Tratcher ",enhancement|affected-most|severity-minor|area-middleware,jkotalik,"There's lots of advice on how to log the headers and body of an incoming and outgoing http request (and response) on the interwebs:\r\n\r\n- https://stackoverflow.com/questions/46361958/asp-net-core-mvc-log-request-body\r\n- https://elanderson.net/2017/02/log-requests-and-responses-in-asp-net-core/\r\n\r\nTo name a few of them. They are not done in very safe ways: \r\n- Some buffer the entire request body of every request (not respecting the IHttpBufferingFeature). This results in memory bloats (a potential DoS)\r\n- Some don't rewind the Stream properly.\r\n- The implementations aren't lazy \r\n- There are security implications as well (sensitive data may be in headers, other PII, GDPR?)\r\n\r\nIt seems like lots of people are doing this and doing it incorrectly and inefficiently, we should add a middleware here as this is very common and requires no new dependencies.\r\n\r\nStrawman:\r\n\r\n```C#\r\npublic class RequestLoggingMiddlewareExtensions\r\n{ \r\n      public IApplicationBuilder UseRequestLogging(this IApplicationBuilder app) { }\r\n      public IApplicationBuilder UseRequestLogging(this IApplicationBuilder app, RequestLoggingOptions options) { }\r\n}\r\n\r\npublic class RequestLoggingOptions\r\n{\r\n     // Determines if the cookie header is logged\r\n     public bool LogCookieHeader { get; set; }\r\n     // Determines if the authorization header is logged\r\n     public bool LogAuthorizationHeader { get; set; }\r\n     // Determines the verbosity of the logs\r\n     public RequestLoggingLevel RequestLogLevel { get; set; }\r\n}\r\n\r\n[Flags]\r\npublic enum RequestLoggingLevel\r\n{\r\n    None = 0,\r\n    RequestHeaders = 1,\r\n    ResponseHeaders = 2,\r\n    RequestBody = 4,\r\n    ResponseBody = 8,\r\n    AllRequest = RequestHeaders | RequestBody\r\n    AllResponse = RequestHeaders | RequestBody\r\n    All = AllRequest | AllResponse\r\n}\r\n```\r\n\r\ncc @Tratcher ","C#\r\npublic class RequestLoggingMiddlewareExtensions\r\n{ \r\n      public IApplicationBuilder UseRequestLogging(this IApplicationBuilder app) { }\r\n      public IApplicationBuilder UseRequestLogging(this IApplicationBuilder app, RequestLoggingOptions options) { }\r\n}\r\n\r\npublic class RequestLoggingOptions\r\n{\r\n     // Determines if the cookie header is logged\r\n     public bool LogCookieHeader { get; set; }\r\n     // Determines if the authorization header is logged\r\n     public bool LogAuthorizationHeader { get; set; }\r\n     // Determines the verbosity of the logs\r\n     public RequestLoggingLevel RequestLogLevel { get; set; }\r\n}\r\n\r\n[Flags]\r\npublic enum RequestLoggingLevel\r\n{\r\n    None = 0,\r\n    RequestHeaders = 1,\r\n    ResponseHeaders = 2,\r\n    RequestBody = 4,\r\n    ResponseBody = 8,\r\n    AllRequest = RequestHeaders | RequestBody\r\n    AllResponse = RequestHeaders | RequestBody\r\n    All = AllRequest | AllResponse\r\n}\r\n"
3656,"Add ""don't touch this"" doc to all pubternal types in all packages_From @Eilon on Wednesday, January 10, 2018 10:52:11 AM_\r\n\r\nWe need to add docs to all our pubternal types (i.e. `public` types in a `.Internal` namespace) to indicate that they are not supported.\r\n\r\nI suggest writing a tool that uses Roslyn to insert a comment for all applicable types:\r\n\r\n\r\nThis will also make it easier in the future to enable the ""doc comments required"" C# compiler error because we *would* have docs for all accessible types.\r\n\r\nFor example, here's what EF Core does: https://github.com/aspnet/EntityFrameworkCore/blob/dev/src/EFCore/Internal/Graph.cs#L9-L24\r\n\r\n\r\n\r\n- \u24c2\ufe0f\U0001f30a\U0001f528\r\n\r\n_Copied from original issue: aspnet/Universe#767_",bug|area-infrastructure,Pilchie,"_From @Eilon on Wednesday, January 10, 2018 10:52:11 AM_\r\n\r\nWe need to add docs to all our pubternal types (i.e. `public` types in a `.Internal` namespace) to indicate that they are not supported.\r\n\r\nI suggest writing a tool that uses Roslyn to insert a comment for all applicable types:\r\n```c#\r\n///   <summary>\r\n///\xa0\xa0\xa0\xa0   This API supports infrastructure and is not intended to be used directly\r\n///\xa0\xa0\xa0\xa0   from your code. This API may change or be removed in future releases.\r\n///   </summary>\r\n```\r\n\r\nThis will also make it easier in the future to enable the ""doc comments required"" C# compiler error because we *would* have docs for all accessible types.\r\n\r\nFor example, here's what EF Core does: https://github.com/aspnet/EntityFrameworkCore/blob/dev/src/EFCore/Internal/Graph.cs#L9-L24\r\n\r\n```c#\r\n///   <summary>\r\n///\xa0\xa0\xa0\xa0   This API supports the Entity Framework Core infrastructure and is not intended to be used\r\n///\xa0\xa0\xa0\xa0   directly from your code. This API may change or be removed in future releases.\r\n///   </summary>\r\n```\r\n\r\n- \u24c2\ufe0f\U0001f30a\U0001f528\r\n\r\n_Copied from original issue: aspnet/Universe#767_",c#\r\n///   <summary>\r\n///\xa0\xa0\xa0\xa0   This API supports infrastructure and is not intended to be used directly\r\n///\xa0\xa0\xa0\xa0   from your code. This API may change or be removed in future releases.\r\n///   </summary>\r\n
3634,"NullReferenceException thrown by JsonPatchDocument.ApplyTo for Move operation**1. Description of the problem:**\r\nIn the following example, `JsonPatchDocument.ApplyTo` throws a `NullReferenceException` when the patch to the object wrapper is applied. I would expect it to throw a `JsonPatchException` in this case.  \r\n\r\nWhen a dynamic object is used throughout then a `JsonPatchException` with a meaningful error message is thrown.\r\n\r\nIn both cases, the object that the patch is being applied to has the structure:\r\n```json\r\n{\r\n  Object: {\r\n    hello: ""world""\r\n  }\r\n}\r\n```\r\n\r\n**2. Steps to reproduce (preferrably a link to a GitHub repo with a repro project)**\r\n\r\n\r\n**3. The version of `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`**\r\nMicrosoft.AspNetCore.JsonPatch 2.1.0.0\r\n\r\n**4. The output of `dotnet --info`**\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.102 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.103 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```",bug|Done|area-mvc,rynowak,"**1. Description of the problem:**\r\nIn the following example, `JsonPatchDocument.ApplyTo` throws a `NullReferenceException` when the patch to the object wrapper is applied. I would expect it to throw a `JsonPatchException` in this case.  \r\n\r\nWhen a dynamic object is used throughout then a `JsonPatchException` with a meaningful error message is thrown.\r\n\r\nIn both cases, the object that the patch is being applied to has the structure:\r\n```json\r\n{\r\n  Object: {\r\n    hello: ""world""\r\n  }\r\n}\r\n```\r\n\r\n**2. Steps to reproduce (preferrably a link to a GitHub repo with a repro project)**\r\n```c#\r\nusing System;\r\nusing System.Dynamic;\r\n\r\nusing Microsoft.AspNetCore.JsonPatch;\r\n\r\npublic class Program\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n        var jsonPatchDocument = new JsonPatchDocument();\r\n        jsonPatchDocument.Move(""/Object"", ""/Object/goodbye"");\r\n\r\n        dynamic @object = new ExpandoObject();\r\n        @object.hello = ""world"";\r\n\r\n        // throws JsonPatchException\r\n        try\r\n        {\r\n            dynamic objectToApplyTo = new ExpandoObject();\r\n            objectToApplyTo.Object = @object;\r\n            jsonPatchDocument.ApplyTo(objectToApplyTo);\r\n        }\r\n        catch (Exception exception)\r\n        {\r\n            Console.WriteLine(exception);\r\n        }\r\n\r\n        // throws NullReferenceException\r\n        try\r\n        {\r\n            var objectToApplyTo = new ObjectWrapper();\r\n            objectToApplyTo.Object = @object;\r\n            jsonPatchDocument.ApplyTo(objectToApplyTo);\r\n        }\r\n        catch (Exception exception)\r\n        {\r\n            Console.WriteLine(exception);\r\n        }\r\n\r\n        Console.ReadKey();\r\n    }\r\n\r\n    private class ObjectWrapper\r\n    {\r\n        public dynamic Object { get; set; }\r\n    }\r\n}\r\n```\r\n\r\n**3. The version of `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`**\r\nMicrosoft.AspNetCore.JsonPatch 2.1.0.0\r\n\r\n**4. The output of `dotnet --info`**\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.102 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.103 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```","c#\r\nusing System;\r\nusing System.Dynamic;\r\n\r\nusing Microsoft.AspNetCore.JsonPatch;\r\n\r\npublic class Program\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n        var jsonPatchDocument = new JsonPatchDocument();\r\n        jsonPatchDocument.Move(""/Object"", ""/Object/goodbye"");\r\n\r\n        dynamic @object = new ExpandoObject();\r\n        @object.hello = ""world"";\r\n\r\n        // throws JsonPatchException\r\n        try\r\n        {\r\n            dynamic objectToApplyTo = new ExpandoObject();\r\n            objectToApplyTo.Object = @object;\r\n            jsonPatchDocument.ApplyTo(objectToApplyTo);\r\n        }\r\n        catch (Exception exception)\r\n        {\r\n            Console.WriteLine(exception);\r\n        }\r\n\r\n        // throws NullReferenceException\r\n        try\r\n        {\r\n            var objectToApplyTo = new ObjectWrapper();\r\n            objectToApplyTo.Object = @object;\r\n            jsonPatchDocument.ApplyTo(objectToApplyTo);\r\n        }\r\n        catch (Exception exception)\r\n        {\r\n            Console.WriteLine(exception);\r\n        }\r\n\r\n        Console.ReadKey();\r\n    }\r\n\r\n    private class ObjectWrapper\r\n    {\r\n        public dynamic Object { get; set; }\r\n    }\r\n}\r\n"
3594,"Microsoft.Extensions.Options ValidateOptionsResult when successI've found a feature in `Microsoft.Extensions.Options.DataAnnotations` when i want to develop a similarity.\r\n\r\nWhen I view the source code. I notice this below in the `ValidateOptionsResult`:\r\n\r\n\r\n\r\nI am confused why successful result set `Skipped` property true rather than `Succeeded`. Is it a design or some other reasons?\r\n\r\nOn the other hand, in the source code of `DataAnnotationValidateOptions`, the annotation of code shows it will validate all options and it is a useful feature, but the code of `if (Name == null || name == Name)` appears will not validate all options when the options have not null name and i develivery null to `Validate` method:\r\n\r\n",bug|Done,HaoK,"I've found a feature in `Microsoft.Extensions.Options.DataAnnotations` when i want to develop a similarity.\r\n\r\nWhen I view the source code. I notice this below in the `ValidateOptionsResult`:\r\n\r\n```csharp\r\n/// <summary>\r\n/// Validation was successful.\r\n/// </summary>\r\npublic static readonly ValidateOptionsResult Success = new ValidateOptionsResult() \r\n{ \r\n    Skipped = true \r\n};\r\n```\r\n\r\nI am confused why successful result set `Skipped` property true rather than `Succeeded`. Is it a design or some other reasons?\r\n\r\nOn the other hand, in the source code of `DataAnnotationValidateOptions`, the annotation of code shows it will validate all options and it is a useful feature, but the code of `if (Name == null || name == Name)` appears will not validate all options when the options have not null name and i develivery null to `Validate` method:\r\n\r\n```csharp\r\n/// <summary>\r\n/// Validates a specific named options instance (or all when name is null).\r\n/// </summary>\r\n/// <param name=""name"">The name of the options instance being validated.</param>\r\n/// <param name=""options"">The options instance.</param>\r\n/// <returns>The <see cref=""ValidateOptionsResult""/> result.</returns>\r\npublic ValidateOptionsResult Validate(string name, TOptions options)\r\n{\r\n    // Null name is used to configure all named options.\r\n    if (Name == null || name == Name)\r\n    {\r\n        var validationResults = new List<ValidationResult>();\r\n        if (Validator.TryValidateObject(options,\r\n            new ValidationContext(options, serviceProvider: null, items: null), \r\n            validationResults, \r\n            validateAllProperties: true))\r\n    ...\r\n    // Ignored if not validating this instance.\r\n    return ValidateOptionsResult.Skip;\r\n}\r\n```",csharp\r\n/// <summary>\r\n/// Validation was successful.\r\n/// </summary>\r\npublic static readonly ValidateOptionsResult Success = new ValidateOptionsResult() \r\n{ \r\n    Skipped = true \r\n};\r\n
15558,"Blazor Codegen does not escape quotesIf you use double quotes inside single quotes in attributes, this will result in broken codegen due to unescaped double quotes inside double quotes.\r\nInput:\r\n\r\nOutput:\r\n",area-blazor,rynowak,"If you use double quotes inside single quotes in attributes, this will result in broken codegen due to unescaped double quotes inside double quotes.\r\nInput:\r\n```html\r\n<input onfocus='alert(""Test"");' />\r\n```\r\nOutput:\r\n```csharp\r\nbuilder.OpenElement(0, ""input"");\r\nbuilder.AddAttribute(1, ""onfocus"", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetEventHandlerValue<Microsoft.AspNetCore.Blazor.UIFocusEventArgs>(""alert(""Test"");""));\r\nbuilder.CloseElement();\r\n```","html\r\n<input onfocus='alert(""Test"");' />\r\n"
4918,"Support CRUD with strongly typed sorting, filtering and pagination (paging) out of the box#### Feature request:\r\nSupport sorting, filtering and pagination out of the box.\r\n\r\nPretty much all API's need this, unless you're doing a simple demo. So instead of every developer having to invent and implement these standard feature I think it would be greatly beneficial if this came with the framework.\r\n\r\nYou already have some work you can draw on. https://github.com/OData/WebApi already give you access to sorting, filtering and pagination via the `[EnableQuery]` attribute. But OData might not be suitable for everyone.\r\n\r\nThe current documented way of doing the above is relying on `switch`ing on strings. \r\n\r\n> \r\n> source: https://docs.microsoft.com/en-us/aspnet/core/data/ef-mvc/sort-filter-page?view=aspnetcore-2.0\r\n\r\nWhile versatile it's rather cumbersome/annoying to write and maintain. Just imagine an entity where you'd want to sort and filter on 10 properties and not just do it on single properties but do stuff like (pseudo example) `/resource?filter=PropA=foo & sort=PropB,desc & sort=PropC`. That's a nightmare to write.\r\n\r\nWhy can't we have something like this:\r\n\r\n\r\n\r\nWhile this might be a bit over simplified it should demonstrate the ""out of box"" feeling I'm looking for :)\r\n\r\nI basically want something similar to what Spring Boot has ""out of the box"". \r\n\r\n\r\n\r\nThis code snippet gives me a fully functional CRUD controller with paging and sorting. Not filtering though. While I don't advocate Spring Boot because it's absolutely terrible compared to ASP.NET Core that particulier feature is pretty cool. Though it's rather limited and has all sorts of problems - as does everything with Spring Boot... Anyway...\r\n\r\nLast but not least. The implementation should take DTO usage into account.\r\n\r\nI know there are some packages that try to solve this ""problem"". I haven't found one that fully solves it. Since it's something every API or MVC site needs I think it would be handy with a default way to implement it.",enhancement|area-mvc|Needs: Spec,glennc,"#### Feature request:\r\nSupport sorting, filtering and pagination out of the box.\r\n\r\nPretty much all API's need this, unless you're doing a simple demo. So instead of every developer having to invent and implement these standard feature I think it would be greatly beneficial if this came with the framework.\r\n\r\nYou already have some work you can draw on. https://github.com/OData/WebApi already give you access to sorting, filtering and pagination via the `[EnableQuery]` attribute. But OData might not be suitable for everyone.\r\n\r\nThe current documented way of doing the above is relying on `switch`ing on strings. \r\n\r\n> ```csharp\r\n> public async Task<IActionResult> Index(\r\n>     string sortOrder,\r\n>     string currentFilter,\r\n>     string searchString,\r\n>     int? page)\r\n> {\r\n>     ViewData[""CurrentSort""] = sortOrder;\r\n>     ViewData[""NameSortParm""] = String.IsNullOrEmpty(sortOrder) ? ""name_desc"" : """";\r\n>     ViewData[""DateSortParm""] = sortOrder == ""Date"" ? ""date_desc"" : ""Date"";\r\n> \r\n>     if (searchString != null)\r\n>     {\r\n>         page = 1;\r\n>     }\r\n>     else\r\n>     {\r\n>         searchString = currentFilter;\r\n>     }\r\n> \r\n>     ViewData[""CurrentFilter""] = searchString;\r\n> \r\n>     var students = from s in _context.Students\r\n>                    select s;\r\n>     if (!String.IsNullOrEmpty(searchString))\r\n>     {\r\n>         students = students.Where(s => s.LastName.Contains(searchString)\r\n>                                || s.FirstMidName.Contains(searchString));\r\n>     }\r\n>     switch (sortOrder)\r\n>     {\r\n>         case ""name_desc"":\r\n>             students = students.OrderByDescending(s => s.LastName);\r\n>             break;\r\n>         case ""Date"":\r\n>             students = students.OrderBy(s => s.EnrollmentDate);\r\n>             break;\r\n>         case ""date_desc"":\r\n>             students = students.OrderByDescending(s => s.EnrollmentDate);\r\n>             break;\r\n>         default:\r\n>             students = students.OrderBy(s => s.LastName);\r\n>             break;\r\n>     }\r\n> \r\n>     int pageSize = 3;\r\n>     return View(await PaginatedList<Student>.CreateAsync(students.AsNoTracking(), page ?? 1, pageSize));\r\n> }\r\n> ```\r\n> source: https://docs.microsoft.com/en-us/aspnet/core/data/ef-mvc/sort-filter-page?view=aspnetcore-2.0\r\n\r\nWhile versatile it's rather cumbersome/annoying to write and maintain. Just imagine an entity where you'd want to sort and filter on 10 properties and not just do it on single properties but do stuff like (pseudo example) `/resource?filter=PropA=foo & sort=PropB,desc & sort=PropC`. That's a nightmare to write.\r\n\r\nWhy can't we have something like this:\r\n\r\n```csharp\r\npublic PagedResult<Foo> Get(QueryParams<Foo> params)\r\n{\r\n    var filteredSortedPagedFoos = _db.Foos.ApplyQuery(params);\r\n    return Ok(filteredSortedPagedFoos);\r\n}\r\n```\r\n\r\nWhile this might be a bit over simplified it should demonstrate the ""out of box"" feeling I'm looking for :)\r\n\r\nI basically want something similar to what Spring Boot has ""out of the box"". \r\n\r\n```java\r\n@RepositoryRestResource\r\npublic interface FooRepository extends JpaRepository<Foo, Long> {}\r\n```\r\n\r\nThis code snippet gives me a fully functional CRUD controller with paging and sorting. Not filtering though. While I don't advocate Spring Boot because it's absolutely terrible compared to ASP.NET Core that particulier feature is pretty cool. Though it's rather limited and has all sorts of problems - as does everything with Spring Boot... Anyway...\r\n\r\nLast but not least. The implementation should take DTO usage into account.\r\n\r\nI know there are some packages that try to solve this ""problem"". I haven't found one that fully solves it. Since it's something every API or MVC site needs I think it would be handy with a default way to implement it.","csharp\r\n> public async Task<IActionResult> Index(\r\n>     string sortOrder,\r\n>     string currentFilter,\r\n>     string searchString,\r\n>     int? page)\r\n> {\r\n>     ViewData[""CurrentSort""] = sortOrder;\r\n>     ViewData[""NameSortParm""] = String.IsNullOrEmpty(sortOrder) ? ""name_desc"" : """";\r\n>     ViewData[""DateSortParm""] = sortOrder == ""Date"" ? ""date_desc"" : ""Date"";\r\n> \r\n>     if (searchString != null)\r\n>     {\r\n>         page = 1;\r\n>     }\r\n>     else\r\n>     {\r\n>         searchString = currentFilter;\r\n>     }\r\n> \r\n>     ViewData[""CurrentFilter""] = searchString;\r\n> \r\n>     var students = from s in _context.Students\r\n>                    select s;\r\n>     if (!String.IsNullOrEmpty(searchString))\r\n>     {\r\n>         students = students.Where(s => s.LastName.Contains(searchString)\r\n>                                || s.FirstMidName.Contains(searchString));\r\n>     }\r\n>     switch (sortOrder)\r\n>     {\r\n>         case ""name_desc"":\r\n>             students = students.OrderByDescending(s => s.LastName);\r\n>             break;\r\n>         case ""Date"":\r\n>             students = students.OrderBy(s => s.EnrollmentDate);\r\n>             break;\r\n>         case ""date_desc"":\r\n>             students = students.OrderByDescending(s => s.EnrollmentDate);\r\n>             break;\r\n>         default:\r\n>             students = students.OrderBy(s => s.LastName);\r\n>             break;\r\n>     }\r\n> \r\n>     int pageSize = 3;\r\n>     return View(await PaginatedList<Student>.CreateAsync(students.AsNoTracking(), page ?? 1, pageSize));\r\n> }\r\n> "
3559,"Json Patch: System.NullReferenceException while trying to use copy operation from property with null valueI'm using **2.1.1** version of **Microsoft.AspNetCore.JsonPatch** package.\r\n\r\n**Steps to reproduce:**\r\n\r\n\r\n\r\n**Actual result:**\r\n\r\nSystem.NullReferenceException is being thrown.\r\n\r\n_**Exception details:**_\r\n\r\nSystem.NullReferenceException\r\n  HResult=0x80004003\r\n  Message=Object reference not set to an instance of an object.\r\n  Source=System.Private.CoreLib\r\n  StackTrace:\r\n   at System.Object.GetType()\r\n   at Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter.Copy(Operation operation, Object objectToApplyTo)\r\n   at Microsoft.AspNetCore.JsonPatch.JsonPatchDocument`1.ApplyTo(TModel objectToApplyTo, IObjectAdapter adapter)\r\n   at JsonPatchCopyIssue.Program.Main(String[] args) in ...\\JsonPatchCopyIssue\\Program.cs:line 20\r\n\r\n**Expected result:**\r\n\r\nAfter brief overview didn't find any related details in https://tools.ietf.org/html/rfc6902, but I believe that value should be copied in destination property without throwing an exception.\r\n",bug|Done|help wanted|area-mvc,pranavkm,"I'm using **2.1.1** version of **Microsoft.AspNetCore.JsonPatch** package.\r\n\r\n**Steps to reproduce:**\r\n\r\n```java\r\nclass Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var testObj = new MyClass()\r\n            {\r\n                Property1 = null,\r\n                Property2 = ""test2""\r\n            };\r\n\r\n            var patchRequest = new JsonPatchDocument<MyClass>();\r\n            patchRequest.Operations.Add(new Operation<MyClass>(op: ""copy"", path: ""Property2"", from: ""Property1""));\r\n\r\n            patchRequest.ApplyTo(testObj); // Throws System.NullReferenceException\r\n\r\n            Assert.Equal(testObj.Property1, testObj.Property2);\r\n        }\r\n\r\n        public class MyClass\r\n        {\r\n            public string Property1 { get; set; }\r\n\r\n            public string Property2 { get; set; }\r\n        }\r\n    }\r\n```\r\n\r\n**Actual result:**\r\n\r\nSystem.NullReferenceException is being thrown.\r\n\r\n_**Exception details:**_\r\n\r\nSystem.NullReferenceException\r\n  HResult=0x80004003\r\n  Message=Object reference not set to an instance of an object.\r\n  Source=System.Private.CoreLib\r\n  StackTrace:\r\n   at System.Object.GetType()\r\n   at Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter.Copy(Operation operation, Object objectToApplyTo)\r\n   at Microsoft.AspNetCore.JsonPatch.JsonPatchDocument`1.ApplyTo(TModel objectToApplyTo, IObjectAdapter adapter)\r\n   at JsonPatchCopyIssue.Program.Main(String[] args) in ...\\JsonPatchCopyIssue\\Program.cs:line 20\r\n\r\n**Expected result:**\r\n\r\nAfter brief overview didn't find any related details in https://tools.ietf.org/html/rfc6902, but I believe that value should be copied in destination property without throwing an exception.\r\n","java\r\nclass Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var testObj = new MyClass()\r\n            {\r\n                Property1 = null,\r\n                Property2 = ""test2""\r\n            };\r\n\r\n            var patchRequest = new JsonPatchDocument<MyClass>();\r\n            patchRequest.Operations.Add(new Operation<MyClass>(op: ""copy"", path: ""Property2"", from: ""Property1""));\r\n\r\n            patchRequest.ApplyTo(testObj); // Throws System.NullReferenceException\r\n\r\n            Assert.Equal(testObj.Property1, testObj.Property2);\r\n        }\r\n\r\n        public class MyClass\r\n        {\r\n            public string Property1 { get; set; }\r\n\r\n            public string Property2 { get; set; }\r\n        }\r\n    }\r\n"
15645,"Parameter of type object and string literalHi there.\r\nI tried to create a parameter of type object and than use type switch for various types (a single message of type string or a list of messages).\r\nSo I have created a parameter:\r\n\r\n\r\n\r\nThen, when I use it with literal value:\r\n\r\n\r\n\r\nIt strips out `""` and generates an invalid code:\r\n\r\n\r\n\r\nIt seems that only string is buggy, boolean and int values work.\r\nAlso when I pass a value of some property, it's ok.\r\n\r\nI'm using Blazor 0.5.1.",area-blazor,rynowak,"Hi there.\r\nI tried to create a parameter of type object and than use type switch for various types (a single message of type string or a list of messages).\r\nSo I have created a parameter:\r\n\r\n```C#\r\n[Parameter]\r\nprotected object Message { get; set; }\r\n```\r\n\r\nThen, when I use it with literal value:\r\n\r\n```html\r\n<Alert Message=""Try adding some exchange rates."" />\r\n```\r\n\r\nIt strips out `""` and generates an invalid code:\r\n\r\n```C#\r\nbuilder2.OpenComponent<Money.UI.Blazor.Components.Bootstrap.Alert>(63);\r\nbuilder2.AddAttribute(64, ""Message"", Microsoft.AspNetCore.Blazor.Components.RuntimeHelpers.TypeCheck<System.Object>(Try adding some exchange rates.));\r\nbuilder2.CloseComponent();\r\n```\r\n\r\nIt seems that only string is buggy, boolean and int values work.\r\nAlso when I pass a value of some property, it's ok.\r\n\r\nI'm using Blazor 0.5.1.",C#\r\n[Parameter]\r\nprotected object Message { get; set; }\r\n
3449,"using ProtectKeysWithDpapiNG with certificate fails after creating new key storageWhen I configure data protection with `ProtectKeysWithDpapiNG` and use an certificate I get an exception.\r\n\r\n    System.Security.Cryptography.CryptographicException: Encryption failed.\r\n       at Microsoft.AspNetCore.Cryptography.UnsafeNativeMethods.ThrowExceptionForNCryptStatusImpl(Int32 ntstatus)\r\n       at Microsoft.AspNetCore.DataProtection.Cng.DpapiSecretSerializerHelper.ProtectWithDpapiNGCore(NCryptDescriptorHandle protectionDescriptorHandle, Byte* pbData, UInt32 cbData)\r\n       at Microsoft.AspNetCore.DataProtection.Cng.DpapiSecretSerializerHelper.ProtectWithDpapiNG(ISecret secret, NCryptDescriptorHandle protectionDescriptorHandle)\r\n       at Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiNGXmlEncryptor.Encrypt(XElement plaintextElement)\r\n       at Microsoft.AspNetCore.DataProtection.XmlEncryption.XmlEncryptionExtensions.EncryptIfNecessary(IXmlEncryptor encryptor, XElement element)\r\n       at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate)\r\n       at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate)\r\n       at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)\r\n       at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.ICacheableKeyRingProvider.GetCacheableKeyRing(DateTimeOffset now)\r\n       at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)\r\n       at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Protect(Byte[] plaintext)\r\n       at Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.Protect(IDataProtector protector, String plaintext)\r\n       at NtFreX.Samples.DataProtection.Program.Reproducable() in C:\\Users\\ftr\\Documents\\Visual Studio 2017\\Projects\\NtFreX.Samples\\NtFreX.Samples.DataProtection\\Program.cs:line 38\r\n\r\nI have created the certificate with powershell.\r\n\r\n\r\n\r\nI can reproduce this behaivor with the following code.\r\n\r\n\r\n\r\nI'm using the following nuget packages.\r\n\r\n - Microsoft.AspNetCore.DataProtection v2.1.1\r\n - Microsoft.Extensions.DependencyInjection v2.1.1\r\n\r\nAnd I target `netcoreapp2.1`\r\n\r\nThe funny thing is I can get it to work with the following hack. All Debug.Assert's are passing.\r\n\r\n\r\n\r\nI can reproduce this problem when I configure the data protection to use ProtectKeysWithDpapiNG with an certificate and the key storage has not been setup by ProtectKeysWithDpapiNG with an user before. I can reproduce this when using other key storages.\r\n\r\nIs this an bug in the framework?",investigate|area-dataprotection,HaoK,"When I configure data protection with `ProtectKeysWithDpapiNG` and use an certificate I get an exception.\r\n\r\n    System.Security.Cryptography.CryptographicException: Encryption failed.\r\n       at Microsoft.AspNetCore.Cryptography.UnsafeNativeMethods.ThrowExceptionForNCryptStatusImpl(Int32 ntstatus)\r\n       at Microsoft.AspNetCore.DataProtection.Cng.DpapiSecretSerializerHelper.ProtectWithDpapiNGCore(NCryptDescriptorHandle protectionDescriptorHandle, Byte* pbData, UInt32 cbData)\r\n       at Microsoft.AspNetCore.DataProtection.Cng.DpapiSecretSerializerHelper.ProtectWithDpapiNG(ISecret secret, NCryptDescriptorHandle protectionDescriptorHandle)\r\n       at Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiNGXmlEncryptor.Encrypt(XElement plaintextElement)\r\n       at Microsoft.AspNetCore.DataProtection.XmlEncryption.XmlEncryptionExtensions.EncryptIfNecessary(IXmlEncryptor encryptor, XElement element)\r\n       at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate)\r\n       at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate)\r\n       at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)\r\n       at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.ICacheableKeyRingProvider.GetCacheableKeyRing(DateTimeOffset now)\r\n       at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)\r\n       at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Protect(Byte[] plaintext)\r\n       at Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.Protect(IDataProtector protector, String plaintext)\r\n       at NtFreX.Samples.DataProtection.Program.Reproducable() in C:\\Users\\ftr\\Documents\\Visual Studio 2017\\Projects\\NtFreX.Samples\\NtFreX.Samples.DataProtection\\Program.cs:line 38\r\n\r\nI have created the certificate with powershell.\r\n\r\n```powershell\r\nNew-SelfSignedCertificate -DnsName ""ntfrex.samples"" -CertStoreLocation ""cert:\\LocalMachine\\My""\r\n       PSParentPath: Microsoft.PowerShell.Security\\Certificate::LocalMachine\\My\r\n\r\nThumbprint                                Subject\r\n----------                                -------\r\n05871CD628D1D7917E2D8ED76056ACC5829D43A1  CN=ntfrex.samples\r\n```\r\n\r\nI can reproduce this behaivor with the following code.\r\n\r\n```c#\r\n// creating a new directory is important to ensure nothing is saved somewhere allready\r\nvar directory = Path.Combine(Path.GetTempPath(), Guid.NewGuid().ToString());\r\nDirectory.CreateDirectory(directory);\r\n\r\nconst string certificateThumbprint = ""05871CD628D1D7917E2D8ED76056ACC5829D43A1"";\r\n\r\nvar serviceCollection = new ServiceCollection();\r\n\r\nserviceCollection\r\n    .AddDataProtection()\r\n    .SetApplicationName(typeof(Program).FullName)\r\n    .PersistKeysToFileSystem(new DirectoryInfo(directory))\r\n    .ProtectKeysWithDpapiNG($""CERTIFICATE=HashId:{certificateThumbprint.ToUpper()}"", DpapiNGProtectionDescriptorFlags.None);\r\n\r\nvar serviceProvider = serviceCollection.BuildServiceProvider();\r\n\r\nvar data = ""TestData"";\r\nvar dataProtector = serviceProvider.GetDataProtector(""TestDataProtector"");\r\nvar protectedData = dataProtector.Protect(data);\r\nvar unprotectedData = dataProtector.Unprotect(protectedData);\r\n\r\nDebug.Assert(data == unprotectedData);\r\n```\r\n\r\nI'm using the following nuget packages.\r\n\r\n - Microsoft.AspNetCore.DataProtection v2.1.1\r\n - Microsoft.Extensions.DependencyInjection v2.1.1\r\n\r\nAnd I target `netcoreapp2.1`\r\n\r\nThe funny thing is I can get it to work with the following hack. All Debug.Assert's are passing.\r\n\r\n```c#\r\n// creating a new directory is important to ensure nothing is saved somewhere allready\r\nvar directory = Path.Combine(Path.GetTempPath(), Guid.NewGuid().ToString());\r\nDirectory.CreateDirectory(directory);\r\n\r\n{\r\n    var serviceCollection = new ServiceCollection();\r\n\r\n    serviceCollection\r\n        .AddDataProtection()\r\n        .SetApplicationName(typeof(Program).FullName)\r\n        .PersistKeysToFileSystem(new DirectoryInfo(directory))\r\n        .ProtectKeysWithDpapiNG();\r\n\r\n    var serviceProvider = serviceCollection.BuildServiceProvider();\r\n\r\n    var data = ""TestData"";\r\n    var dataProtector = serviceProvider.GetDataProtector(""TestDataProtector"");\r\n    var protectedData = dataProtector.Protect(data);\r\n    var unprotectedData = dataProtector.Unprotect(protectedData);\r\n\r\n    Debug.Assert(data == unprotectedData);\r\n}\r\n\r\n{\r\n    const string certificateThumbprint = ""05871CD628D1D7917E2D8ED76056ACC5829D43A1"";\r\n\r\n    var serviceCollection = new ServiceCollection();\r\n\r\n    serviceCollection\r\n        .AddDataProtection()\r\n        .SetApplicationName(typeof(Program).FullName)\r\n        .PersistKeysToFileSystem(new DirectoryInfo(directory))\r\n        .ProtectKeysWithDpapiNG($""CERTIFICATE=HashId:{certificateThumbprint.ToUpper()}"", DpapiNGProtectionDescriptorFlags.None);\r\n\r\n    var serviceProvider = serviceCollection.BuildServiceProvider();\r\n\r\n    var data = ""TestData"";\r\n    var dataProtector = serviceProvider.GetDataProtector(""TestDataProtector"");\r\n    var protectedData = dataProtector.Protect(data);\r\n    var unprotectedData = dataProtector.Unprotect(protectedData);\r\n\r\n    Debug.Assert(data == unprotectedData);\r\n}\r\n```\r\n\r\nI can reproduce this problem when I configure the data protection to use ProtectKeysWithDpapiNG with an certificate and the key storage has not been setup by ProtectKeysWithDpapiNG with an user before. I can reproduce this when using other key storages.\r\n\r\nIs this an bug in the framework?","powershell\r\nNew-SelfSignedCertificate -DnsName ""ntfrex.samples"" -CertStoreLocation ""cert:\\LocalMachine\\My""\r\n       PSParentPath: Microsoft.PowerShell.Security\\Certificate::LocalMachine\\My\r\n\r\nThumbprint                                Subject\r\n----------                                -------\r\n05871CD628D1D7917E2D8ED76056ACC5829D43A1  CN=ntfrex.samples\r\n"
14286,Only have valid Html content in Virtual Html documentRight now if you have the following in your Razor file:\r\n\r\n\r\n\r\nAnd you try invoking completion on the `<str` you get no completion. This is something that could definitely be fixed on the Html language service side but should also be addressed by us. This is the first issue I noticed by duplicating the Razor content in the Html buffer but it'd be wise of us to replace all C# content in the HTML buffer with spaces to avoid any further issues.,Done|enhancement|area-mvc|Razor Tooling Big Rock,ajaybhargavb,Right now if you have the following in your Razor file:\r\n\r\n```HTML\r\n@{\r\n    if (1 < 2)\r\n    {\r\n        ...\r\n    }\r\n}\r\n\r\n<str\r\n```\r\n\r\nAnd you try invoking completion on the `<str` you get no completion. This is something that could definitely be fixed on the Html language service side but should also be addressed by us. This is the first issue I noticed by duplicating the Razor content in the Html buffer but it'd be wise of us to replace all C# content in the HTML buffer with spaces to avoid any further issues.,HTML\r\n@{\r\n    if (1 < 2)\r\n    {\r\n        ...\r\n    }\r\n}\r\n\r\n<str\r\n
5082,"DatatemplatingIn XAML it is quite easy to use datatemplate on items. \r\nIn Razor, it does not seem possible to do it without including an external view/component.\r\n\r\nIt is quite often that I get several `foreach` on a page, with the same kind of items, and using razor, I have to repeat the same template several times, it is not very handy.\r\n\r\nI would see something similar to functions:\r\n\r\n\r\n\r\nIt would highly simplify the display of a structure like this:\r\n\r\nbuilding.cs \r\n\r\n\r\nbuilding.cshtml\r\n\r\n\r\n\r\nIt may allow recursive templates\r\n\r\n\r\nIn that specific case, component may be a better choice of implementation, but that is just an example.\r\n\r\nGlobally defined c# variables may be available or not, depending on language constraints. If not available, they can still be passed as parameters anyway.\r\n\r\nIt seems quite clean to me, does it conflict the current language in any way?",enhancement|area-blazor|:heavy_check_mark: Resolution: Answered|Status: Resolved,danroth27,"In XAML it is quite easy to use datatemplate on items. \r\nIn Razor, it does not seem possible to do it without including an external view/component.\r\n\r\nIt is quite often that I get several `foreach` on a page, with the same kind of items, and using razor, I have to repeat the same template several times, it is not very handy.\r\n\r\nI would see something similar to functions:\r\n\r\n```csharp\r\n@templates {\r\n     EventItemTemplate(string name, DateTime time, string place) {\r\n         <div class=""event"">\r\n              <div class=""event-name"">@name</div>\r\n              <div class=""event-time"">@time.ToString(""g"")</div>\r\n              <div class=""event-place"">@place</div>\r\n         <div>\r\n     }\r\n}\r\n\r\n<div class=""events"">\r\n    <div class=""events-title"">Coming events and in progress</div>\r\n    @foreach(var e in events.Where(e2=>e2.EndTime > DateTime.UtcNow)) \r\n    {\r\n        @EventItemTemplate(e.Name, e.Start, e.Place)\r\n    }\r\n</div>\r\n\r\n<div class=""events"">\r\n    <div class=""events-title"">Past events</div>\r\n    @foreach(var e in events.Where(e2=>e2.EndTime < DateTime.UtcNow)) \r\n    {\r\n        @EventItemTemplate(e.Name, e.Start, e.Place)\r\n    }\r\n</div>\r\n\r\n```\r\n\r\nIt would highly simplify the display of a structure like this:\r\n\r\nbuilding.cs \r\n```csharp\r\npublic class Building\r\n{\r\n    public string Address {get;set;}\r\n    public List<Floor> Floors {get;set;}\r\n}\r\npublic class Floor\r\n{\r\n    public string Number {get;set;}\r\n    public List<Premise> Premises {get;set;}\r\n}\r\npublic class Premise\r\n{\r\n    public string Door {get;set;}\r\n    public string Owner {get;set;}\r\n    public List<string> Residents {get;set;}\r\n}\r\n```\r\n\r\nbuilding.cshtml\r\n\r\n```csharp\r\n@templates {\r\n     BuildingTemplate(Building b) {\r\n         <div class=""building"">\r\n              <div class=""building-name"">@b.Name</div>\r\n              <div class=""building-floors"">\r\n               @foreach(var f in p.Floors)\r\n               {\r\n                  @FloorTemplate(f)\r\n               }\r\n              </div>\r\n         <div>\r\n     }\r\n     FloorTemplate(Floor f) {\r\n         <div class=""floor"">\r\n              <div class=""floor-number"">@f.Number</div>\r\n              <div class=""floor-premises"">\r\n               @foreach(var p in f.Premises)\r\n               {\r\n                  @PremiseTemplate(p)\r\n               }\r\n              </div>\r\n         <div>\r\n     }\r\n     PremiseTemplate(Premise p) {\r\n         <div class=""premise"">\r\n              <div class=""premise-door"">@p.Door</div>\r\n              <div class=""premise-owner"">@p.Owner</div>\r\n              <div class=""premise-residents"">\r\n               @foreach(var r in p.Resident)\r\n               {\r\n                     <span class=""premise-resident"">@r</span>\r\n               }\r\n              </div>\r\n         <div>\r\n     }\r\n}\r\n\r\n<div class=""buildings left-side"">\r\n    @foreach(var b in Model.BuildingsLeft) \r\n    {\r\n        @BuildingTemplate(b)\r\n    }\r\n</div>\r\n\r\n<div class=""buildings right-side"">\r\n    @foreach(var b in Model.BuildingsRight) \r\n    {\r\n        @BuildingTemplate(b)\r\n    }\r\n</div>\r\n```\r\n\r\nIt may allow recursive templates\r\n\r\n```csharp\r\n@templates {\r\n     CommentItemTemplate(CommentViewModel comment) {\r\n         <div class=""comment"">\r\n              <div class=""comment-name"">By: @name</div>\r\n              <div class=""comment-time"">@time.ToString(""g"")</div>\r\n              @if(comment.Comments?.Count>0)\r\n              {\r\n                  <div class=""comment-subcomments"">\r\n                  @foreach(var c in comment.Comments)\r\n                  {\r\n                          @CommentItemTemplate(c)\r\n                  }\r\n                  </div>\r\n              }\r\n         <div>\r\n     }\r\n}\r\n\r\n<div class=""comments"">\r\n    <div class=""comments-title"">Comments</div>\r\n    @foreach(var c in Model.Comments) \r\n    {\r\n        @CommentItemTemplate(c)\r\n    }\r\n</div>\r\n```\r\nIn that specific case, component may be a better choice of implementation, but that is just an example.\r\n\r\nGlobally defined c# variables may be available or not, depending on language constraints. If not available, they can still be passed as parameters anyway.\r\n\r\nIt seems quite clean to me, does it conflict the current language in any way?","csharp\r\n@templates {\r\n     EventItemTemplate(string name, DateTime time, string place) {\r\n         <div class=""event"">\r\n              <div class=""event-name"">@name</div>\r\n              <div class=""event-time"">@time.ToString(""g"")</div>\r\n              <div class=""event-place"">@place</div>\r\n         <div>\r\n     }\r\n}\r\n\r\n<div class=""events"">\r\n    <div class=""events-title"">Coming events and in progress</div>\r\n    @foreach(var e in events.Where(e2=>e2.EndTime > DateTime.UtcNow)) \r\n    {\r\n        @EventItemTemplate(e.Name, e.Start, e.Place)\r\n    }\r\n</div>\r\n\r\n<div class=""events"">\r\n    <div class=""events-title"">Past events</div>\r\n    @foreach(var e in events.Where(e2=>e2.EndTime < DateTime.UtcNow)) \r\n    {\r\n        @EventItemTemplate(e.Name, e.Start, e.Place)\r\n    }\r\n</div>\r\n\r\n"
4732,Add IIPEndPointConnectionFeatureRight now the only way to get IP information is to go through the IHttpConnectionFeature which is a bit unfortunate:\r\n\r\n,feature-kestrel|🥌 Bedrock|accepted|area-networking,davidfowl,Right now the only way to get IP information is to go through the IHttpConnectionFeature which is a bit unfortunate:\r\n\r\n```C#\r\npublic interface IIPEndPointConnectionFeature\r\n{\r\n    IPEndPoint RemoteEndPoint { get; set; }\r\n    IPEndPoint LocalEndPoint { get; set; }\r\n}\r\n```,C#\r\npublic interface IIPEndPointConnectionFeature\r\n{\r\n    IPEndPoint RemoteEndPoint { get; set; }\r\n    IPEndPoint LocalEndPoint { get; set; }\r\n}\r\n
4901,"Proposal: View Component Slots# Feature Proposal\r\n\r\nProvide a built-in or otherwise framework supplied mechanism for View Components, when rendered via a tag helper, to render user-supplied child content that can be injected into the View Component's view template in pre-defined locations\r\n\r\n\r\n# Use Case\r\n\r\nWhen building component based presentation a number of useful features present in other component inspired frameworks are missing in Mvc:\r\n\r\n* The ability to render user supplied child content from its invocation location in the component template\r\n* The ability to mark and control placement of multiple elements of user supplied child content in the component template\r\n* The ability to show default content if user supplied content was not provided\r\n* Child content mechanism is supplied and supported by the framework, standardizing syntax and usage.\r\n\r\nAllowing view components to accept child content provides new ways to build complex component driven presentation.\r\n\r\n## Use Case Example\r\n\r\nWithin some calling view, instantiating a View Component via a tag helper and supplying child content:\r\n\r\nCalling View:\r\n\r\n\r\nThe ViewComponents view template would provide the slot mechanism to place the user defined child content:\r\n\r\nView Component View Template:\r\n\r\n\r\nThe View Component slotting mechanism will take care of rendering the user supplied child content into the correct slots in the View Component's user defined slot locations. Example output of the following:\r\n\r\n![slots_example_output](https://user-images.githubusercontent.com/1124388/43367302-ca48f6a6-9318-11e8-8916-2fc8260709cf.png)\r\n\r\n# Inspiration\r\n\r\nContent slotting or otherwise rendering user supplied child content in a parent template is a known and useful pattern seeing fair usage today:\r\n\r\n* Web Component Slots (MDN): https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_templates_and_slots\r\n* vuejs Slots: https://vuejs.org/v2/guide/components-slots.html\r\n* Angular Template Outlet: https://angular.io/api/common/NgTemplateOutlet\r\n\r\nPrimary insipriation is from the web component HTML templates spec\r\n\r\n# Requirements\r\n\r\nSome potential requirements determined while researching this proposal:\r\n\r\n* View Component slots should re-use the existing View Component tag helper ```<vc:[component_kebab_case_name]>```\r\n* A new tag helper MUST be introduced (`<vc:slot>`) to mark locations in a View Component's view template where user supplied content can be placed\r\n* User supplied child content within the body of the View Component Tag Helper MUST be optional\r\n* All existing view attribute binding expression features MUST continue to work\r\n* The View Component slotting mechanism MUST properly handle nested View Component Tag Helpers and View Component slots to any arbitrary depth in user supplied child content\r\n* Users MUST be able to target zero or more named View Component slots within their supplied child content, whether or not a named slot exists in the View Component's view template.\r\n\r\n# Experimental Implementation\r\n\r\nTo facilitate interest in this proposal a simple experiement was built to showcase the View Component Slotting mechanism in action. This experiement does not necessarly implement all identified requirements and is not guarenteed to be bug-free.\r\n\r\nhttps://github.com/rdlaitila/AspNetCore.Mvc.ViewComponentSlots\r\n\r\nwhat should work:\r\n\r\n* Invoking a view component from a tag helper (see differences)\r\n* Ability to supply arbitrary (non slot targeted) child content that will be placed in the parent View Component's default `<vc:slot>`\r\n* Ability to supply slot targeted child content that will be placed in a matching `<vc:slot>` element in the View Component's view template where a slot with attribute `name=""[slot_name]""` exists (ex: `<vc:slot name=""some-slot""`>)\r\n* Ability for View Component Slots to render default content if no user supplied child content targeting that slot was supplied.\r\n* Ability to render nested View Component Tag Helpers and slots\r\n* tag parameter expression binding within user supplied child content\r\n\r\ndifferences:\r\n\r\n* Due to the inability to hook into the existing [View Component Tag Helper](https://docs.microsoft.com/en-us/aspnet/core/mvc/views/view-components?view=aspnetcore-2.1#invoking-a-view-component-as-a-tag-helper), a custom View Component Tag Helper was built that can invoke a view component by the tag elements name in either `kebab-case` or `PascalCase` where the tag contains attribute `vc` (ex: `<my-custom-component vc>` or `<MyCustomComponent vc>`)\r\n* slot elements are named `<vc:slot>` as well as the slot selector attribute  `vc:slot=""[name]""`simply to match the existing View Component Tag Helper naming convention `<vc:[component-kebab-name]>` for consistency. There is no reason we could not adopt the current web component slot naming convension, or using some other name entirly.\r\n\r\n# Author's Contribution\r\n\r\nUnfortunatly I will be time limited to focus on a core contribution of View Component Slots to aspnet/Mvc and don't posses deep enough knolwedge of contribution guidelines or the Mvc sources to properly facilitate implementation of this proposal.\r\n\r\nI can however allocate some time to improve the [experimental proposal implementation](https://github.com/rdlaitila/AspNetCore.Mvc.ViewComponentSlots) as needed and respond to community issues and pull requests on a best-effort basis. I hope the experimental implementation can validate that this use case is valid and valuable to others.\r\n\r\n# Community Contribution\r\n\r\nI would be excited to see community members either help improve the example implementation or help propose how to best implement such a feature into the Mvc core.\r\n\r\n\r\n\r\n",enhancement|area-mvc,danroth27,"# Feature Proposal\r\n\r\nProvide a built-in or otherwise framework supplied mechanism for View Components, when rendered via a tag helper, to render user-supplied child content that can be injected into the View Component's view template in pre-defined locations\r\n\r\n\r\n# Use Case\r\n\r\nWhen building component based presentation a number of useful features present in other component inspired frameworks are missing in Mvc:\r\n\r\n* The ability to render user supplied child content from its invocation location in the component template\r\n* The ability to mark and control placement of multiple elements of user supplied child content in the component template\r\n* The ability to show default content if user supplied content was not provided\r\n* Child content mechanism is supplied and supported by the framework, standardizing syntax and usage.\r\n\r\nAllowing view components to accept child content provides new ways to build complex component driven presentation.\r\n\r\n## Use Case Example\r\n\r\nWithin some calling view, instantiating a View Component via a tag helper and supplying child content:\r\n\r\nCalling View:\r\n```html\r\n<vc:custom-view-component>\r\n    <p>My Default Slot Content!</p>\r\n    <p vc:slot=""first"">My First Slot Content!</p>\r\n    <p vc:slot=""second"">My Second Slot Content!</p>\r\n\r\n    <vc:custom-view-component vc:slot=""nested"">\r\n        <p>My NESTED Default Slot Content!</p>\r\n        <p vc:slot=""first"">My NESTED First Slot Content!</p>\r\n        <p vc:slot=""second"">My NESTED Second Slot Content!</p>\r\n    </vc:custom-view-component>\r\n\r\n    <p>More Default Slot Content!</p>\r\n</vc:custom-view-component>\r\n```\r\n\r\nThe ViewComponents view template would provide the slot mechanism to place the user defined child content:\r\n\r\nView Component View Template:\r\n```html\r\n<h1>Custom View Component</h1>\r\n\r\n<h3>Second slot content</h3>\r\n<vc:slot name=""second""><p>please supply a value for my second slot</p></vc:slot>\r\n\r\n<h3>First slot content</h3>\r\n<vc:slot name=""first""><p>please supply a value for my first slot</p></vc:slot>\r\n\r\n<h3>Default slot content</h3>\r\n<vc:slot><p>please supply a value for my default slot</p></vc:slot>\r\n\r\n<h3>Repeating slots render the same data</h3>\r\n<vc:slot name=""first"">please supply a value for my first slot</vc:slot>\r\n<vc:slot name=""second"">please supply a value for my second slot</vc:slot>\r\n<vc:slot><p>please supply a value for my default slot</p></vc:slot>\r\n\r\n<h3>Nesting components with slots works</h3>\r\n<div style=""border-left:1px solid black;padding-left:20px;"">\r\n    <vc:slot name=""nested"">no nested content supplied</vc:slot>\r\n</div>\r\n```\r\n\r\nThe View Component slotting mechanism will take care of rendering the user supplied child content into the correct slots in the View Component's user defined slot locations. Example output of the following:\r\n\r\n![slots_example_output](https://user-images.githubusercontent.com/1124388/43367302-ca48f6a6-9318-11e8-8916-2fc8260709cf.png)\r\n\r\n# Inspiration\r\n\r\nContent slotting or otherwise rendering user supplied child content in a parent template is a known and useful pattern seeing fair usage today:\r\n\r\n* Web Component Slots (MDN): https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_templates_and_slots\r\n* vuejs Slots: https://vuejs.org/v2/guide/components-slots.html\r\n* Angular Template Outlet: https://angular.io/api/common/NgTemplateOutlet\r\n\r\nPrimary insipriation is from the web component HTML templates spec\r\n\r\n# Requirements\r\n\r\nSome potential requirements determined while researching this proposal:\r\n\r\n* View Component slots should re-use the existing View Component tag helper ```<vc:[component_kebab_case_name]>```\r\n* A new tag helper MUST be introduced (`<vc:slot>`) to mark locations in a View Component's view template where user supplied content can be placed\r\n* User supplied child content within the body of the View Component Tag Helper MUST be optional\r\n* All existing view attribute binding expression features MUST continue to work\r\n* The View Component slotting mechanism MUST properly handle nested View Component Tag Helpers and View Component slots to any arbitrary depth in user supplied child content\r\n* Users MUST be able to target zero or more named View Component slots within their supplied child content, whether or not a named slot exists in the View Component's view template.\r\n\r\n# Experimental Implementation\r\n\r\nTo facilitate interest in this proposal a simple experiement was built to showcase the View Component Slotting mechanism in action. This experiement does not necessarly implement all identified requirements and is not guarenteed to be bug-free.\r\n\r\nhttps://github.com/rdlaitila/AspNetCore.Mvc.ViewComponentSlots\r\n\r\nwhat should work:\r\n\r\n* Invoking a view component from a tag helper (see differences)\r\n* Ability to supply arbitrary (non slot targeted) child content that will be placed in the parent View Component's default `<vc:slot>`\r\n* Ability to supply slot targeted child content that will be placed in a matching `<vc:slot>` element in the View Component's view template where a slot with attribute `name=""[slot_name]""` exists (ex: `<vc:slot name=""some-slot""`>)\r\n* Ability for View Component Slots to render default content if no user supplied child content targeting that slot was supplied.\r\n* Ability to render nested View Component Tag Helpers and slots\r\n* tag parameter expression binding within user supplied child content\r\n\r\ndifferences:\r\n\r\n* Due to the inability to hook into the existing [View Component Tag Helper](https://docs.microsoft.com/en-us/aspnet/core/mvc/views/view-components?view=aspnetcore-2.1#invoking-a-view-component-as-a-tag-helper), a custom View Component Tag Helper was built that can invoke a view component by the tag elements name in either `kebab-case` or `PascalCase` where the tag contains attribute `vc` (ex: `<my-custom-component vc>` or `<MyCustomComponent vc>`)\r\n* slot elements are named `<vc:slot>` as well as the slot selector attribute  `vc:slot=""[name]""`simply to match the existing View Component Tag Helper naming convention `<vc:[component-kebab-name]>` for consistency. There is no reason we could not adopt the current web component slot naming convension, or using some other name entirly.\r\n\r\n# Author's Contribution\r\n\r\nUnfortunatly I will be time limited to focus on a core contribution of View Component Slots to aspnet/Mvc and don't posses deep enough knolwedge of contribution guidelines or the Mvc sources to properly facilitate implementation of this proposal.\r\n\r\nI can however allocate some time to improve the [experimental proposal implementation](https://github.com/rdlaitila/AspNetCore.Mvc.ViewComponentSlots) as needed and respond to community issues and pull requests on a best-effort basis. I hope the experimental implementation can validate that this use case is valid and valuable to others.\r\n\r\n# Community Contribution\r\n\r\nI would be excited to see community members either help improve the example implementation or help propose how to best implement such a feature into the Mvc core.\r\n\r\n\r\n\r\n","html\r\n<vc:custom-view-component>\r\n    <p>My Default Slot Content!</p>\r\n    <p vc:slot=""first"">My First Slot Content!</p>\r\n    <p vc:slot=""second"">My Second Slot Content!</p>\r\n\r\n    <vc:custom-view-component vc:slot=""nested"">\r\n        <p>My NESTED Default Slot Content!</p>\r\n        <p vc:slot=""first"">My NESTED First Slot Content!</p>\r\n        <p vc:slot=""second"">My NESTED Second Slot Content!</p>\r\n    </vc:custom-view-component>\r\n\r\n    <p>More Default Slot Content!</p>\r\n</vc:custom-view-component>\r\n"
15748,"Experiment: Blazor Client vs Server performanceDefault Blazor application is relatively simple, but for those interested I have just published two versions:\r\n\r\nhttp://blazorserwer.azurewebsites.net/ (blazorserver name is already taken)\r\nhttp://blazorclient.azurewebsites.net/\r\n\r\nBoth applications are in the same S1 plan in Western Europe data centre. Blazor version 0.5.1.\r\n\r\nWhat is worth testing?\r\n1. Click on `Home` and `Counter` menu. In Blazor client version there is no internet transmission at all. In server version `click` is transmitted to the server and server responds with updated page. About 1.5 - 2 KB.\r\n2. You can also click on `Click me` button in `Counter` page. Yet again no transmission in client version and about 600 bytes in server version on every click.\r\n3. Select `Fetch data`. In client version data is transmitted from the server in JSON format - about 5 KB. In server version we receive 26 KB. I have increased number of items to 50.\r\n***UPDATE 2018-07-28: current version returns 500 forecasts.*** \r\n\r\nIn my opinion server version looks responsive. It is normal that some transmission is required in experiment number 1 and 2. **But I think that in experiment number 3 server version transmits to much data.** If I understand correctly server has to send whole table in HTML format. This table is very simple:\r\n\r\nSingle table row has about 65-70 characters. Multiply this by 50, add ~200 bytes for page header and first paragraph, and we are well below 5 KB. Why do you need 26 KB to send it.\r\n",area-blazor,SteveSandersonMS,"Default Blazor application is relatively simple, but for those interested I have just published two versions:\r\n\r\nhttp://blazorserwer.azurewebsites.net/ (blazorserver name is already taken)\r\nhttp://blazorclient.azurewebsites.net/\r\n\r\nBoth applications are in the same S1 plan in Western Europe data centre. Blazor version 0.5.1.\r\n\r\nWhat is worth testing?\r\n1. Click on `Home` and `Counter` menu. In Blazor client version there is no internet transmission at all. In server version `click` is transmitted to the server and server responds with updated page. About 1.5 - 2 KB.\r\n2. You can also click on `Click me` button in `Counter` page. Yet again no transmission in client version and about 600 bytes in server version on every click.\r\n3. Select `Fetch data`. In client version data is transmitted from the server in JSON format - about 5 KB. In server version we receive 26 KB. I have increased number of items to 50.\r\n***UPDATE 2018-07-28: current version returns 500 forecasts.*** \r\n\r\nIn my opinion server version looks responsive. It is normal that some transmission is required in experiment number 1 and 2. **But I think that in experiment number 3 server version transmits to much data.** If I understand correctly server has to send whole table in HTML format. This table is very simple:\r\n```html\r\n    <table class=""table"">\r\n        <thead>\r\n            <tr>\r\n                <th>Date</th>\r\n                <th>Temp. (C)</th>\r\n                <th>Temp. (F)</th>\r\n                <th>Summary</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n                <tr>\r\n                    <td>7/28/2018</td>\r\n                    <td>28</td>\r\n                    <td>0</td>\r\n                    <td>Freezing</td>\r\n                </tr>\r\n                ~~~~\r\n```\r\nSingle table row has about 65-70 characters. Multiply this by 50, add ~200 bytes for page header and first paragraph, and we are well below 5 KB. Why do you need 26 KB to send it.\r\n","html\r\n    <table class=""table"">\r\n        <thead>\r\n            <tr>\r\n                <th>Date</th>\r\n                <th>Temp. (C)</th>\r\n                <th>Temp. (F)</th>\r\n                <th>Summary</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n                <tr>\r\n                    <td>7/28/2018</td>\r\n                    <td>28</td>\r\n                    <td>0</td>\r\n                    <td>Freezing</td>\r\n                </tr>\r\n                ~~~~\r\n"
5550,"Component tag helper matching should be case-sensitiveInitially started in #1155, make it possible to only match Blazor components as named by the C# class.\r\nThe following 2 snippets are not equal: \r\n\r\nis not equal to (mind the casing)\r\n\r\n\r\nWe could make it easier for component libraries as BlazorStrap for example, which has a [workaround](https://github.com/chanan/BlazorStrap/blob/d771191f7572aae1aba540c8f87fe81695a621d5/src/Sample/Pages/forms.cshtml#L9). Basically this is also what React does.\r\n\r\nI'm not really sure if this is Blazor or Razor specific, so if I'm mistaken I do apologise.",:heavy_check_mark: Resolution: Duplicate|enhancement|area-blazor,ajaybhargavb,"Initially started in #1155, make it possible to only match Blazor components as named by the C# class.\r\nThe following 2 snippets are not equal: \r\n```csharp\r\n<Form>\r\n...\r\n</Form>\r\n```\r\nis not equal to (mind the casing)\r\n```html\r\n<form>\r\n...\r\n</form>\r\n```\r\n\r\nWe could make it easier for component libraries as BlazorStrap for example, which has a [workaround](https://github.com/chanan/BlazorStrap/blob/d771191f7572aae1aba540c8f87fe81695a621d5/src/Sample/Pages/forms.cshtml#L9). Basically this is also what React does.\r\n\r\nI'm not really sure if this is Blazor or Razor specific, so if I'm mistaken I do apologise.",csharp\r\n<Form>\r\n...\r\n</Form>\r\n
3336,"Adding AddRequestCultureProvider as extension methodFor all that are familiar with localization, adding new culture provider is something confusing, because the developer expect that the newly added provider is winner provider, but it's not!!\r\n\r\nHave a look to [this](https://github.com/aspnet/Localization/blob/master/samples/LocalizationSample/Startup.cs#L34) we should use `Insert` instead of `Add`, to let our culture provider wins over the other predefined culture providers.\r\n\r\nUsing this\r\n\r\n\r\nis slightly better than\r\n\r\n\r\n/cc @ryanbrandenburg ",Done|enhancement|area-mvc,ryanbrandenburg,"For all that are familiar with localization, adding new culture provider is something confusing, because the developer expect that the newly added provider is winner provider, but it's not!!\r\n\r\nHave a look to [this](https://github.com/aspnet/Localization/blob/master/samples/LocalizationSample/Startup.cs#L34) we should use `Insert` instead of `Add`, to let our culture provider wins over the other predefined culture providers.\r\n\r\nUsing this\r\n```csharp\r\noptions.AddRequestCultureProvider(new CustomRequestCultureProvider(async context =>\r\n{\r\n\r\n}));\r\n```\r\n\r\nis slightly better than\r\n```csharp\r\noptions.RequestCultureProviders.Insert(0, new CustomRequestCultureProvider(async context =>\r\n{\r\n\r\n}));\r\n```\r\n\r\n/cc @ryanbrandenburg ",csharp\r\noptions.AddRequestCultureProvider(new CustomRequestCultureProvider(async context =>\r\n{\r\n\r\n}));\r\n
4899,Consider supporting unwrapping some expressions such as Task.FromResult in analyzerConsider a code block like so:\r\n\r\n\r\n\r\nCurrently the analyzer does not unwrap the `Task.FromResult` expression and would instead treat it as if it were a model instance being returned. We could consider unwrapping some common expressions like this,enhancement|area-mvc,pranavkm,Consider a code block like so:\r\n\r\n```C#\r\npublic Task<IActionResult> Post(Model model)\r\n{\r\n   if (!ModelState.IsValid) { return Task.FromResult(BadRequest()); }\r\n\r\n   return DoWorkAsync(model);\r\n}\r\n```\r\n\r\nCurrently the analyzer does not unwrap the `Task.FromResult` expression and would instead treat it as if it were a model instance being returned. We could consider unwrapping some common expressions like this,C#\r\npublic Task<IActionResult> Post(Model model)\r\n{\r\n   if (!ModelState.IsValid) { return Task.FromResult(BadRequest()); }\r\n\r\n   return DoWorkAsync(model);\r\n}\r\n
3323,"CORs in webapi not returning valid response_From @FlyingWraptor on July 12, 2018 15:18_\n\nHello there, so I've been migrating all API's to .net core but it's denying me from doing so with this issue.\r\nSo I've enabled CORs to provide access from `www.domain.tld` to my api at `api.domain.tld` using only specific methods. Angular requires the `Access-Control-Allow-Methods`  header to be returned but the build in CORs doesn't do that at all.\r\n\r\n.NET Core SDK: 2.1.301\r\n\r\nThe request contains the following:\r\n```\r\nOPTIONS /someuri HTTP/1.1\r\nOrigin: https://www.domain.tld\r\nHost: api.domain.tld\r\nAccess-Control-Request-Method: GET\r\nAccess-Control-Request-Headers: content-type\r\nCache-Control: no-cache\r\nPostman-Token: abdb2984-e399-44d1-8048-777c65dcec5e\r\nContent-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW\r\n```\r\n\r\nThe response in postman:\r\n```\r\nAccess-Control-Allow-Headers \u2192content-type\r\nAccess-Control-Allow-Origin \u2192https://www.domain.tld\r\nDate \u2192Thu, 12 Jul 2018 15:14:45 GMT\r\nServer \u2192Kestrel\r\nVary \u2192Origin\r\n```\r\n\r\nMy CORs configuration:\r\n\r\n\r\nI've worked around this issue using the following code and commenting out `AddCors()` and `UseCors()`:\r\n\r\n\r\nThis worked perfectly for now:\r\n```\r\nAccess-Control-Allow-Headers \u2192content-type\r\nAccess-Control-Allow-Methods \u2192GET\r\nAccess-Control-Allow-Origin \u2192https://www.domain.tld\r\nContent-Length \u21920\r\nDate \u2192Thu, 12 Jul 2018 15:16:11 GMT\r\nServer \u2192Kestrel\r\n```\r\n\r\n\r\nIs this a bug or something I'm not known with yet?\r\n\r\n\n\n_Copied from original issue: dotnet/corefx#31024_",bug|Done|area-mvc,javiercn,"_From @FlyingWraptor on July 12, 2018 15:18_\n\nHello there, so I've been migrating all API's to .net core but it's denying me from doing so with this issue.\r\nSo I've enabled CORs to provide access from `www.domain.tld` to my api at `api.domain.tld` using only specific methods. Angular requires the `Access-Control-Allow-Methods`  header to be returned but the build in CORs doesn't do that at all.\r\n\r\n.NET Core SDK: 2.1.301\r\n\r\nThe request contains the following:\r\n```\r\nOPTIONS /someuri HTTP/1.1\r\nOrigin: https://www.domain.tld\r\nHost: api.domain.tld\r\nAccess-Control-Request-Method: GET\r\nAccess-Control-Request-Headers: content-type\r\nCache-Control: no-cache\r\nPostman-Token: abdb2984-e399-44d1-8048-777c65dcec5e\r\nContent-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW\r\n```\r\n\r\nThe response in postman:\r\n```\r\nAccess-Control-Allow-Headers \u2192content-type\r\nAccess-Control-Allow-Origin \u2192https://www.domain.tld\r\nDate \u2192Thu, 12 Jul 2018 15:14:45 GMT\r\nServer \u2192Kestrel\r\nVary \u2192Origin\r\n```\r\n\r\nMy CORs configuration:\r\n```csharp\r\npublic void ConfigureServices(IServiceCollection services)\r\n{\r\n\tservices.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_1);\r\n\tservices.AddCors();\r\n}\r\npublic void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n{\r\n\t...\r\n\r\n\r\n\tapp.UseCors(builder => {\r\n\t\tbuilder.WithOrigins(""http://localhost:4200"", ""https://www.domain.tld"")\r\n\t\t\t.WithMethods(""POST"", ""GET"", ""OPTIONS"")\r\n\t\t\t.AllowAnyHeader();\r\n\t});\r\n\r\n\tapp.UseMvc();\r\n}\r\n```\r\n\r\nI've worked around this issue using the following code and commenting out `AddCors()` and `UseCors()`:\r\n```csharp\r\n[HttpOptions]\r\npublic void Options()\r\n{\r\n\tResponse.Headers.Add(""Access-Control-Allow-Headers"", ""content-type"");\r\n\tResponse.Headers.Add(""Access-Control-Allow-Origin"", ""https://www.domain.tld"");\r\n\tResponse.Headers.Add(""Access-Control-Allow-Methods"", ""GET"");\r\n}\r\n```\r\n\r\nThis worked perfectly for now:\r\n```\r\nAccess-Control-Allow-Headers \u2192content-type\r\nAccess-Control-Allow-Methods \u2192GET\r\nAccess-Control-Allow-Origin \u2192https://www.domain.tld\r\nContent-Length \u21920\r\nDate \u2192Thu, 12 Jul 2018 15:16:11 GMT\r\nServer \u2192Kestrel\r\n```\r\n\r\n\r\nIs this a bug or something I'm not known with yet?\r\n\r\n\n\n_Copied from original issue: dotnet/corefx#31024_","csharp\r\npublic void ConfigureServices(IServiceCollection services)\r\n{\r\n\tservices.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_1);\r\n\tservices.AddCors();\r\n}\r\npublic void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n{\r\n\t...\r\n\r\n\r\n\tapp.UseCors(builder => {\r\n\t\tbuilder.WithOrigins(""http://localhost:4200"", ""https://www.domain.tld"")\r\n\t\t\t.WithMethods(""POST"", ""GET"", ""OPTIONS"")\r\n\t\t\t.AllowAnyHeader();\r\n\t});\r\n\r\n\tapp.UseMvc();\r\n}\r\n"
5076,"Generated code references MVC's HelperResult**Description:**\r\n\r\nI want to use Razor as a standalone templating component (outside of ASP.NET Core). This is working really well so far, with one minor problem: when an HTML attribute contains Razor code, the generated code references `Microsoft.AspNetCore.Mvc.Razor.HelperResult` by default. The source of this reference is in the default value of `Microsoft.AspNetCore.Razor.Language.CodeGeneration.RuntimeNodeWriter.TemplateTypeName`.\r\n\r\nI would like to change this to my own template type, but there seems to be no straightforward way to accomplish this (e.g. with the `RazorProjectEngineBuilder`). Right now I have a rather clumsy workaround involving a custom `IRazorEnginePhase` that sets a custom `CodeTarget` on the `DocumentIntermediateNode`, which in turn sets the desired template type in `CreateNodeWriter`.\r\n\r\nI propose to set the default value of `RuntimeNodeWriter.TemplateTypeName` to something neutral like `""Template""` (like in #952, a similar issue with `TemplateTargetExtension`) and allow some mechanism for easy customization.\r\n\r\n**Steps to reproduce:**\r\n\r\n* Create a .NET console app\r\n* Reference Microsoft.AspNetCore.Razor.Language 2.1.1\r\n* Add this code to `Program.cs`\r\n    \r\n* Add `Views/Test.cshtml`, set ""Copy to Output Directory"" to ""Copy if newer""\r\n    \r\n* Run the program. The output reads:\r\n    ```\r\n    #pragma checksum ""C:\\Users\\reima\\Documents\\Visual Studio 2017\\Projects\\RazorStandalone\\bin\\Debug\\Views\\Test.cshtml"" ""{ff1816ec-aa5e-4d10-87f7-6f4963833460}"" ""9734701e05be2ab9082d029532e0b68293680ed2""\r\n    // <auto-generated/>\r\n    #pragma warning disable 1591\r\n    [assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(Razor.Template), @""default"", @""/rs/reima/Documents/Visual Studio 2017/Projects/RazorStandalone/bin/Debug/Views/Test.cshtml"")]\r\n    namespace Razor\r\n    {\r\n        #line hidden\r\n        [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@""SHA1"", @""9734701e05be2ab9082d029532e0b68293680ed2"", @""/rs/reima/Documents/Visual Studio 2017/Projects/RazorStandalone/bin/Debug/Views/Test.cshtml"")]\r\n        public class Template\r\n        {\r\n            #pragma warning disable 1998\r\n            public async override global::System.Threading.Tasks.Task ExecuteAsync()\r\n            {\r\n                WriteLiteral(""<test"");\r\n                BeginWriteAttribute(""attr"", "" attr=\\"""", 5, ""\\"""", 27, 1);\r\n                WriteAttributeValue("""", 12, new Microsoft.AspNetCore.Mvc.Razor.HelperResult(async(__razor_attribute_value_writer) => {\r\n                    PushWriter(__razor_attribute_value_writer);\r\n    #line 1 ""C:\\Users\\reima\\Documents\\Visual Studio 2017\\Projects\\RazorStandalone\\bin\\Debug\\Views\\Test.cshtml""\r\n                 if (@Model) {}\r\n\r\n    #line default\r\n    #line hidden\r\n                    PopWriter();\r\n                }\r\n                ), 12, 15, false);\r\n                EndWriteAttribute();\r\n                WriteLiteral(""></test>"");\r\n            }\r\n            #pragma warning restore 1998\r\n        }\r\n    }\r\n    #pragma warning restore 1591\r\n    ```",Needs: Design|help wanted|enhancement|area-mvc|feature-razor-pages,NTaylorMullen,"**Description:**\r\n\r\nI want to use Razor as a standalone templating component (outside of ASP.NET Core). This is working really well so far, with one minor problem: when an HTML attribute contains Razor code, the generated code references `Microsoft.AspNetCore.Mvc.Razor.HelperResult` by default. The source of this reference is in the default value of `Microsoft.AspNetCore.Razor.Language.CodeGeneration.RuntimeNodeWriter.TemplateTypeName`.\r\n\r\nI would like to change this to my own template type, but there seems to be no straightforward way to accomplish this (e.g. with the `RazorProjectEngineBuilder`). Right now I have a rather clumsy workaround involving a custom `IRazorEnginePhase` that sets a custom `CodeTarget` on the `DocumentIntermediateNode`, which in turn sets the desired template type in `CreateNodeWriter`.\r\n\r\nI propose to set the default value of `RuntimeNodeWriter.TemplateTypeName` to something neutral like `""Template""` (like in #952, a similar issue with `TemplateTargetExtension`) and allow some mechanism for easy customization.\r\n\r\n**Steps to reproduce:**\r\n\r\n* Create a .NET console app\r\n* Reference Microsoft.AspNetCore.Razor.Language 2.1.1\r\n* Add this code to `Program.cs`\r\n    ```csharp\r\n    using System;\r\n    using Microsoft.AspNetCore.Razor.Language;\r\n\r\n    namespace RazorStandalone\r\n    {\r\n        public class Program\r\n        {\r\n            public static void Main(string[] args)\r\n            {\r\n                var razorEngine = RazorProjectEngine.Create(\r\n                    RazorConfiguration.Default,\r\n                    RazorProjectFileSystem.Create(""Views""));\r\n\r\n                var item = razorEngine.FileSystem.GetItem(""Test.cshtml"");\r\n                var cSharpDocument = razorEngine.Process(item).GetCSharpDocument();\r\n\r\n                Console.WriteLine(cSharpDocument.GeneratedCode);\r\n            }\r\n        }\r\n    }\r\n    ```\r\n* Add `Views/Test.cshtml`, set ""Copy to Output Directory"" to ""Copy if newer""\r\n    ```html\r\n    <test attr=""@if (@Model) {}""></test>\r\n    ```\r\n* Run the program. The output reads:\r\n    ```\r\n    #pragma checksum ""C:\\Users\\reima\\Documents\\Visual Studio 2017\\Projects\\RazorStandalone\\bin\\Debug\\Views\\Test.cshtml"" ""{ff1816ec-aa5e-4d10-87f7-6f4963833460}"" ""9734701e05be2ab9082d029532e0b68293680ed2""\r\n    // <auto-generated/>\r\n    #pragma warning disable 1591\r\n    [assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(Razor.Template), @""default"", @""/rs/reima/Documents/Visual Studio 2017/Projects/RazorStandalone/bin/Debug/Views/Test.cshtml"")]\r\n    namespace Razor\r\n    {\r\n        #line hidden\r\n        [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@""SHA1"", @""9734701e05be2ab9082d029532e0b68293680ed2"", @""/rs/reima/Documents/Visual Studio 2017/Projects/RazorStandalone/bin/Debug/Views/Test.cshtml"")]\r\n        public class Template\r\n        {\r\n            #pragma warning disable 1998\r\n            public async override global::System.Threading.Tasks.Task ExecuteAsync()\r\n            {\r\n                WriteLiteral(""<test"");\r\n                BeginWriteAttribute(""attr"", "" attr=\\"""", 5, ""\\"""", 27, 1);\r\n                WriteAttributeValue("""", 12, new Microsoft.AspNetCore.Mvc.Razor.HelperResult(async(__razor_attribute_value_writer) => {\r\n                    PushWriter(__razor_attribute_value_writer);\r\n    #line 1 ""C:\\Users\\reima\\Documents\\Visual Studio 2017\\Projects\\RazorStandalone\\bin\\Debug\\Views\\Test.cshtml""\r\n                 if (@Model) {}\r\n\r\n    #line default\r\n    #line hidden\r\n                    PopWriter();\r\n                }\r\n                ), 12, 15, false);\r\n                EndWriteAttribute();\r\n                WriteLiteral(""></test>"");\r\n            }\r\n            #pragma warning restore 1998\r\n        }\r\n    }\r\n    #pragma warning restore 1591\r\n    ```","csharp\r\n    using System;\r\n    using Microsoft.AspNetCore.Razor.Language;\r\n\r\n    namespace RazorStandalone\r\n    {\r\n        public class Program\r\n        {\r\n            public static void Main(string[] args)\r\n            {\r\n                var razorEngine = RazorProjectEngine.Create(\r\n                    RazorConfiguration.Default,\r\n                    RazorProjectFileSystem.Create(""Views""));\r\n\r\n                var item = razorEngine.FileSystem.GetItem(""Test.cshtml"");\r\n                var cSharpDocument = razorEngine.Process(item).GetCSharpDocument();\r\n\r\n                Console.WriteLine(cSharpDocument.GeneratedCode);\r\n            }\r\n        }\r\n    }\r\n    "
5075,"ASP.NET Core tag helpers don't allow me to escape attributes annotated with @Hello guys.\r\n\r\nWhile migrating an existing app, I've noticed that the new tag helpers won't let me escape attributes annotated with  @. In my case, I have an existing MVC 5 app that I'm migrating to the ASP.NET Core. The existing code looked like this:\r\n\r\n\r\n\r\nThe server side is trying to use the shortcut notation for Vue's v-on: and the generated HTML looked like this:\r\n\r\n\r\n\r\nWhen this view got migrated to ASP.NET Core, the code was changed to look like this:\r\n\r\n\r\n\r\nHowever, now the @\xabsubmit attribute isn't outputted (it's simply discarded from the generated HTML).\r\n\r\nIs this a bug? If that is not the case, how can I output attributes annotated with @?\r\n\r\n @Thanks.\r\n\r\nLuis\r\n\r\n",bug|area-mvc|feature-razor-pages,NTaylorMullen,"Hello guys.\r\n\r\nWhile migrating an existing app, I've noticed that the new tag helpers won't let me escape attributes annotated with  @. In my case, I have an existing MVC 5 app that I'm migrating to the ASP.NET Core. The existing code looked like this:\r\n\r\n```html\r\n<form action=""@Url.Action(...)"" @@submit=""save()"">\r\n```\r\n\r\nThe server side is trying to use the shortcut notation for Vue's v-on: and the generated HTML looked like this:\r\n\r\n```html\r\n<form action=""/..."" @submit=""save()"">\r\n```\r\n\r\nWhen this view got migrated to ASP.NET Core, the code was changed to look like this:\r\n\r\n```html\r\n<form asp-action=""..."" asp-controller=""..."" @@submit=""save()"">\r\n```\r\n\r\nHowever, now the @\xabsubmit attribute isn't outputted (it's simply discarded from the generated HTML).\r\n\r\nIs this a bug? If that is not the case, how can I output attributes annotated with @?\r\n\r\n @Thanks.\r\n\r\nLuis\r\n\r\n","html\r\n<form action=""@Url.Action(...)"" @@submit=""save()"">\r\n"
15929,"Crash on Attempted Set of <input /> Element ""bind"" Attribute# Attempting to set Blazor ""bind"" Attribute on <input /> Element Hangs and Crashes Visual Studio\r\n\r\n[![a brief video showcasing this bug](https://img.youtube.com/vi/L1egU_YDlH4/0.jpg)](https://youtu.be/L1egU_YDlH4) \r\n<strong>a brief video showcasing this bug</strong>\r\n\r\n## Explanation\r\nEssentially, in this specific case, in an `<input />` element, typing `bind=@` in at the end of the tag will cause Visual Studio 2017 to crash. I have the latest version of both it and the Blazor language services extension, at 15.7.3 and 0.5.0-preview1-10320 respectively. \r\n\r\n## Behaviour Reproduction\r\nThe following is the source code needed to reproduce the bug.\r\n\r\n### TestPage.cshtml\r\n\r\n\r\n### TodoManager.cs\r\n\r\n\r\nPlease ignore any implementation oddities, as project was just made to mess around with Blazor.\r\n\r\n## Metadata\r\n### Event Viewer Logs\r\nThe following is what Event Viewer had to say about the issue.\r\n\r\n#### .NET Runtime\r\n```\r\nApplication: devenv.exe\r\nFramework Version: v4.0.30319\r\nDescription: The process was terminated due to an unhandled exception.\r\nException Info: System.InvalidOperationException\r\n   at System.Linq.Enumerable.Single[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](System.Collections.Generic.IEnumerable`1<System.__Canon>)\r\n   at Microsoft.AspNetCore.Blazor.Razor.BindLoweringPass.GetAttributeContent(Microsoft.AspNetCore.Razor.Language.Intermediate.TagHelperPropertyIntermediateNode)\r\n   at Microsoft.AspNetCore.Blazor.Razor.BindLoweringPass.RewriteUsage(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode, Microsoft.AspNetCore.Razor.Language.Intermediate.TagHelperPropertyIntermediateNode)\r\n   at Microsoft.AspNetCore.Blazor.Razor.BindLoweringPass.ExecuteCore(Microsoft.AspNetCore.Razor.Language.RazorCodeDocument, Microsoft.AspNetCore.Razor.Language.Intermediate.DocumentIntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.IntermediateNodePassBase.Execute(Microsoft.AspNetCore.Razor.Language.RazorCodeDocument, Microsoft.AspNetCore.Razor.Language.Intermediate.DocumentIntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorOptimizationPhase.ExecuteCore(Microsoft.AspNetCore.Razor.Language.RazorCodeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.RazorEnginePhaseBase.Execute(Microsoft.AspNetCore.Razor.Language.RazorCodeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorEngine.Process(Microsoft.AspNetCore.Razor.Language.RazorCodeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorProjectEngine.ProcessCore(Microsoft.AspNetCore.Razor.Language.RazorCodeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.RazorProjectEngine.ProcessDesignTime(Microsoft.AspNetCore.Razor.Language.RazorProjectItem)\r\n   at Microsoft.VisualStudio.Editor.Razor.BackgroundParser+BackgroundThread.WorkerLoop()\r\n   at System.Threading.ThreadHelper.ThreadStart_Context(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Threading.ThreadHelper.ThreadStart()\r\n```\r\n\r\n#### Application Error\r\n```\r\nFaulting application name: devenv.exe, version: 15.7.27703.2026, time stamp: 0x5b0f5e36\r\nFaulting module name: KERNELBASE.dll, version: 10.0.17134.1, time stamp: 0x149ab0fd\r\nException code: 0xe0434352\r\nFault offset: 0x0010d722\r\nFaulting process id: 0x6e54\r\nFaulting application start time: 0x01d3fecf3951769e\r\nFaulting application path: C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\Common7\\IDE\\devenv.exe\r\nFaulting module path: C:\\WINDOWS\\System32\\KERNELBASE.dll\r\nReport Id: 0f1bbcfb-83a4-4b0c-acf2-7dc587d6ff06\r\nFaulting package full name: \r\nFaulting package-relative application ID: \r\n```\r\n\r\n### Installed Extensions List\r\nThe following is a list of all the extensions I have installed in my configuration of Visual Studio, in case it applies, but I suspect it will not.\r\n\r\n```json\r\n{\r\n  ""id"": ""3866550c-4a12-48e9-8f27-414aab12731f"",\r\n  ""name"": ""My Visual Studio extensions"",\r\n  ""description"": ""A collection of my Visual Studio extensions"",\r\n  ""version"": ""1.0"",\r\n  ""extensions"": [\r\n    {\r\n      ""name"": ""Azure Functions and Web Jobs Tools"",\r\n      ""vsixId"": ""Microsoft.VisualStudio.Web.AzureFunctions""\r\n    },\r\n    {\r\n      ""name"": ""Razor Language Services"",\r\n      ""vsixId"": ""Microsoft.VisualStudio.RazorExtension""\r\n    },\r\n    {\r\n      ""name"": ""Visual Studio IntelliCode - Preview"",\r\n      ""vsixId"": ""IntelliCode.VSIX.598224b2-b987-401b-8509-f568d0c0b946""\r\n    },\r\n    {\r\n      ""name"": ""NP.XAMLIntellisenseExtensionForVS2017"",\r\n      ""vsixId"": ""NP.XAMLIntellisenseExtensionForVS2017.9c3d92c1-cbae-4738-a2f2-1e48eab3f15a""\r\n    },\r\n    {\r\n      ""name"": ""Command Explorer"",\r\n      ""vsixId"": ""1a973c52-a674-48d8-a276-65ddab1ac598""\r\n    },\r\n    {\r\n      ""name"": ""KnownMonikers Explorer"",\r\n      ""vsixId"": ""c38f3512-4653-4d97-a4c5-860a425209f5""\r\n    },\r\n    {\r\n      ""name"": ""VS Live Share - Preview"",\r\n      ""vsixId"": ""Microsoft.VisualStudio.LiveShare""\r\n    },\r\n    {\r\n      ""name"": ""Extensibility Tools"",\r\n      ""vsixId"": ""f8330d54-0469-43a7-8fc0-7f19febeb897""\r\n    },\r\n    {\r\n      ""name"": ""Code Cracker for C#"",\r\n      ""vsixId"": ""CodeCracker.Vsix..5b99e64c-1418-4a06-990c-fd4cf01f4f63""\r\n    },\r\n    {\r\n      ""name"": ""StatusInfo"",\r\n      ""vsixId"": ""72581eb6-4dcd-4b8f-9add-c4257d4fb9d7""\r\n    },\r\n    {\r\n      ""name"": ""Stack Overflow Quick Launch Search Provider"",\r\n      ""vsixId"": ""63E411F1-E531-44E8-8689-16B34600CF25""\r\n    },\r\n    {\r\n      ""name"": ""File Differ"",\r\n      ""vsixId"": ""ea5c68d6-cdae-4e79-bd46-2a39e95bb256""\r\n    },\r\n    {\r\n      ""name"": "".ignore"",\r\n      ""vsixId"": ""7ac24965-ea21-4108-9cac-6e46394aaaef""\r\n    },\r\n    {\r\n      ""name"": ""Add New File"",\r\n      ""vsixId"": ""2E78AA18-E864-4FBB-B8C8-6186FC865DB3""\r\n    },\r\n    {\r\n      ""name"": ""Unit Test Boilerplate Generator"",\r\n      ""vsixId"": ""UnitTestBoilerplate.RandomEngy.ca0bb824-eb5a-41a8-ab39-3b81f03ba3fe""\r\n    },\r\n    {\r\n      ""name"": "".NET Portability Analyzer"",\r\n      ""vsixId"": ""55d15546-28ca-40dc-af23-dfa503e9c5fe""\r\n    },\r\n    {\r\n      ""name"": ""Markdown Editor"",\r\n      ""vsixId"": ""9ca64947-e9ca-4543-bfb8-6cce9be19fd6""\r\n    },\r\n    {\r\n      ""name"": ""File Nesting"",\r\n      ""vsixId"": ""6c799bc4-0d4c-4172-98bc-5d464b612dca""\r\n    },\r\n    {\r\n      ""name"": ""Select Next Occurrence"",\r\n      ""vsixId"": ""NextOccurrence.b213c4e9-b96f-4f9d-b1d6-fa8bc7e9da21""\r\n    },\r\n    {\r\n      ""name"": ""File Icons"",\r\n      ""vsixId"": ""3a7b4930-a5fb-46ec-a9b8-9610c8f953b8""\r\n    },\r\n    {\r\n      ""name"": ""Refactoring Essentials for Visual Studio 2017"",\r\n      ""vsixId"": ""RefactoringEssentials.Vsix.cd27e59b-5c56-4238-8931-c9bb745a7a7f""\r\n    },\r\n    {\r\n      ""name"": ""Experimental Tools 2017"",\r\n      ""vsixId"": ""fe00c281-eed0-4c6e-901b-d8b845c82e35""\r\n    },\r\n    {\r\n      ""name"": ""Open in Visual Studio Code"",\r\n      ""vsixId"": ""e99dde0e-e023-410d-bc5d-3f76db71e3f0""\r\n    },\r\n    {\r\n      ""name"": ""Stack Trace Explorer"",\r\n      ""vsixId"": ""Terrajobst.StackTraceExplorer.4995ed73-eaa4-4c4c-98fc-1e90df4aea6f""\r\n    },\r\n    {\r\n      ""name"": ""UnBlockDllExtension"",\r\n      ""vsixId"": ""aee1ca98-a39a-4986-ba81-a36603ff6e02""\r\n    },\r\n    {\r\n      ""name"": ""BuildVision"",\r\n      ""vsixId"": ""837c3c3b-8382-4839-9c9a-807b758a929f""\r\n    },\r\n    {\r\n      ""name"": ""Surround Selection"",\r\n      ""vsixId"": ""4c807d55-9263-4ce0-9c1a-bfef58e96b02""\r\n    },\r\n    {\r\n      ""name"": ""Automatic Versions 1"",\r\n      ""vsixId"": ""7f3f0c54-770a-4980-b3a0-5d9c4db90169""\r\n    },\r\n    {\r\n      ""name"": ""CodeMaid"",\r\n      ""vsixId"": ""4c82e17d-927e-42d2-8460-b473ac7df316""\r\n    },\r\n    {\r\n      ""name"": ""ASP.NET Core Blazor Language Services"",\r\n      ""vsixId"": ""Microsoft.VisualStudio.BlazorExtension""\r\n    },\r\n    {\r\n      ""name"": ""GitHub Extension for Visual Studio"",\r\n      ""vsixId"": ""c3d3dc68-c977-411f-b3e8-03b0dccf7dfc""\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n\r\nI do have some more data I could upload, but posting download links is shady, so I am avoiding it.\r\n\r\nThanks.",area-blazor,rynowak,"# Attempting to set Blazor ""bind"" Attribute on <input /> Element Hangs and Crashes Visual Studio\r\n\r\n[![a brief video showcasing this bug](https://img.youtube.com/vi/L1egU_YDlH4/0.jpg)](https://youtu.be/L1egU_YDlH4) \r\n<strong>a brief video showcasing this bug</strong>\r\n\r\n## Explanation\r\nEssentially, in this specific case, in an `<input />` element, typing `bind=@` in at the end of the tag will cause Visual Studio 2017 to crash. I have the latest version of both it and the Blazor language services extension, at 15.7.3 and 0.5.0-preview1-10320 respectively. \r\n\r\n## Behaviour Reproduction\r\nThe following is the source code needed to reproduce the bug.\r\n\r\n### TestPage.cshtml\r\n```cshtml\r\n@page  ""/testpage""\r\n\r\n<h1>Welcome to the Test Page!</h1>\r\n\r\n<h2>Sample 1: LocalBrowserTodo</h2>\r\n\r\n@if (TodoManager.Instance.Entries.Count > 0)\r\n{\r\n    <table style=""width:100%"">\r\n        <thead>\r\n\r\n            <tr>\r\n\r\n                <th>Title</th>\r\n                <th>Content</th>\r\n                <th></th>\r\n                <th></th>\r\n\r\n            </tr>\r\n\r\n        </thead>\r\n\r\n        @foreach (TodoManager.TodoEntry entry in TodoManager.Instance.Entries)\r\n        {\r\n            <tr>\r\n\r\n                @if (!entry.IsEditing)\r\n                {\r\n                    <th>@entry.Title</th>\r\n                    <th>@entry.Content</th>\r\n\r\n                }\r\n                else\r\n                {\r\n                    <th><input value=@entry.Title/></th>\r\n                    <th><input value=@entry.Content/></th>\r\n\r\n                }\r\n                <th><button type=""button"" onclick=@(() => entry.IsEditing = !entry.IsEditing)>@(entry.IsEditing ? ""Stop"" : """") Edit</button></th>\r\n                <th><button type=""button"" onclick=@entry.Delete>Delete</button></th>\r\n\r\n            </tr>\r\n        }\r\n    </table>\r\n\r\n}\r\nelse\r\n{\r\n    <strong>Nothing to do!</strong>\r\n}\r\n\r\n<button type=""button"" onclick=@AddRandomTodo>Add @(TodoManager.Instance.Entries.Count > 0 ? ""another"" : ""a"") random one!</button>\r\n<h4>Note that for now, the titles of the todo entries are just random double-precision values and the contents are just random integers.</h4>\r\n\r\n@functions\r\n{\r\nstatic Random Random { get; } = new Random { };\r\n\r\nvoid AddRandomTodo() => TodoManager.Instance.Entries.Add(new TodoManager.TodoEntry { Title = Random.NextDouble().ToString(), Content = Random.Next() });\r\n\r\n}\r\n```\r\n\r\n### TodoManager.cs\r\n```csharp\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace BlazorTestApp.Client\r\n{\r\n    class TodoManager\r\n    {\r\n        internal class TodoEntry\r\n        {\r\n            static int InstanceCount { get; set; } = 0;\r\n\r\n            internal int ID { get; } = InstanceCount++;\r\n\r\n            internal string Title { get; set; } = String.Empty;\r\n\r\n            internal object Content { get; set; } = String.Empty;\r\n\r\n            internal bool Completed { get; set; } = false;\r\n\r\n            internal bool IsEditing { get; set; } = false;\r\n\r\n            internal void Delete() => Instance.Entries.Remove(this);\r\n        }\r\n\r\n        internal List<TodoEntry> Entries { get; } = new List<TodoEntry> { };\r\n\r\n        internal TodoEntry this[int id] => Entries.Find(entry => entry.ID == id);\r\n\r\n        internal void Reset() => Entries.Clear();\r\n\r\n        internal static TodoManager Instance { get; } = new TodoManager { };\r\n    }\r\n}\r\n```\r\n\r\nPlease ignore any implementation oddities, as project was just made to mess around with Blazor.\r\n\r\n## Metadata\r\n### Event Viewer Logs\r\nThe following is what Event Viewer had to say about the issue.\r\n\r\n#### .NET Runtime\r\n```\r\nApplication: devenv.exe\r\nFramework Version: v4.0.30319\r\nDescription: The process was terminated due to an unhandled exception.\r\nException Info: System.InvalidOperationException\r\n   at System.Linq.Enumerable.Single[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](System.Collections.Generic.IEnumerable`1<System.__Canon>)\r\n   at Microsoft.AspNetCore.Blazor.Razor.BindLoweringPass.GetAttributeContent(Microsoft.AspNetCore.Razor.Language.Intermediate.TagHelperPropertyIntermediateNode)\r\n   at Microsoft.AspNetCore.Blazor.Razor.BindLoweringPass.RewriteUsage(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode, Microsoft.AspNetCore.Razor.Language.Intermediate.TagHelperPropertyIntermediateNode)\r\n   at Microsoft.AspNetCore.Blazor.Razor.BindLoweringPass.ExecuteCore(Microsoft.AspNetCore.Razor.Language.RazorCodeDocument, Microsoft.AspNetCore.Razor.Language.Intermediate.DocumentIntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.IntermediateNodePassBase.Execute(Microsoft.AspNetCore.Razor.Language.RazorCodeDocument, Microsoft.AspNetCore.Razor.Language.Intermediate.DocumentIntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorOptimizationPhase.ExecuteCore(Microsoft.AspNetCore.Razor.Language.RazorCodeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.RazorEnginePhaseBase.Execute(Microsoft.AspNetCore.Razor.Language.RazorCodeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorEngine.Process(Microsoft.AspNetCore.Razor.Language.RazorCodeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorProjectEngine.ProcessCore(Microsoft.AspNetCore.Razor.Language.RazorCodeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.RazorProjectEngine.ProcessDesignTime(Microsoft.AspNetCore.Razor.Language.RazorProjectItem)\r\n   at Microsoft.VisualStudio.Editor.Razor.BackgroundParser+BackgroundThread.WorkerLoop()\r\n   at System.Threading.ThreadHelper.ThreadStart_Context(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Threading.ThreadHelper.ThreadStart()\r\n```\r\n\r\n#### Application Error\r\n```\r\nFaulting application name: devenv.exe, version: 15.7.27703.2026, time stamp: 0x5b0f5e36\r\nFaulting module name: KERNELBASE.dll, version: 10.0.17134.1, time stamp: 0x149ab0fd\r\nException code: 0xe0434352\r\nFault offset: 0x0010d722\r\nFaulting process id: 0x6e54\r\nFaulting application start time: 0x01d3fecf3951769e\r\nFaulting application path: C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\Common7\\IDE\\devenv.exe\r\nFaulting module path: C:\\WINDOWS\\System32\\KERNELBASE.dll\r\nReport Id: 0f1bbcfb-83a4-4b0c-acf2-7dc587d6ff06\r\nFaulting package full name: \r\nFaulting package-relative application ID: \r\n```\r\n\r\n### Installed Extensions List\r\nThe following is a list of all the extensions I have installed in my configuration of Visual Studio, in case it applies, but I suspect it will not.\r\n\r\n```json\r\n{\r\n  ""id"": ""3866550c-4a12-48e9-8f27-414aab12731f"",\r\n  ""name"": ""My Visual Studio extensions"",\r\n  ""description"": ""A collection of my Visual Studio extensions"",\r\n  ""version"": ""1.0"",\r\n  ""extensions"": [\r\n    {\r\n      ""name"": ""Azure Functions and Web Jobs Tools"",\r\n      ""vsixId"": ""Microsoft.VisualStudio.Web.AzureFunctions""\r\n    },\r\n    {\r\n      ""name"": ""Razor Language Services"",\r\n      ""vsixId"": ""Microsoft.VisualStudio.RazorExtension""\r\n    },\r\n    {\r\n      ""name"": ""Visual Studio IntelliCode - Preview"",\r\n      ""vsixId"": ""IntelliCode.VSIX.598224b2-b987-401b-8509-f568d0c0b946""\r\n    },\r\n    {\r\n      ""name"": ""NP.XAMLIntellisenseExtensionForVS2017"",\r\n      ""vsixId"": ""NP.XAMLIntellisenseExtensionForVS2017.9c3d92c1-cbae-4738-a2f2-1e48eab3f15a""\r\n    },\r\n    {\r\n      ""name"": ""Command Explorer"",\r\n      ""vsixId"": ""1a973c52-a674-48d8-a276-65ddab1ac598""\r\n    },\r\n    {\r\n      ""name"": ""KnownMonikers Explorer"",\r\n      ""vsixId"": ""c38f3512-4653-4d97-a4c5-860a425209f5""\r\n    },\r\n    {\r\n      ""name"": ""VS Live Share - Preview"",\r\n      ""vsixId"": ""Microsoft.VisualStudio.LiveShare""\r\n    },\r\n    {\r\n      ""name"": ""Extensibility Tools"",\r\n      ""vsixId"": ""f8330d54-0469-43a7-8fc0-7f19febeb897""\r\n    },\r\n    {\r\n      ""name"": ""Code Cracker for C#"",\r\n      ""vsixId"": ""CodeCracker.Vsix..5b99e64c-1418-4a06-990c-fd4cf01f4f63""\r\n    },\r\n    {\r\n      ""name"": ""StatusInfo"",\r\n      ""vsixId"": ""72581eb6-4dcd-4b8f-9add-c4257d4fb9d7""\r\n    },\r\n    {\r\n      ""name"": ""Stack Overflow Quick Launch Search Provider"",\r\n      ""vsixId"": ""63E411F1-E531-44E8-8689-16B34600CF25""\r\n    },\r\n    {\r\n      ""name"": ""File Differ"",\r\n      ""vsixId"": ""ea5c68d6-cdae-4e79-bd46-2a39e95bb256""\r\n    },\r\n    {\r\n      ""name"": "".ignore"",\r\n      ""vsixId"": ""7ac24965-ea21-4108-9cac-6e46394aaaef""\r\n    },\r\n    {\r\n      ""name"": ""Add New File"",\r\n      ""vsixId"": ""2E78AA18-E864-4FBB-B8C8-6186FC865DB3""\r\n    },\r\n    {\r\n      ""name"": ""Unit Test Boilerplate Generator"",\r\n      ""vsixId"": ""UnitTestBoilerplate.RandomEngy.ca0bb824-eb5a-41a8-ab39-3b81f03ba3fe""\r\n    },\r\n    {\r\n      ""name"": "".NET Portability Analyzer"",\r\n      ""vsixId"": ""55d15546-28ca-40dc-af23-dfa503e9c5fe""\r\n    },\r\n    {\r\n      ""name"": ""Markdown Editor"",\r\n      ""vsixId"": ""9ca64947-e9ca-4543-bfb8-6cce9be19fd6""\r\n    },\r\n    {\r\n      ""name"": ""File Nesting"",\r\n      ""vsixId"": ""6c799bc4-0d4c-4172-98bc-5d464b612dca""\r\n    },\r\n    {\r\n      ""name"": ""Select Next Occurrence"",\r\n      ""vsixId"": ""NextOccurrence.b213c4e9-b96f-4f9d-b1d6-fa8bc7e9da21""\r\n    },\r\n    {\r\n      ""name"": ""File Icons"",\r\n      ""vsixId"": ""3a7b4930-a5fb-46ec-a9b8-9610c8f953b8""\r\n    },\r\n    {\r\n      ""name"": ""Refactoring Essentials for Visual Studio 2017"",\r\n      ""vsixId"": ""RefactoringEssentials.Vsix.cd27e59b-5c56-4238-8931-c9bb745a7a7f""\r\n    },\r\n    {\r\n      ""name"": ""Experimental Tools 2017"",\r\n      ""vsixId"": ""fe00c281-eed0-4c6e-901b-d8b845c82e35""\r\n    },\r\n    {\r\n      ""name"": ""Open in Visual Studio Code"",\r\n      ""vsixId"": ""e99dde0e-e023-410d-bc5d-3f76db71e3f0""\r\n    },\r\n    {\r\n      ""name"": ""Stack Trace Explorer"",\r\n      ""vsixId"": ""Terrajobst.StackTraceExplorer.4995ed73-eaa4-4c4c-98fc-1e90df4aea6f""\r\n    },\r\n    {\r\n      ""name"": ""UnBlockDllExtension"",\r\n      ""vsixId"": ""aee1ca98-a39a-4986-ba81-a36603ff6e02""\r\n    },\r\n    {\r\n      ""name"": ""BuildVision"",\r\n      ""vsixId"": ""837c3c3b-8382-4839-9c9a-807b758a929f""\r\n    },\r\n    {\r\n      ""name"": ""Surround Selection"",\r\n      ""vsixId"": ""4c807d55-9263-4ce0-9c1a-bfef58e96b02""\r\n    },\r\n    {\r\n      ""name"": ""Automatic Versions 1"",\r\n      ""vsixId"": ""7f3f0c54-770a-4980-b3a0-5d9c4db90169""\r\n    },\r\n    {\r\n      ""name"": ""CodeMaid"",\r\n      ""vsixId"": ""4c82e17d-927e-42d2-8460-b473ac7df316""\r\n    },\r\n    {\r\n      ""name"": ""ASP.NET Core Blazor Language Services"",\r\n      ""vsixId"": ""Microsoft.VisualStudio.BlazorExtension""\r\n    },\r\n    {\r\n      ""name"": ""GitHub Extension for Visual Studio"",\r\n      ""vsixId"": ""c3d3dc68-c977-411f-b3e8-03b0dccf7dfc""\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n\r\nI do have some more data I could upload, but posting download links is shady, so I am avoiding it.\r\n\r\nThanks.","cshtml\r\n@page  ""/testpage""\r\n\r\n<h1>Welcome to the Test Page!</h1>\r\n\r\n<h2>Sample 1: LocalBrowserTodo</h2>\r\n\r\n@if (TodoManager.Instance.Entries.Count > 0)\r\n{\r\n    <table style=""width:100%"">\r\n        <thead>\r\n\r\n            <tr>\r\n\r\n                <th>Title</th>\r\n                <th>Content</th>\r\n                <th></th>\r\n                <th></th>\r\n\r\n            </tr>\r\n\r\n        </thead>\r\n\r\n        @foreach (TodoManager.TodoEntry entry in TodoManager.Instance.Entries)\r\n        {\r\n            <tr>\r\n\r\n                @if (!entry.IsEditing)\r\n                {\r\n                    <th>@entry.Title</th>\r\n                    <th>@entry.Content</th>\r\n\r\n                }\r\n                else\r\n                {\r\n                    <th><input value=@entry.Title/></th>\r\n                    <th><input value=@entry.Content/></th>\r\n\r\n                }\r\n                <th><button type=""button"" onclick=@(() => entry.IsEditing = !entry.IsEditing)>@(entry.IsEditing ? ""Stop"" : """") Edit</button></th>\r\n                <th><button type=""button"" onclick=@entry.Delete>Delete</button></th>\r\n\r\n            </tr>\r\n        }\r\n    </table>\r\n\r\n}\r\nelse\r\n{\r\n    <strong>Nothing to do!</strong>\r\n}\r\n\r\n<button type=""button"" onclick=@AddRandomTodo>Add @(TodoManager.Instance.Entries.Count > 0 ? ""another"" : ""a"") random one!</button>\r\n<h4>Note that for now, the titles of the todo entries are just random double-precision values and the contents are just random integers.</h4>\r\n\r\n@functions\r\n{\r\nstatic Random Random { get; } = new Random { };\r\n\r\nvoid AddRandomTodo() => TodoManager.Instance.Entries.Add(new TodoManager.TodoEntry { Title = Random.NextDouble().ToString(), Content = Random.Next() });\r\n\r\n}\r\n"
15932,"Starting in 0.4, button with C#-implemented onclick event handler will submit formFor debug purposes, I have a `<button>` that triggers C# code to log some info, like so:\r\n\r\n\r\n\r\n`Test()` is a method that simply iterates my current model state (where `ConfiguratorInput` is a class for binding purposes):\r\n\r\n\r\n\r\nAs `Console.WriteLine()` outputs to the browser, this lets me inspect the state right inside the browser's Web Inspector.\r\n\r\nLikely due to the change in aspnet/Blazor#937 where Blazor will no longer call `preventDefault()`, this now causes the browser to redirect to a different location, probably attempting to ""submit the form"".\r\n\r\nThis new default behavior makes sense, but an opt-in way to prevent it would be desirable, such as through setting a new property `e.Handled` to `true`.",area-blazor,SteveSandersonMS,"For debug purposes, I have a `<button>` that triggers C# code to log some info, like so:\r\n\r\n```html\r\n    <form>\r\n\r\n    [.. plenty of other stuff ..]\r\n\r\n        <button onclick=""@Test"">Test</button>\r\n    </form>\r\n```\r\n\r\n`Test()` is a method that simply iterates my current model state (where `ConfiguratorInput` is a class for binding purposes):\r\n\r\n```csharp\r\n    void Test()\r\n    {\r\n        foreach (var item in typeof(ConfiguratorInput).GetProperties())\r\n        {\r\n            Console.WriteLine($""{item.Name}: {item.GetValue(Input)}"");\r\n        }\r\n    }\r\n```\r\n\r\nAs `Console.WriteLine()` outputs to the browser, this lets me inspect the state right inside the browser's Web Inspector.\r\n\r\nLikely due to the change in aspnet/Blazor#937 where Blazor will no longer call `preventDefault()`, this now causes the browser to redirect to a different location, probably attempting to ""submit the form"".\r\n\r\nThis new default behavior makes sense, but an opt-in way to prevent it would be desirable, such as through setting a new property `e.Handled` to `true`.","html\r\n    <form>\r\n\r\n    [.. plenty of other stuff ..]\r\n\r\n        <button onclick=""@Test"">Test</button>\r\n    </form>\r\n"
5924,"Make web specific IHostingEnvironment and IApplicationLifetime inherit from generic host versionsWe made the concrete implementations work this way so that you could write types that took in IHostingEnvironment and IApplicationLifetime but we didn't do it for the interfaces themselves. If you have methods that take the generic IHostingEnvironment and IApplicationLifetime, then you can't just pass the implementation you got from the web host into these methods e.g.\r\n\r\nLibrary\r\n\r\n\r\n\r\nASP.NET Core app\r\n\r\n\r\n\r\nSee https://github.com/aspnet/Hosting/issues/1218#issuecomment-394956520 for more info.",area-hosting|area-networking,Tratcher,"We made the concrete implementations work this way so that you could write types that took in IHostingEnvironment and IApplicationLifetime but we didn't do it for the interfaces themselves. If you have methods that take the generic IHostingEnvironment and IApplicationLifetime, then you can't just pass the implementation you got from the web host into these methods e.g.\r\n\r\nLibrary\r\n\r\n```C#\r\npublic static class CustomEnvironmentExtensions\r\n{\r\n    public static bool IsCustomDevelopment(this Extensions.Hosting.IHostingEnvironment env) { ... }\r\n}\r\n```\r\n\r\nASP.NET Core app\r\n\r\n```C#\r\npublic void Configure(IHostingEnvironment env)\r\n{\r\n    // This is a compile error\r\n    if (env.IsCustomDevelopment())\r\n    {\r\n        \r\n    }\r\n}\r\n```\r\n\r\nSee https://github.com/aspnet/Hosting/issues/1218#issuecomment-394956520 for more info.",C#\r\npublic static class CustomEnvironmentExtensions\r\n{\r\n    public static bool IsCustomDevelopment(this Extensions.Hosting.IHostingEnvironment env) { ... }\r\n}\r\n
3165,"Default values for nullable enums are not calculated correctly_From @JanEggers on April 20, 2018 6:54_\n\nConsider the following code:\r\n\r\n\r\n\r\nWhen the parameter `day` does not get model bound either because no value was specified or if the value on the wire cannot be bound to the enum, executing the action results in an `InvalidCastException`. The issue stems from `ParameterInfo.DefaultValue` returning the numeric value of the default value (i,e, `DayOfWeek.Friday`). We should address this in [`ParameterDefaultValue`](https://github.com/aspnet/DependencyInjection/blob/dev/shared/Microsoft.Extensions.ParameterDefaultValue.Sources/ParameterDefaultValue.cs#L9) to special case default values for nullable enums. Perhaps other nullable types are similarly affected by the behavior of `ParameterInfo.DefaultValue`.\r\n\r\n-----------------------------------------\r\n### Original issue\r\n\r\nim getting the following exception in production:\r\n\r\nSystem.InvalidCastException: Specified cast is not valid.\r\nat lambda_method(Closure , Object , Object[] )\r\n   at Microsoft.Extensions.Internal.ObjectMethodExecutor.Execute(Object target, Object[] parameters)\r\n at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.SyncActionResultExecutor.Execute(ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeActionMethodAsync>d__12.MoveNext()\r\n\r\n\r\n\r\nis there any way to figure out what cast is not valid/ what method should have be called/ what is the request that is processed? A little more context would be nice! \r\n\r\n\r\n\r\n\n\n_Copied from original issue: aspnet/Mvc#7692_",bug|Done,pakrym,"_From @JanEggers on April 20, 2018 6:54_\n\nConsider the following code:\r\n\r\n```C#\r\npublic IActionResult Action(DayOfWeek? day = DayOfWeek.Friday) => null;\r\n```\r\n\r\nWhen the parameter `day` does not get model bound either because no value was specified or if the value on the wire cannot be bound to the enum, executing the action results in an `InvalidCastException`. The issue stems from `ParameterInfo.DefaultValue` returning the numeric value of the default value (i,e, `DayOfWeek.Friday`). We should address this in [`ParameterDefaultValue`](https://github.com/aspnet/DependencyInjection/blob/dev/shared/Microsoft.Extensions.ParameterDefaultValue.Sources/ParameterDefaultValue.cs#L9) to special case default values for nullable enums. Perhaps other nullable types are similarly affected by the behavior of `ParameterInfo.DefaultValue`.\r\n\r\n-----------------------------------------\r\n### Original issue\r\n\r\nim getting the following exception in production:\r\n\r\nSystem.InvalidCastException: Specified cast is not valid.\r\nat lambda_method(Closure , Object , Object[] )\r\n   at Microsoft.Extensions.Internal.ObjectMethodExecutor.Execute(Object target, Object[] parameters)\r\n at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.SyncActionResultExecutor.Execute(ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeActionMethodAsync>d__12.MoveNext()\r\n\r\n\r\n\r\nis there any way to figure out what cast is not valid/ what method should have be called/ what is the request that is processed? A little more context would be nice! \r\n\r\n\r\n\r\n\n\n_Copied from original issue: aspnet/Mvc#7692_",C#\r\npublic IActionResult Action(DayOfWeek? day = DayOfWeek.Friday) => null;\r\n
4890,"IUrlHelper.Link generation from action namesCurrently `IUrlHelper.Link` allows for generating absolute URLs when passing to it [route names which must be unique application-wide](https://docs.microsoft.com/en-us/aspnet/core/mvc/controllers/routing?view=aspnetcore-2.0#route-names). \r\n\r\nThis method looks like this: `string Link(string routeName, object values)` and this is currently the only official way when implementing HATEOAS or any hypermedia format.\r\n\r\n[**This doesn't work when someone works with generic controllers**](https://stackoverflow.com/questions/48633939/route-name-for-httpget-attribute-name-for-base-generic-controller-class-in-asp-n).\r\n\r\nIt would be nice if absolute URL could be generated using action name which should always work even with derived controllers with the same action method names.\r\n\r\nCurrently I solved it with extension defined in my project:\r\n\r\n\r\n",Done|help wanted|enhancement|area-mvc,pranavkm,"Currently `IUrlHelper.Link` allows for generating absolute URLs when passing to it [route names which must be unique application-wide](https://docs.microsoft.com/en-us/aspnet/core/mvc/controllers/routing?view=aspnetcore-2.0#route-names). \r\n\r\nThis method looks like this: `string Link(string routeName, object values)` and this is currently the only official way when implementing HATEOAS or any hypermedia format.\r\n\r\n[**This doesn't work when someone works with generic controllers**](https://stackoverflow.com/questions/48633939/route-name-for-httpget-attribute-name-for-base-generic-controller-class-in-asp-n).\r\n\r\nIt would be nice if absolute URL could be generated using action name which should always work even with derived controllers with the same action method names.\r\n\r\nCurrently I solved it with extension defined in my project:\r\n\r\n```csharp\r\npublic static class UrlHelperExtensions\r\n{\r\n    /// <summary>\r\n    /// Generates an absolute URL for the specified <paramref name=""actionName""/> and action\r\n    /// <paramref name=""values""/>, which contains the protocol (such as ""http"" or ""https"") and host name from the\r\n    /// current request.\r\n    /// </summary>\r\n    /// <param name=""actionName"">The name of the action that is used to generate URL.</param>\r\n    /// <param name=""values"">An object that contains action values.</param>\r\n    /// <returns>The generated absolute URL.</returns>\r\n    public static string LinkAction(this IUrlHelper urlHelper, string actionName, object values)\r\n    {\r\n        var httpContext = urlHelper.ActionContext.HttpContext;\r\n        return urlHelper.Action(new UrlActionContext()\r\n        {\r\n            Action = actionName,\r\n            Protocol = httpContext.Request.Scheme,\r\n            Host = httpContext.Request.Host.ToUriComponent(),\r\n            Values = values\r\n        });\r\n    }\r\n}\r\n```\r\n","csharp\r\npublic static class UrlHelperExtensions\r\n{\r\n    /// <summary>\r\n    /// Generates an absolute URL for the specified <paramref name=""actionName""/> and action\r\n    /// <paramref name=""values""/>, which contains the protocol (such as ""http"" or ""https"") and host name from the\r\n    /// current request.\r\n    /// </summary>\r\n    /// <param name=""actionName"">The name of the action that is used to generate URL.</param>\r\n    /// <param name=""values"">An object that contains action values.</param>\r\n    /// <returns>The generated absolute URL.</returns>\r\n    public static string LinkAction(this IUrlHelper urlHelper, string actionName, object values)\r\n    {\r\n        var httpContext = urlHelper.ActionContext.HttpContext;\r\n        return urlHelper.Action(new UrlActionContext()\r\n        {\r\n            Action = actionName,\r\n            Protocol = httpContext.Request.Scheme,\r\n            Host = httpContext.Request.Host.ToUriComponent(),\r\n            Values = values\r\n        });\r\n    }\r\n}\r\n"
5524,"Namespaces dependent on solution folder name?- Blazor 0.3.0\r\n- VS 2017 15.7.1\r\n\r\nCreated a new solution via PowerShell:\r\n\r\n\r\nCreated a new project in c:\\projects\\CoolNewProject called CoolNewProject.\r\n\r\nNormally I like to have my .sln file a directory above my projects, i.e.\r\n\r\n\r\nThen throw all of my src in 'src'.\r\n and all of my other project files.\r\n\r\nThe second I move everything into the 'src' folder from my newly created Blazor project I can no longer compile:\r\n```\r\nError | CS0246 | The type or namespace name 'App' could not be found (are you missing a using directive or an assembly reference?) | CoolNewProject | C:\\projects\\CoolNewProject\\src\\Program.cs | 17 | Active\r\n```\r\n\r\nAdditionally, none of the Pages can find their namespaces either, i.e.\r\n```\r\nError | CS0234 | The type or namespace name 'Shared' does not exist in the namespace 'CoolNewProject' (are you missing an assembly reference?) | CoolNewProject | C:\\Projects\\CoolNewProject\\src\\obj\\Debug\\netstandard2.0\\Pages\\Counter.g.i.cs | 21 | Active\r\n```",bug|Done|area-blazor,ajaybhargavb,"- Blazor 0.3.0\r\n- VS 2017 15.7.1\r\n\r\nCreated a new solution via PowerShell:\r\n```c:\\projects\\CoolNewProject\\ dotnet new blazor```\r\n\r\nCreated a new project in c:\\projects\\CoolNewProject called CoolNewProject.\r\n\r\nNormally I like to have my .sln file a directory above my projects, i.e.\r\n```c:\\projects\\CoolNewProject\\CoolNewProject.sln```\r\n\r\nThen throw all of my src in 'src'.\r\n```c:\\projects\\CoolNewProject\\src\\CoolNewProject.csproj``` and all of my other project files.\r\n\r\nThe second I move everything into the 'src' folder from my newly created Blazor project I can no longer compile:\r\n```\r\nError | CS0246 | The type or namespace name 'App' could not be found (are you missing a using directive or an assembly reference?) | CoolNewProject | C:\\projects\\CoolNewProject\\src\\Program.cs | 17 | Active\r\n```\r\n\r\nAdditionally, none of the Pages can find their namespaces either, i.e.\r\n```\r\nError | CS0234 | The type or namespace name 'Shared' does not exist in the namespace 'CoolNewProject' (are you missing an assembly reference?) | CoolNewProject | C:\\Projects\\CoolNewProject\\src\\obj\\Debug\\netstandard2.0\\Pages\\Counter.g.i.cs | 21 | Active\r\n```",c:\\projects\\CoolNewProject\\ dotnet new blazor
16055,"Cannot bind to style when binding to eventsI'm using Blazor 0.3.0 and whenever I bind to an event any bind to 'style' breaks.\r\n\r\nI have a sample app at [https://github.com/rpedretti/BlazorApp](https://github.com/rpedretti/BlazorApp) on branch version_0_3_0 that the bug can be reproduced, but I guess it' happens in any project\r\n\r\nGiven a simple tag like\r\n\r\n\r\n\r\nThe compiler throws \r\n\r\n> Error Component attributes do not support complex content (mixed C# and markup). Attribute: 'style', text 'background:ViewModel.ParentBgColor;\r\n\r\nand even the intellisense breakes:\r\n![image](https://user-images.githubusercontent.com/675601/39705115-d74273bc-51e3-11e8-83a8-39cd8511f4e2.png)\r\n\r\nBy removing any of the properties the project compiles beautifully and intellisense works again.\r\n\r\n![image](https://user-images.githubusercontent.com/675601/39705170-fc444618-51e3-11e8-89e9-c9fca3884ffb.png)\r\n\r\n",area-blazor,rynowak,"I'm using Blazor 0.3.0 and whenever I bind to an event any bind to 'style' breaks.\r\n\r\nI have a sample app at [https://github.com/rpedretti/BlazorApp](https://github.com/rpedretti/BlazorApp) on branch version_0_3_0 that the bug can be reproduced, but I guess it' happens in any project\r\n\r\nGiven a simple tag like\r\n\r\n```html\r\n<p onmouseover=""@ViewModel.OnComponentHover""\r\n  style=""background: @ViewModel.ParentBgColor;"" />\r\n```\r\n\r\nThe compiler throws \r\n\r\n> Error Component attributes do not support complex content (mixed C# and markup). Attribute: 'style', text 'background:ViewModel.ParentBgColor;\r\n\r\nand even the intellisense breakes:\r\n![image](https://user-images.githubusercontent.com/675601/39705115-d74273bc-51e3-11e8-83a8-39cd8511f4e2.png)\r\n\r\nBy removing any of the properties the project compiles beautifully and intellisense works again.\r\n\r\n![image](https://user-images.githubusercontent.com/675601/39705170-fc444618-51e3-11e8-89e9-c9fca3884ffb.png)\r\n\r\n","html\r\n<p onmouseover=""@ViewModel.OnComponentHover""\r\n  style=""background: @ViewModel.ParentBgColor;"" />\r\n"
16067,"Html in Attribute values cause build errors in current CI builds\r\nwill cause\r\n```\r\nOne or more errors occurred. (Unexpected node type Microsoft.AspNetCore.Blazor.Razor.HtmlElementIntermediateNode)\r\nat System.Threading.Tasks.TaskReplicator.Run[TState](ReplicatableUserAction`1 action, ParallelOptions options, Boolean stopOnFirstFailure)\r\nat System.Threading.Tasks.Parallel.ForWorker[TLocal](Int32 fromInclusive, Int32 toExclusive, ParallelOptions parallelOptions, Action`1 body, Action`2 bodyWithState, Func`4 bodyWithLocal, Func`1 localInit, Action`1 localFinally)\r\n--- End of stack trace from previous location where exception was thrown ---\r\nat System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nat System.Threading.Tasks.Parallel.ThrowSingleCancellationExceptionOrOtherException(ICollection exceptions, CancellationToken cancelToken, Exception otherException)\r\nat System.Threading.Tasks.Parallel.ForWorker[TLocal](Int32 fromInclusive, Int32 toExclusive, ParallelOptions parallelOptions, Action`1 body, Action`2 bodyWithState, Func`4 bodyWithLocal, Func`1 localInit, Action`1 localFinally)\r\nat System.Threading.Tasks.Parallel.For(Int32 fromInclusive, Int32 toExclusive, ParallelOptions parallelOptions, Action`1 body)\r\nat Microsoft.AspNetCore.Razor.Tools.GenerateCommand.GenerateCode(RazorProjectEngine engine, SourceItem[] inputs)\r\nat Microsoft.AspNetCore.Razor.Tools.GenerateCommand.ExecuteCore(RazorConfiguration configuration, String projectDirectory, String tagHelperManifest, List`1 sources, List`1 outputs, List`1 relativePaths)\r\nat Microsoft.AspNetCore.Razor.Tools.GenerateCommand.ExecuteCoreAsync()\r\nat Microsoft.AspNetCore.Razor.Tools.CommandBase.<ExecuteAsync>d__10.MoveNext()\r\npackages\\microsoft.aspnetcore.blazor.build\\0.4.0-preview1-10282\\targets\\RazorCompilation.targets(281,5): error : rzc generate exited with code 1. [WebApplication7\\WebApplication7\\WebApplication7.csproj]\r\n```",area-blazor,rynowak,"```cshtml\r\n@page ""/""\r\n\r\n<h1>Hello, world!</h1>\r\n\r\nWelcome to your new app.\r\n\r\n<SurveyPrompt Title=""<div>Test!</div>"" />\r\n```\r\nwill cause\r\n```\r\nOne or more errors occurred. (Unexpected node type Microsoft.AspNetCore.Blazor.Razor.HtmlElementIntermediateNode)\r\nat System.Threading.Tasks.TaskReplicator.Run[TState](ReplicatableUserAction`1 action, ParallelOptions options, Boolean stopOnFirstFailure)\r\nat System.Threading.Tasks.Parallel.ForWorker[TLocal](Int32 fromInclusive, Int32 toExclusive, ParallelOptions parallelOptions, Action`1 body, Action`2 bodyWithState, Func`4 bodyWithLocal, Func`1 localInit, Action`1 localFinally)\r\n--- End of stack trace from previous location where exception was thrown ---\r\nat System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nat System.Threading.Tasks.Parallel.ThrowSingleCancellationExceptionOrOtherException(ICollection exceptions, CancellationToken cancelToken, Exception otherException)\r\nat System.Threading.Tasks.Parallel.ForWorker[TLocal](Int32 fromInclusive, Int32 toExclusive, ParallelOptions parallelOptions, Action`1 body, Action`2 bodyWithState, Func`4 bodyWithLocal, Func`1 localInit, Action`1 localFinally)\r\nat System.Threading.Tasks.Parallel.For(Int32 fromInclusive, Int32 toExclusive, ParallelOptions parallelOptions, Action`1 body)\r\nat Microsoft.AspNetCore.Razor.Tools.GenerateCommand.GenerateCode(RazorProjectEngine engine, SourceItem[] inputs)\r\nat Microsoft.AspNetCore.Razor.Tools.GenerateCommand.ExecuteCore(RazorConfiguration configuration, String projectDirectory, String tagHelperManifest, List`1 sources, List`1 outputs, List`1 relativePaths)\r\nat Microsoft.AspNetCore.Razor.Tools.GenerateCommand.ExecuteCoreAsync()\r\nat Microsoft.AspNetCore.Razor.Tools.CommandBase.<ExecuteAsync>d__10.MoveNext()\r\npackages\\microsoft.aspnetcore.blazor.build\\0.4.0-preview1-10282\\targets\\RazorCompilation.targets(281,5): error : rzc generate exited with code 1. [WebApplication7\\WebApplication7\\WebApplication7.csproj]\r\n```","cshtml\r\n@page ""/""\r\n\r\n<h1>Hello, world!</h1>\r\n\r\nWelcome to your new app.\r\n\r\n<SurveyPrompt Title=""<div>Test!</div>"" />\r\n"
16066,"ArgumentOutOfRangeException in current CI VSIX buildsStart with\r\n\r\nnow autocomplete Title and you'll end up with ( | = cursor )\r\n\r\nat this point, VS will freeze and restart, caused by this exception\r\n```\r\nSystem.ArgumentOutOfRangeException\r\n   at Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeCollection.get_Item(Int32)\r\n   at Microsoft.AspNetCore.Blazor.Razor.BlazorDesignTimeNodeWriter.WriteComponentAttribute(Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeRenderingContext, Microsoft.AspNetCore.Blazor.Razor.ComponentAttributeExtensionNode)\r\n   at Microsoft.AspNetCore.Blazor.Razor.ComponentAttributeExtensionNode.WriteNode(Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeTarget, Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeRenderingContext)\r\n   at Microsoft.AspNetCore.Razor.Language.CodeGeneration.DefaultDocumentWriter+Visitor.VisitExtension(Microsoft.AspNetCore.Razor.Language.Intermediate.ExtensionIntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.Intermediate.ExtensionIntermediateNode.AcceptExtensionNode[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](System.__Canon, Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeVisitor)\r\n   at Microsoft.AspNetCore.Blazor.Razor.ComponentAttributeExtensionNode.Accept(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeVisitor)\r\n   at Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeVisitor.Visit(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.CodeGeneration.DefaultCodeRenderingContext.RenderNode(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode)\r\n   at Microsoft.AspNetCore.Blazor.Razor.BlazorDesignTimeNodeWriter.WriteComponent(Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeRenderingContext, Microsoft.AspNetCore.Blazor.Razor.ComponentExtensionNode)\r\n   at Microsoft.AspNetCore.Blazor.Razor.ComponentExtensionNode.WriteNode(Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeTarget, Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeRenderingContext)\r\n   at Microsoft.AspNetCore.Razor.Language.CodeGeneration.DefaultDocumentWriter+Visitor.VisitExtension(Microsoft.AspNetCore.Razor.Language.Intermediate.ExtensionIntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.Intermediate.ExtensionIntermediateNode.AcceptExtensionNode[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](System.__Canon, Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeVisitor)\r\n   at Microsoft.AspNetCore.Blazor.Razor.ComponentExtensionNode.Accept(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeVisitor)\r\n   at Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeVisitor.Visit(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.CodeGeneration.DefaultCodeRenderingContext.RenderChildren(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.CodeGeneration.DefaultDocumentWriter+Visitor.VisitDefault(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.CodeGeneration.DefaultDocumentWriter+Visitor.VisitMethodDeclaration(Microsoft.AspNetCore.Razor.Language.Intermediate.MethodDeclarationIntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.Intermediate.MethodDeclarationIntermediateNode.Accept(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeVisitor)\r\n   at Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeVisitor.Visit(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.CodeGeneration.DefaultCodeRenderingContext.RenderChildren(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.CodeGeneration.DefaultDocumentWriter+Visitor.VisitDefault(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.CodeGeneration.DefaultDocumentWriter+Visitor.VisitClassDeclaration(Microsoft.AspNetCore.Razor.Language.Intermediate.ClassDeclarationIntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.Intermediate.ClassDeclarationIntermediateNode.Accept(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeVisitor)\r\n   at Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeVisitor.Visit(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.CodeGeneration.DefaultCodeRenderingContext.RenderChildren(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.CodeGeneration.DefaultDocumentWriter+Visitor.VisitDefault(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.CodeGeneration.DefaultDocumentWriter+Visitor.VisitNamespaceDeclaration(Microsoft.AspNetCore.Razor.Language.Intermediate.NamespaceDeclarationIntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.Intermediate.NamespaceDeclarationIntermediateNode.Accept(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeVisitor)\r\n   at Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeVisitor.Visit(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.CodeGeneration.DefaultCodeRenderingContext.RenderChildren(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.CodeGeneration.DefaultDocumentWriter+Visitor.VisitDefault(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.CodeGeneration.DefaultDocumentWriter+Visitor.VisitDocument(Microsoft.AspNetCore.Razor.Language.Intermediate.DocumentIntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.CodeGeneration.DefaultDocumentWriter.WriteDocument(Microsoft.AspNetCore.Razor.Language.RazorCodeDocument, Microsoft.AspNetCore.Razor.Language.Intermediate.DocumentIntermediateNode)\r\n   at Microsoft.AspNetCore.Blazor.Razor.BlazorRazorCSharpLoweringPhase.ExecuteCore(Microsoft.AspNetCore.Razor.Language.RazorCodeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.RazorEnginePhaseBase.Execute(Microsoft.AspNetCore.Razor.Language.RazorCodeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorEngine.Process(Microsoft.AspNetCore.Razor.Language.RazorCodeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorProjectEngine.ProcessCore(Microsoft.AspNetCore.Razor.Language.RazorCodeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.RazorProjectEngine.ProcessDesignTime(Microsoft.AspNetCore.Razor.Language.RazorProjectItem)\r\n   at Microsoft.VisualStudio.Editor.Razor.BackgroundParser+BackgroundThread.WorkerLoop()\r\n   at System.Threading.ThreadHelper.ThreadStart_Context(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Threading.ThreadHelper.ThreadStart()\r\n```",area-blazor,rynowak,"Start with\r\n```cshtml\r\n@page ""/""\r\n\r\n<h1>Hello, world!</h1>\r\n\r\nWelcome to your new app.\r\n\r\n<SurveyPrompt\r\n```\r\nnow autocomplete Title and you'll end up with ( | = cursor )\r\n```cshtml\r\n@page ""/""\r\n\r\n<h1>Hello, world!</h1>\r\n\r\nWelcome to your new app.\r\n\r\n<SurveyPrompt Title=""|""\r\n```\r\nat this point, VS will freeze and restart, caused by this exception\r\n```\r\nSystem.ArgumentOutOfRangeException\r\n   at Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeCollection.get_Item(Int32)\r\n   at Microsoft.AspNetCore.Blazor.Razor.BlazorDesignTimeNodeWriter.WriteComponentAttribute(Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeRenderingContext, Microsoft.AspNetCore.Blazor.Razor.ComponentAttributeExtensionNode)\r\n   at Microsoft.AspNetCore.Blazor.Razor.ComponentAttributeExtensionNode.WriteNode(Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeTarget, Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeRenderingContext)\r\n   at Microsoft.AspNetCore.Razor.Language.CodeGeneration.DefaultDocumentWriter+Visitor.VisitExtension(Microsoft.AspNetCore.Razor.Language.Intermediate.ExtensionIntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.Intermediate.ExtensionIntermediateNode.AcceptExtensionNode[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](System.__Canon, Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeVisitor)\r\n   at Microsoft.AspNetCore.Blazor.Razor.ComponentAttributeExtensionNode.Accept(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeVisitor)\r\n   at Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeVisitor.Visit(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.CodeGeneration.DefaultCodeRenderingContext.RenderNode(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode)\r\n   at Microsoft.AspNetCore.Blazor.Razor.BlazorDesignTimeNodeWriter.WriteComponent(Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeRenderingContext, Microsoft.AspNetCore.Blazor.Razor.ComponentExtensionNode)\r\n   at Microsoft.AspNetCore.Blazor.Razor.ComponentExtensionNode.WriteNode(Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeTarget, Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeRenderingContext)\r\n   at Microsoft.AspNetCore.Razor.Language.CodeGeneration.DefaultDocumentWriter+Visitor.VisitExtension(Microsoft.AspNetCore.Razor.Language.Intermediate.ExtensionIntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.Intermediate.ExtensionIntermediateNode.AcceptExtensionNode[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](System.__Canon, Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeVisitor)\r\n   at Microsoft.AspNetCore.Blazor.Razor.ComponentExtensionNode.Accept(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeVisitor)\r\n   at Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeVisitor.Visit(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.CodeGeneration.DefaultCodeRenderingContext.RenderChildren(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.CodeGeneration.DefaultDocumentWriter+Visitor.VisitDefault(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.CodeGeneration.DefaultDocumentWriter+Visitor.VisitMethodDeclaration(Microsoft.AspNetCore.Razor.Language.Intermediate.MethodDeclarationIntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.Intermediate.MethodDeclarationIntermediateNode.Accept(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeVisitor)\r\n   at Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeVisitor.Visit(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.CodeGeneration.DefaultCodeRenderingContext.RenderChildren(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.CodeGeneration.DefaultDocumentWriter+Visitor.VisitDefault(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.CodeGeneration.DefaultDocumentWriter+Visitor.VisitClassDeclaration(Microsoft.AspNetCore.Razor.Language.Intermediate.ClassDeclarationIntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.Intermediate.ClassDeclarationIntermediateNode.Accept(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeVisitor)\r\n   at Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeVisitor.Visit(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.CodeGeneration.DefaultCodeRenderingContext.RenderChildren(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.CodeGeneration.DefaultDocumentWriter+Visitor.VisitDefault(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.CodeGeneration.DefaultDocumentWriter+Visitor.VisitNamespaceDeclaration(Microsoft.AspNetCore.Razor.Language.Intermediate.NamespaceDeclarationIntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.Intermediate.NamespaceDeclarationIntermediateNode.Accept(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeVisitor)\r\n   at Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeVisitor.Visit(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.CodeGeneration.DefaultCodeRenderingContext.RenderChildren(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.CodeGeneration.DefaultDocumentWriter+Visitor.VisitDefault(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.CodeGeneration.DefaultDocumentWriter+Visitor.VisitDocument(Microsoft.AspNetCore.Razor.Language.Intermediate.DocumentIntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.CodeGeneration.DefaultDocumentWriter.WriteDocument(Microsoft.AspNetCore.Razor.Language.RazorCodeDocument, Microsoft.AspNetCore.Razor.Language.Intermediate.DocumentIntermediateNode)\r\n   at Microsoft.AspNetCore.Blazor.Razor.BlazorRazorCSharpLoweringPhase.ExecuteCore(Microsoft.AspNetCore.Razor.Language.RazorCodeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.RazorEnginePhaseBase.Execute(Microsoft.AspNetCore.Razor.Language.RazorCodeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorEngine.Process(Microsoft.AspNetCore.Razor.Language.RazorCodeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorProjectEngine.ProcessCore(Microsoft.AspNetCore.Razor.Language.RazorCodeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.RazorProjectEngine.ProcessDesignTime(Microsoft.AspNetCore.Razor.Language.RazorProjectItem)\r\n   at Microsoft.VisualStudio.Editor.Razor.BackgroundParser+BackgroundThread.WorkerLoop()\r\n   at System.Threading.ThreadHelper.ThreadStart_Context(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Threading.ThreadHelper.ThreadStart()\r\n```","cshtml\r\n@page ""/""\r\n\r\n<h1>Hello, world!</h1>\r\n\r\nWelcome to your new app.\r\n\r\n<SurveyPrompt\r\n"
5514,"Generated __MyComponent class mismatch with 'this' keywordConsider the following senario:\r\n\r\n#### _MyComponent.cshtml_\r\n```xml\r\n<div> My component </div>\r\n@functions{\r\n    \r\n         public void override OnInit()\r\n         {\r\n                 MyHelperClass.InitMyComponent(this);\r\n         }\r\n}\r\n\r\n```\r\n\r\n#### _MyHelperClass.cs_\r\n\r\n\r\nThis code will not compile because, the keyword `this `is referencing the `__MyComponent `generated class. Any workarounds or fixes ?",bug|:heavy_check_mark: Resolution: Duplicate|area-blazor,rynowak,"Consider the following senario:\r\n\r\n#### _MyComponent.cshtml_\r\n```xml\r\n<div> My component </div>\r\n@functions{\r\n    \r\n         public void override OnInit()\r\n         {\r\n                 MyHelperClass.InitMyComponent(this);\r\n         }\r\n}\r\n\r\n```\r\n\r\n#### _MyHelperClass.cs_\r\n```csharp\r\npublic static class MyHelperClass\r\n{\r\n         public static void InitMyComponent(MyComponent myComponent)\r\n         {\r\n                   // do stuff here\r\n         }\r\n}\r\n```\r\n\r\nThis code will not compile because, the keyword `this `is referencing the `__MyComponent `generated class. Any workarounds or fixes ?",csharp\r\npublic static class MyHelperClass\r\n{\r\n         public static void InitMyComponent(MyComponent myComponent)\r\n         {\r\n                   // do stuff here\r\n         }\r\n}\r\n
5507,"Events inside ChildContent are being dispatched to incorrect componentRepro:\r\n\r\n\r\n\r\nClicking the button fails with *The component of type Microsoft.AspNetCore.Blazor.Routing.NavLink cannot receive events because it does not implement Microsoft.AspNetCore.Blazor.Components.IHandleEvent.*.\r\n\r\nThe event should be dispatched to the owner component, not to the `NavLink`.\r\n\r\nIn most cases it's currently possible to work around this by calling `StateHasChanged` inside the event handler delegate, because any component that inherits `BlazorComponent` does implement `IHandleEvent` and handles events by invoking the supplied delegate. But that workaround doesn't work when the event-receiving component doesn't implement `IHandleEvent`, and in general it's still wrong because you shouldn't have to do this.\r\n\r\n**Possible solution**\r\n\r\nThe intent is for events to be dispatched to the component whose code declares the event handler, not the component whose rendering logic added it to the RenderTree.\r\n\r\nWe could change the signature of `BindMethods.GetEventHandlerValue<T>(value)` to `BindMethods.GetEventHandlerValue<T>(IComponent target, value)` (for each of the `value` type overloads). Then we change the Razor compiler to supply the value `this` for `target`, hence we've captured a `target` value matching the component whose code contains the actual `onevent=...` syntax. In typical cases where the delegate represents an instance method, the lambda already captures `this` so this change wouldn't trigger any more allocations than we already do.\r\n\r\nThen, the overloads of `GetEventHandlerValue` that return `MulticastDelegate` could be changed to return some new `struct`, `ComponentEventDelegate` that has two properties: `IComponent target` and `MulticastDelegate delegate`.\r\n\r\nThen we'd change `RenderTreeBuilder`'s `AddAttribute` so that it has an explicit overload for `ComponentEventDelegate` instead of ones for `MulticastDelegate`. Inside that overload, we do the same logic that we used to for `MulticastDelegate`, but on the resulting `RenderTreeFrame`, we also store information about the target component. (To fit into the existing `RenderTreeFrame` memory layout, we might want to locate and store the target component's **id** here rather than a pointer to the actual instance, since pointers are 8-bytes, and we only have 4 bytes spare without expanding the size of a frame).\r\n\r\nThen, we change the `AssignEventHandlerId` logic (and data storage) so that it stores the target component ID on the `_eventHandlersById` dictionary entry as well as the delegate itself.\r\n\r\nFinally we can remove the whole notion of specifying a component ID during the event dispatching process. It will only be necessary to specify the `eventHandlerId`, and the `Renderer` code will be able to find the correct target component from that alone.",bug|Done|area-blazor,rynowak,"Repro:\r\n\r\n```html\r\n<NavLink href=""/"">\r\n    <button onclick=""@(_ => { Console.WriteLine(""Hello""); })"">Click me</button>\r\n</NavLink>\r\n```\r\n\r\nClicking the button fails with *The component of type Microsoft.AspNetCore.Blazor.Routing.NavLink cannot receive events because it does not implement Microsoft.AspNetCore.Blazor.Components.IHandleEvent.*.\r\n\r\nThe event should be dispatched to the owner component, not to the `NavLink`.\r\n\r\nIn most cases it's currently possible to work around this by calling `StateHasChanged` inside the event handler delegate, because any component that inherits `BlazorComponent` does implement `IHandleEvent` and handles events by invoking the supplied delegate. But that workaround doesn't work when the event-receiving component doesn't implement `IHandleEvent`, and in general it's still wrong because you shouldn't have to do this.\r\n\r\n**Possible solution**\r\n\r\nThe intent is for events to be dispatched to the component whose code declares the event handler, not the component whose rendering logic added it to the RenderTree.\r\n\r\nWe could change the signature of `BindMethods.GetEventHandlerValue<T>(value)` to `BindMethods.GetEventHandlerValue<T>(IComponent target, value)` (for each of the `value` type overloads). Then we change the Razor compiler to supply the value `this` for `target`, hence we've captured a `target` value matching the component whose code contains the actual `onevent=...` syntax. In typical cases where the delegate represents an instance method, the lambda already captures `this` so this change wouldn't trigger any more allocations than we already do.\r\n\r\nThen, the overloads of `GetEventHandlerValue` that return `MulticastDelegate` could be changed to return some new `struct`, `ComponentEventDelegate` that has two properties: `IComponent target` and `MulticastDelegate delegate`.\r\n\r\nThen we'd change `RenderTreeBuilder`'s `AddAttribute` so that it has an explicit overload for `ComponentEventDelegate` instead of ones for `MulticastDelegate`. Inside that overload, we do the same logic that we used to for `MulticastDelegate`, but on the resulting `RenderTreeFrame`, we also store information about the target component. (To fit into the existing `RenderTreeFrame` memory layout, we might want to locate and store the target component's **id** here rather than a pointer to the actual instance, since pointers are 8-bytes, and we only have 4 bytes spare without expanding the size of a frame).\r\n\r\nThen, we change the `AssignEventHandlerId` logic (and data storage) so that it stores the target component ID on the `_eventHandlersById` dictionary entry as well as the delegate itself.\r\n\r\nFinally we can remove the whole notion of specifying a component ID during the event dispatching process. It will only be necessary to specify the `eventHandlerId`, and the `Renderer` code will be able to find the correct target component from that alone.","html\r\n<NavLink href=""/"">\r\n    <button onclick=""@(_ => { Console.WriteLine(""Hello""); })"">Click me</button>\r\n</NavLink>\r\n"
16178,"Support multiple 'bind-Property' on componentsHi there,\r\nI have a user component with multiple properties which I want to bind to.\r\n\r\n\r\n\r\n1) In `User`, if I define *Changed delegate properties for both `Name` and `IsActive`:\r\n```\r\n<input type=""text"" bind=""@Name"" />\r\n<input type=""checkbox"" bind=""@IsActive"" />\r\n\r\n@functions\r\n{\r\n    public string Name { get; set; }\r\n    public Action<string> NameChanged { get; set; }\r\n    public bool IsActive { get; set; }\r\n    public Action<bool> IsActiveChanged { get; set; }\r\n}\r\n```\r\n\r\nBuild fails with:\r\n```\r\nD:\\Development\\.NuGet\\microsoft.aspnetcore.blazor.build\\0.2.0\\targets\\RazorCompilation.targets(281,5): error : rzc generate exited with code 1. [D:\\Development\\Maraf\\Money\\src\\Money.UI.Blazor\\Money.UI.Blazor.csproj]\r\n```\r\n\r\n2) When I originally defined only a single Changed property, generated code looked like:\r\n\r\n\r\nWhich tried to bind both expressions to property `Name` and failed build with:\r\n```\r\nobj\\Debug\\netstandard2.0\\Pages\\Summary.g.cs(61,112): error CS0029: Cannot implicitly convert type 'string' to 'bool' [D:\\Development\\Maraf\\Money\\src\\Money.UI.Blazor\\Money.UI.Blazor.csproj]\r\n```",area-blazor,rynowak,"Hi there,\r\nI have a user component with multiple properties which I want to bind to.\r\n\r\n```html\r\n<User bind-Name=""@UserName"" bind-IsActive=""@UserIsActive"" />\r\n```\r\n\r\n1) In `User`, if I define *Changed delegate properties for both `Name` and `IsActive`:\r\n```\r\n<input type=""text"" bind=""@Name"" />\r\n<input type=""checkbox"" bind=""@IsActive"" />\r\n\r\n@functions\r\n{\r\n    public string Name { get; set; }\r\n    public Action<string> NameChanged { get; set; }\r\n    public bool IsActive { get; set; }\r\n    public Action<bool> IsActiveChanged { get; set; }\r\n}\r\n```\r\n\r\nBuild fails with:\r\n```\r\nD:\\Development\\.NuGet\\microsoft.aspnetcore.blazor.build\\0.2.0\\targets\\RazorCompilation.targets(281,5): error : rzc generate exited with code 1. [D:\\Development\\Maraf\\Money\\src\\Money.UI.Blazor\\Money.UI.Blazor.csproj]\r\n```\r\n\r\n2) When I originally defined only a single Changed property, generated code looked like:\r\n```C#\r\nbuilder.OpenComponent<Money.UI.Blazor.Components.User>(14);\r\nbuilder.AddAttribute(15, ""Name"", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetValue(UserName));\r\nbuilder.AddAttribute(16, ""NameChanged"", new System.Action<System.String>(__value => UserName = __value));\r\nbuilder.AddAttribute(17, ""Name"", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetValue(UserIsActive));\r\nbuilder.AddAttribute(18, ""NameChanged"", new System.Action<System.String>(__value => UserIsActive = __value));\r\nbuilder.CloseComponent();\r\n```\r\n\r\nWhich tried to bind both expressions to property `Name` and failed build with:\r\n```\r\nobj\\Debug\\netstandard2.0\\Pages\\Summary.g.cs(61,112): error CS0029: Cannot implicitly convert type 'string' to 'bool' [D:\\Development\\Maraf\\Money\\src\\Money.UI.Blazor\\Money.UI.Blazor.csproj]\r\n```","html\r\n<User bind-Name=""@UserName"" bind-IsActive=""@UserIsActive"" />\r\n"
5497,"Create components using dependency injectionFrom what I see, it would be changing this line: https://github.com/aspnet/Blazor/blob/5be754e75def0c4134e379a6440c6b284828f01e/src/Microsoft.AspNetCore.Blazor/Components/ComponentFactory.cs#L35\r\n\r\nAnother change would be to allow for interfaces that derives from IComponent in the language service.\r\n\r\nThe usecases are the following: \r\n\r\n1. Allow for code only components to use constructor injection. The property injection support was native in Asp.Net core while it was in its early stages and was later removed to make the DI simpler and more focussed. This seems to be a step backwards.\r\n\r\n2. Allow this pattern: \r\n\r\n\r\nHow would this be useful: it would become possible to expose components as a contract between multiple assemblies, potentially multiple repositories. This could become the base for a micro-ui architecture where each service could expose their UI components as a contract thus removing the need for a fully pre-built application and allowing dynamically loading components for A/B testing or for testing new features behind feature flags.",investigate|area-blazor,rynowak,"From what I see, it would be changing this line: https://github.com/aspnet/Blazor/blob/5be754e75def0c4134e379a6440c6b284828f01e/src/Microsoft.AspNetCore.Blazor/Components/ComponentFactory.cs#L35\r\n\r\nAnother change would be to allow for interfaces that derives from IComponent in the language service.\r\n\r\nThe usecases are the following: \r\n\r\n1. Allow for code only components to use constructor injection. The property injection support was native in Asp.Net core while it was in its early stages and was later removed to make the DI simpler and more focussed. This seems to be a step backwards.\r\n\r\n2. Allow this pattern: \r\n```csharp\r\n\r\n//In assembly A\r\npublic interface IMyComponent : IComponent { int SomeParameter{get;set;} }\r\n\r\n//In assembly B\r\npublic class MyComponent: BlazorComponent, IMyComponent { }\r\n\r\n//In the blazor app: \r\n\r\n//Setting up dependency injection\r\nclass Program\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n        var serviceProvider = new BrowserServiceProvider(configure =>\r\n        {\r\n            //Potentially load implementation dynamically here\r\n            configure.Add(ServiceDescriptor.Transient(typeof(IMyComponent), typeof(MyComponent)));\r\n        });\r\n        new BrowserRenderer(serviceProvider).AddComponent<App>(""app"");\r\n    }\r\n}\r\n\r\n//in cshtml page\r\n<IMyComponent SomeParameter=""22"" />\r\n```\r\n\r\nHow would this be useful: it would become possible to expose components as a contract between multiple assemblies, potentially multiple repositories. This could become the base for a micro-ui architecture where each service could expose their UI components as a contract thus removing the need for a fully pre-built application and allowing dynamically loading components for A/B testing or for testing new features behind feature flags.","csharp\r\n\r\n//In assembly A\r\npublic interface IMyComponent : IComponent { int SomeParameter{get;set;} }\r\n\r\n//In assembly B\r\npublic class MyComponent: BlazorComponent, IMyComponent { }\r\n\r\n//In the blazor app: \r\n\r\n//Setting up dependency injection\r\nclass Program\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n        var serviceProvider = new BrowserServiceProvider(configure =>\r\n        {\r\n            //Potentially load implementation dynamically here\r\n            configure.Add(ServiceDescriptor.Transient(typeof(IMyComponent), typeof(MyComponent)));\r\n        });\r\n        new BrowserRenderer(serviceProvider).AddComponent<App>(""app"");\r\n    }\r\n}\r\n\r\n//in cshtml page\r\n<IMyComponent SomeParameter=""22"" />\r\n"
4754,"Is a Null Header Value a Set header value?Setting a Header to null \r\n* doesn't change its count (stays at zero)\r\n* doesn't change the Response output (header is not output)\r\n\r\nHowever it will cause an error if a real value is added after:\r\n\r\n\r\n\r\nIf you can't smell it, see it, taste it, does it exist?\r\n\r\nShould it not throw, but set the value? (as no value is set)\r\n\r\nFrom https://github.com/aspnet/KestrelHttpServer/pull/2347 (which was treating it as not set for perf reasons; i.e. don't expend extra cycles tracking nothing for no effect other than to just to throw an error on a second add)\r\n\r\n/cc @halter73 @davidfowl ",bug|help wanted|feature-kestrel|severity-nice-to-have|affected-very-few|area-networking,Tratcher|Daniel-Genkin-MS-2,"Setting a Header to null \r\n* doesn't change its count (stays at zero)\r\n* doesn't change the Response output (header is not output)\r\n\r\nHowever it will cause an error if a real value is added after:\r\n\r\n```csharp\r\napp.Run(async (context) =>\r\n{\r\n    var resposne = context.Response;\r\n\r\n    // Prints zero\r\n    Console.WriteLine(resposne.Headers[""warning""].Count);\r\n\r\n    // Does not change response\r\n    resposne.Headers.Add(""warning"", new StringValues((string)null));\r\n\r\n    // Prints zero\r\n    Console.WriteLine(resposne.Headers[""warning""].Count);\r\n\r\n    // Throws: System.ArgumentException: An item with the same key has already been added.\r\n    resposne.Headers.Add(""warning"", new StringValues(""Hello""));\r\n\r\n    await context.Response.WriteAsync(""Hello World!"");\r\n});\r\n```\r\n\r\nIf you can't smell it, see it, taste it, does it exist?\r\n\r\nShould it not throw, but set the value? (as no value is set)\r\n\r\nFrom https://github.com/aspnet/KestrelHttpServer/pull/2347 (which was treating it as not set for perf reasons; i.e. don't expend extra cycles tracking nothing for no effect other than to just to throw an error on a second add)\r\n\r\n/cc @halter73 @davidfowl ","csharp\r\napp.Run(async (context) =>\r\n{\r\n    var resposne = context.Response;\r\n\r\n    // Prints zero\r\n    Console.WriteLine(resposne.Headers[""warning""].Count);\r\n\r\n    // Does not change response\r\n    resposne.Headers.Add(""warning"", new StringValues((string)null));\r\n\r\n    // Prints zero\r\n    Console.WriteLine(resposne.Headers[""warning""].Count);\r\n\r\n    // Throws: System.ArgumentException: An item with the same key has already been added.\r\n    resposne.Headers.Add(""warning"", new StringValues(""Hello""));\r\n\r\n    await context.Response.WriteAsync(""Hello World!"");\r\n});\r\n"
20209,"Using System.Reflection.TypeExtensions.GetProperties in .NET Core 2.0I am using a Class Library project, whose target frameworks are `net451` and `netstandard1.6`, which dynamically compiles a class in a way similar to the example here (a ""standard"" way to do the compilation):\r\n\r\nhttps://github.com/dotnet/roslyn/issues/16211#issuecomment-372998985\r\n\r\nbut inside a method in `MyClass`, I want to retrieve all public properties like this (the actual code is the string of this, which is passed to `CSharpSyntaxTree.ParseText`:\r\n\r\nNow, the Class Library project is referenced by an ASP.NET Core web app (assume any third party app that I have no control over), which targets `netcore1.1` and as [`System.Reflection.TypeExtensions.GetProperties` is available](https://docs.microsoft.com/en-us/dotnet/api/system.reflection.typeextensions.getproperties?view=netcore-1.1#System_Reflection_TypeExtensions_GetProperties_System_Type_System_Reflection_BindingFlags_), it is working as expected.\r\n\r\nHowever, targeting `netcore2.0` throws an error although it looks like the [method should still be available](https://docs.microsoft.com/en-us/dotnet/api/system.reflection.typeextensions.getproperties?view=netcore-2.0#System_Reflection_TypeExtensions_GetProperties_System_Type_System_Reflection_BindingFlags_). The alternative (used for `net451` above):\r\n\r\nis actually working for `netcore2.0`, but not for `netcore1.0` or `netcore1.1`. Also note that this happens only when compiling the class dynamically - using the `MyClass`s `Print` method definition works OK in both `netcore1.0` and `netcore2.0` without the dynamic compilation.\r\n\r\nCan you provide more information why this is happening and if it is required for the `netcore2.0` project to ""provide"" the `System.Reflection.TypeExtensions` package?",Needs: Author Feedback|area-hosting|area-networking,davidfowl,"I am using a Class Library project, whose target frameworks are `net451` and `netstandard1.6`, which dynamically compiles a class in a way similar to the example here (a ""standard"" way to do the compilation):\r\n\r\nhttps://github.com/dotnet/roslyn/issues/16211#issuecomment-372998985\r\n\r\nbut inside a method in `MyClass`, I want to retrieve all public properties like this (the actual code is the string of this, which is passed to `CSharpSyntaxTree.ParseText`:\r\n```csharp\r\nusing System;\r\npublic class MyClass\r\n{\r\n    public static void Print()\r\n    {\r\n#if NET451\r\n            var props = this.GetType().GetProperties(System.Reflection.BindingFlags.Instance | System.Reflection.BindingFlags.Public);\r\n#else\r\n            var props = System.Reflection.TypeExtensions.GetProperties(this.GetType(), System.Reflection.BindingFlags.Instance | System.Reflection.BindingFlags.Public);\r\n#endif\r\n             //additional code\r\n    }   \r\n}\r\n```\r\nNow, the Class Library project is referenced by an ASP.NET Core web app (assume any third party app that I have no control over), which targets `netcore1.1` and as [`System.Reflection.TypeExtensions.GetProperties` is available](https://docs.microsoft.com/en-us/dotnet/api/system.reflection.typeextensions.getproperties?view=netcore-1.1#System_Reflection_TypeExtensions_GetProperties_System_Type_System_Reflection_BindingFlags_), it is working as expected.\r\n\r\nHowever, targeting `netcore2.0` throws an error although it looks like the [method should still be available](https://docs.microsoft.com/en-us/dotnet/api/system.reflection.typeextensions.getproperties?view=netcore-2.0#System_Reflection_TypeExtensions_GetProperties_System_Type_System_Reflection_BindingFlags_). The alternative (used for `net451` above):\r\n```csharp\r\nvar props = this.GetType().GetProperties(System.Reflection.BindingFlags.Instance | System.Reflection.BindingFlags.Public);\r\n```\r\nis actually working for `netcore2.0`, but not for `netcore1.0` or `netcore1.1`. Also note that this happens only when compiling the class dynamically - using the `MyClass`s `Print` method definition works OK in both `netcore1.0` and `netcore2.0` without the dynamic compilation.\r\n\r\nCan you provide more information why this is happening and if it is required for the `netcore2.0` project to ""provide"" the `System.Reflection.TypeExtensions` package?","csharp\r\nusing System;\r\npublic class MyClass\r\n{\r\n    public static void Print()\r\n    {\r\n#if NET451\r\n            var props = this.GetType().GetProperties(System.Reflection.BindingFlags.Instance | System.Reflection.BindingFlags.Public);\r\n#else\r\n            var props = System.Reflection.TypeExtensions.GetProperties(this.GetType(), System.Reflection.BindingFlags.Instance | System.Reflection.BindingFlags.Public);\r\n#endif\r\n             //additional code\r\n    }   \r\n}\r\n"
2955,"SlabMemoryPool page size_From @muratg on Tuesday, March 6, 2018 3:34:30 PM_\r\n\r\n_From @tmds on March 6, 2018 10:0_\n\nSlabMemoryPool is using PageSize.\r\n\r\n\r\n\r\nSuppose page size is large, e.g. 2MB. Now our application is using 2MB buffers and a slab is 64MB.\r\nPerhaps it is desired to still use 4KB buffers and have a slab of 2MB?\r\n\r\nCC @davidfowl @benaadams \n\n_Copied from original issue: aspnet/KestrelHttpServer#2365_\r\n\r\n_Copied from original issue: aspnet/Common#325_",bug|Done,davidfowl,"_From @muratg on Tuesday, March 6, 2018 3:34:30 PM_\r\n\r\n_From @tmds on March 6, 2018 10:0_\n\nSlabMemoryPool is using PageSize.\r\n\r\n```C#\r\nprivate static readonly int _pageSize = Environment.SystemPageSize;\r\nprivate const int _blockCount = 32;\r\n```\r\n\r\nSuppose page size is large, e.g. 2MB. Now our application is using 2MB buffers and a slab is 64MB.\r\nPerhaps it is desired to still use 4KB buffers and have a slab of 2MB?\r\n\r\nCC @davidfowl @benaadams \n\n_Copied from original issue: aspnet/KestrelHttpServer#2365_\r\n\r\n_Copied from original issue: aspnet/Common#325_",C#\r\nprivate static readonly int _pageSize = Environment.SystemPageSize;\r\nprivate const int _blockCount = 32;\r\n
2941,"PersistKeysToFileSystem in Docker hosted on Linux NFS hardware fails with ""Unknown error 524""@joetherod commented on [Thu Mar 08 2018](https://github.com/aspnet/Hosting/issues/1343)\r\n\r\nTrying to AddDataProtection for MVC Core app.\r\n\r\n\r\n\r\nThe Directory is a configured volume mount in the linux host.\r\nIf I dont use the volume mount, it works.\r\nVolume mount is needed as per described in MS Docs since the app is hosted in many Docker containers.\r\nPlease advise.\r\n\r\nWorks locally. But when configured to a Docker container hosted in linux, I get the following exception on startup:\r\n\r\n{""Timestamp"":""2018-03-08T20:45:37.4873753+00:00"",""Level"":""Error"",""MessageTemplate"":""An error occurred while reading the key ring."",""Exception"":""System.IO.IOException: Unknown error 524\\n   at System.IO.UnixFileSystem.MoveFile(String sourceFullPath, String destFullPath)\\n   at System.IO.File.Move(String sourceFileName, String destFileName)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElementCore(XElement element, String filename)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElement(XElement element, String friendlyName)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)"",""Properties"":{""EventId"":{""Id"":48},""SourceContext"":""Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider"",""RequestId"":""0HLC55SODK05P:00000001"",""RequestPath"":""/_health"",""CorrelationId"":null,""ConnectionId"":""0HLC55SODK05P""}}\r\n\r\n\r\n---\r\n\r\n@Tratcher commented on [Thu Mar 08 2018](https://github.com/aspnet/Hosting/issues/1343#issuecomment-371634771)\r\n\r\n@natemcmaster \r\n\r\n---\r\n\r\n@natemcmaster commented on [Thu Mar 08 2018](https://github.com/aspnet/Hosting/issues/1343#issuecomment-371636962)\r\n\r\nThis appears to be an issue with your Docker host, not with ASP.NET Core. System.IO.File.Move is failing to write into the mounted directory. Can you verify this with a minimal repro like this?\r\n\r\n\r\n---\r\n\r\n@joetherod commented on [Thu Mar 08 2018](https://github.com/aspnet/Hosting/issues/1343#issuecomment-371659784)\r\n\r\nWrite and move works, but still getting exception.\r\n\r\nAn error occurred while reading the key ring."",""Exception"":""System.IO.IOException: Unknown error 524\\n   at System.IO.UnixFileSystem.MoveFile(String sourceFullPath, String destFullPath)\\n   at System.IO.File.Move(String sourceFileName, String destFileName)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElementCore(XElement element, String filename)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElement(XElement element, String friendlyName)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)"",""Properties"":{""EventId"":{""Id"":48},""SourceContext"":""Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider"",""RequestId"":""0HLC597NS53I0:00000001"",""RequestPath"":""/_health"",""CorrelationId"":null,""ConnectionId"":""0HLC597NS53I0""}}\r\n\r\nAn unhandled exception was thrown by the application."",""Exception"":""System.Security.Cryptography.CryptographicException: An error occurred while trying to encrypt the provided data. Refer to the inner exception for more information. ---> System.IO.IOException: Unknown error 524\\n   at System.IO.UnixFileSystem.MoveFile(String sourceFullPath, String destFullPath)\\n   at System.IO.File.Move(String sourceFileName, String destFileName)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElementCore(XElement element, String filename)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElement(XElement element, String friendlyName)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Protect(Byte[] plaintext)\\n   --- End of inner exception stack trace ---\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Protect(Byte[] plaintext)\\n   at Microsoft.AspNetCore.Session.CookieProtection.Protect(IDataProtector protector, String data)\\n   at Microsoft.AspNetCore.Session.SessionMiddleware.<Invoke>d__9.MoveNext()\\n--- End of stack trace from previous location where exception was thrown ---\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\n   at Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware.<Invoke>d__3.MoveNext()\\n--- End of stack trace from previous location where exception was thrown ---\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\n   at Microsoft.AspNetCore.Hosting.Internal.RequestServicesContainerMiddleware.<Invoke>d__3.MoveNext()\\n--- End of stack trace from previous location where exception was thrown ---\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.<ProcessRequestsAsync>d__185`1.MoveNext()"",""Properties"":{""ConnectionId"":""0HLC597NS53I0"",""TraceIdentifier"":""0HLC597NS53I0:00000001"",""EventId"":{""Id"":13,""Name"":""ApplicationError""},""SourceContext"":""Microsoft.AspNetCore.Server.Kestrel"",""RequestId"":""0HLC597NS53I0:00000001"",""RequestPath"":""/_health"",""CorrelationId"":null}}\r\n\r\n---\r\n\r\n@natemcmaster commented on [Thu Mar 08 2018](https://github.com/aspnet/Hosting/issues/1343#issuecomment-371661817)\r\n\r\nCan you provide more log info? There should be an INFO log item just before this File.Move\r\n\r\nhttps://github.com/aspnet/DataProtection/blob/8a42c24f46d728b4728e6b20febd0a11c1111df2/src/Microsoft.AspNetCore.DataProtection/Repositories/FileSystemXmlRepository.cs#L232-L233\r\n\r\n---\r\n\r\n@joetherod commented on [Thu Mar 08 2018](https://github.com/aspnet/Hosting/issues/1343#issuecomment-371685069)\r\n\r\n services.AddDataProtection()\r\n                .PersistKeysToFileSystem(new DirectoryInfo(""etc/talentbrew/keys""))\r\n                .SetApplicationName(""XXX"")\r\n                .SetDefaultKeyLifetime(TimeSpan.FromDays(365));\r\n\r\nLevel"":""Information"",""MessageTemplate"":""Writing data to file '{FileName}'."",""Properties"":{""FileName"":""/app/etc/talentbrew/keys/key-fb6f8187-5606-445b-9591-3c268c59ff84.xml"",""EventId"":{""Id"":39},""SourceContext"":""Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository"",""RequestId"":""0HLC5BJ5EVUU9:00000001"",""RequestPath"":""/_health"",""CorrelationId"":null,""ConnectionId"":""0HLC5BJ5EVUU9""}\r\n\r\n""Level"":""Error"",""MessageTemplate"":""Connection id \\""{ConnectionId}\\"", Request id \\""{TraceIdentifier}\\"": An unhandled exception was thrown by the application."",""Exception"":""System.Security.Cryptography.CryptographicException: An error occurred while trying to encrypt the provided data. Refer to the inner exception for more information. ---> System.IO.IOException: Unknown error 524\\n   at System.IO.UnixFileSystem.MoveFile(String sourceFullPath, String destFullPath)\\n   at System.IO.File.Move(String sourceFileName, String destFileName)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElementCore(XElement element, String filename)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElement(XElement element, String friendlyName)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Protect(Byte[] plaintext)\\n   --- End of inner exception stack trace ---\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Protect(Byte[] plaintext)\\n   at Microsoft.AspNetCore.Session.CookieProtection.Protect(IDataProtector protector, String data)\\n   at Microsoft.AspNetCore.Session.SessionMiddleware.<Invoke>d__9.MoveNext()\\n--- End of stack trace from previous location where exception was thrown ---\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\n   at Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware.<Invoke>d__3.MoveNext()\\n--- End of stack trace from previous location where exception was thrown ---\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\n   at Microsoft.AspNetCore.Hosting.Internal.RequestServicesContainerMiddleware.<Invoke>d__3.MoveNext()\\n--- End of stack trace from previous location where exception was thrown ---\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.<ProcessRequestsAsync>d__185`1.MoveNext()"",""Properties"":{""ConnectionId"":""0HLC5BJ5EVUU9"",""TraceIdentifier"":""0HLC5BJ5EVUU9:00000001"",""EventId"":{""Id"":13,""Name"":""ApplicationError""},""SourceContext"":""Microsoft.AspNetCore.Server.Kestrel"",""RequestId"":""0HLC5BJ5EVUU9:00000001"",""RequestPath"":""/_health"",""CorrelationId"":null}}\r\n\r\n""Level"":""Information"",""MessageTemplate"":""Creating key {KeyId:B} with creation date {CreationDate:u}, activation date {ActivationDate:u}, and expiration date {ExpirationDate:u}."",""Properties"":{""KeyId"":""fb6f8187-5606-445b-9591-3c268c59ff84"",""CreationDate"":""2018-03-09T01:33:27.3851082+00:00"",""ActivationDate"":""2018-03-09T01:33:27.3843013+00:00"",""ExpirationDate"":""2019-03-09T01:33:27.3843013+00:00"",""EventId"":{""Id"":58},""SourceContext"":""Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"",""RequestId"":""0HLC5BJ5EVUU9:00000001"",""RequestPath"":""/_health"",""CorrelationId"":null,""ConnectionId"":""0HLC5BJ5EVUU9""},""Renderings"":{""KeyId"":[{""Format"":""B"",""Rendering"":""{fb6f8187-5606-445b-9591-3c268c59ff84}""}],""CreationDate"":[{""Format"":""u"",""Rendering"":""2018-03-09 01:33:27Z""}],""ActivationDate"":[{""Format"":""u"",""Rendering"":""2018-03-09 01:33:27Z""}],""ExpirationDate"":[{""Format"":""u"",""Rendering"":""2019-03-09 01:33:27Z""}]}}\r\n\r\nLevel"":""Error"",""MessageTemplate"":""An error occurred while reading the key ring."",""Exception"":""System.IO.IOException: Unknown error 524\\n   at System.IO.UnixFileSystem.MoveFile(String sourceFullPath, String destFullPath)\\n   at System.IO.File.Move(String sourceFileName, String destFileName)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElementCore(XElement element, String filename)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElement(XElement element, String friendlyName)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)"",""Properties"":{""EventId"":{""Id"":48},""SourceContext"":""Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider"",""RequestId"":""0HLC5BJ5EVUU9:00000001"",""RequestPath"":""/_health"",""CorrelationId"":null,""ConnectionId"":""0HLC5BJ5EVUU9""}}\r\n\r\n",bug|Done|area-dataprotection,natemcmaster,"@joetherod commented on [Thu Mar 08 2018](https://github.com/aspnet/Hosting/issues/1343)\r\n\r\nTrying to AddDataProtection for MVC Core app.\r\n\r\n```c#\r\nservices.AddDataProtection()\r\n                .PersistKeysToFileSystem(new DirectoryInfo(""etc/keys/""))\r\n                .SetApplicationName(""AppName"")\r\n```\r\n\r\nThe Directory is a configured volume mount in the linux host.\r\nIf I dont use the volume mount, it works.\r\nVolume mount is needed as per described in MS Docs since the app is hosted in many Docker containers.\r\nPlease advise.\r\n\r\nWorks locally. But when configured to a Docker container hosted in linux, I get the following exception on startup:\r\n\r\n{""Timestamp"":""2018-03-08T20:45:37.4873753+00:00"",""Level"":""Error"",""MessageTemplate"":""An error occurred while reading the key ring."",""Exception"":""System.IO.IOException: Unknown error 524\\n   at System.IO.UnixFileSystem.MoveFile(String sourceFullPath, String destFullPath)\\n   at System.IO.File.Move(String sourceFileName, String destFileName)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElementCore(XElement element, String filename)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElement(XElement element, String friendlyName)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)"",""Properties"":{""EventId"":{""Id"":48},""SourceContext"":""Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider"",""RequestId"":""0HLC55SODK05P:00000001"",""RequestPath"":""/_health"",""CorrelationId"":null,""ConnectionId"":""0HLC55SODK05P""}}\r\n\r\n\r\n---\r\n\r\n@Tratcher commented on [Thu Mar 08 2018](https://github.com/aspnet/Hosting/issues/1343#issuecomment-371634771)\r\n\r\n@natemcmaster \r\n\r\n---\r\n\r\n@natemcmaster commented on [Thu Mar 08 2018](https://github.com/aspnet/Hosting/issues/1343#issuecomment-371636962)\r\n\r\nThis appears to be an issue with your Docker host, not with ASP.NET Core. System.IO.File.Move is failing to write into the mounted directory. Can you verify this with a minimal repro like this?\r\n```c#\r\npublic static void Main(string[] args)\r\n{\r\n    var tempFile = Path.Combine(Path.GetTempPath(), ""test.txt"");\r\n    File.WriteAllText(tempFile, ""Hello"");\r\n    File.Move(tempFile, ""etc/keys/test.txt"");\r\n}\r\n```\r\n\r\n---\r\n\r\n@joetherod commented on [Thu Mar 08 2018](https://github.com/aspnet/Hosting/issues/1343#issuecomment-371659784)\r\n\r\nWrite and move works, but still getting exception.\r\n\r\nAn error occurred while reading the key ring."",""Exception"":""System.IO.IOException: Unknown error 524\\n   at System.IO.UnixFileSystem.MoveFile(String sourceFullPath, String destFullPath)\\n   at System.IO.File.Move(String sourceFileName, String destFileName)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElementCore(XElement element, String filename)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElement(XElement element, String friendlyName)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)"",""Properties"":{""EventId"":{""Id"":48},""SourceContext"":""Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider"",""RequestId"":""0HLC597NS53I0:00000001"",""RequestPath"":""/_health"",""CorrelationId"":null,""ConnectionId"":""0HLC597NS53I0""}}\r\n\r\nAn unhandled exception was thrown by the application."",""Exception"":""System.Security.Cryptography.CryptographicException: An error occurred while trying to encrypt the provided data. Refer to the inner exception for more information. ---> System.IO.IOException: Unknown error 524\\n   at System.IO.UnixFileSystem.MoveFile(String sourceFullPath, String destFullPath)\\n   at System.IO.File.Move(String sourceFileName, String destFileName)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElementCore(XElement element, String filename)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElement(XElement element, String friendlyName)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Protect(Byte[] plaintext)\\n   --- End of inner exception stack trace ---\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Protect(Byte[] plaintext)\\n   at Microsoft.AspNetCore.Session.CookieProtection.Protect(IDataProtector protector, String data)\\n   at Microsoft.AspNetCore.Session.SessionMiddleware.<Invoke>d__9.MoveNext()\\n--- End of stack trace from previous location where exception was thrown ---\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\n   at Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware.<Invoke>d__3.MoveNext()\\n--- End of stack trace from previous location where exception was thrown ---\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\n   at Microsoft.AspNetCore.Hosting.Internal.RequestServicesContainerMiddleware.<Invoke>d__3.MoveNext()\\n--- End of stack trace from previous location where exception was thrown ---\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.<ProcessRequestsAsync>d__185`1.MoveNext()"",""Properties"":{""ConnectionId"":""0HLC597NS53I0"",""TraceIdentifier"":""0HLC597NS53I0:00000001"",""EventId"":{""Id"":13,""Name"":""ApplicationError""},""SourceContext"":""Microsoft.AspNetCore.Server.Kestrel"",""RequestId"":""0HLC597NS53I0:00000001"",""RequestPath"":""/_health"",""CorrelationId"":null}}\r\n\r\n---\r\n\r\n@natemcmaster commented on [Thu Mar 08 2018](https://github.com/aspnet/Hosting/issues/1343#issuecomment-371661817)\r\n\r\nCan you provide more log info? There should be an INFO log item just before this File.Move\r\n\r\nhttps://github.com/aspnet/DataProtection/blob/8a42c24f46d728b4728e6b20febd0a11c1111df2/src/Microsoft.AspNetCore.DataProtection/Repositories/FileSystemXmlRepository.cs#L232-L233\r\n\r\n---\r\n\r\n@joetherod commented on [Thu Mar 08 2018](https://github.com/aspnet/Hosting/issues/1343#issuecomment-371685069)\r\n\r\n services.AddDataProtection()\r\n                .PersistKeysToFileSystem(new DirectoryInfo(""etc/talentbrew/keys""))\r\n                .SetApplicationName(""XXX"")\r\n                .SetDefaultKeyLifetime(TimeSpan.FromDays(365));\r\n\r\nLevel"":""Information"",""MessageTemplate"":""Writing data to file '{FileName}'."",""Properties"":{""FileName"":""/app/etc/talentbrew/keys/key-fb6f8187-5606-445b-9591-3c268c59ff84.xml"",""EventId"":{""Id"":39},""SourceContext"":""Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository"",""RequestId"":""0HLC5BJ5EVUU9:00000001"",""RequestPath"":""/_health"",""CorrelationId"":null,""ConnectionId"":""0HLC5BJ5EVUU9""}\r\n\r\n""Level"":""Error"",""MessageTemplate"":""Connection id \\""{ConnectionId}\\"", Request id \\""{TraceIdentifier}\\"": An unhandled exception was thrown by the application."",""Exception"":""System.Security.Cryptography.CryptographicException: An error occurred while trying to encrypt the provided data. Refer to the inner exception for more information. ---> System.IO.IOException: Unknown error 524\\n   at System.IO.UnixFileSystem.MoveFile(String sourceFullPath, String destFullPath)\\n   at System.IO.File.Move(String sourceFileName, String destFileName)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElementCore(XElement element, String filename)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElement(XElement element, String friendlyName)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Protect(Byte[] plaintext)\\n   --- End of inner exception stack trace ---\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Protect(Byte[] plaintext)\\n   at Microsoft.AspNetCore.Session.CookieProtection.Protect(IDataProtector protector, String data)\\n   at Microsoft.AspNetCore.Session.SessionMiddleware.<Invoke>d__9.MoveNext()\\n--- End of stack trace from previous location where exception was thrown ---\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\n   at Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware.<Invoke>d__3.MoveNext()\\n--- End of stack trace from previous location where exception was thrown ---\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\n   at Microsoft.AspNetCore.Hosting.Internal.RequestServicesContainerMiddleware.<Invoke>d__3.MoveNext()\\n--- End of stack trace from previous location where exception was thrown ---\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.<ProcessRequestsAsync>d__185`1.MoveNext()"",""Properties"":{""ConnectionId"":""0HLC5BJ5EVUU9"",""TraceIdentifier"":""0HLC5BJ5EVUU9:00000001"",""EventId"":{""Id"":13,""Name"":""ApplicationError""},""SourceContext"":""Microsoft.AspNetCore.Server.Kestrel"",""RequestId"":""0HLC5BJ5EVUU9:00000001"",""RequestPath"":""/_health"",""CorrelationId"":null}}\r\n\r\n""Level"":""Information"",""MessageTemplate"":""Creating key {KeyId:B} with creation date {CreationDate:u}, activation date {ActivationDate:u}, and expiration date {ExpirationDate:u}."",""Properties"":{""KeyId"":""fb6f8187-5606-445b-9591-3c268c59ff84"",""CreationDate"":""2018-03-09T01:33:27.3851082+00:00"",""ActivationDate"":""2018-03-09T01:33:27.3843013+00:00"",""ExpirationDate"":""2019-03-09T01:33:27.3843013+00:00"",""EventId"":{""Id"":58},""SourceContext"":""Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"",""RequestId"":""0HLC5BJ5EVUU9:00000001"",""RequestPath"":""/_health"",""CorrelationId"":null,""ConnectionId"":""0HLC5BJ5EVUU9""},""Renderings"":{""KeyId"":[{""Format"":""B"",""Rendering"":""{fb6f8187-5606-445b-9591-3c268c59ff84}""}],""CreationDate"":[{""Format"":""u"",""Rendering"":""2018-03-09 01:33:27Z""}],""ActivationDate"":[{""Format"":""u"",""Rendering"":""2018-03-09 01:33:27Z""}],""ExpirationDate"":[{""Format"":""u"",""Rendering"":""2019-03-09 01:33:27Z""}]}}\r\n\r\nLevel"":""Error"",""MessageTemplate"":""An error occurred while reading the key ring."",""Exception"":""System.IO.IOException: Unknown error 524\\n   at System.IO.UnixFileSystem.MoveFile(String sourceFullPath, String destFullPath)\\n   at System.IO.File.Move(String sourceFileName, String destFileName)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElementCore(XElement element, String filename)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElement(XElement element, String friendlyName)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)"",""Properties"":{""EventId"":{""Id"":48},""SourceContext"":""Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider"",""RequestId"":""0HLC5BJ5EVUU9:00000001"",""RequestPath"":""/_health"",""CorrelationId"":null,""ConnectionId"":""0HLC5BJ5EVUU9""}}\r\n\r\n","c#\r\nservices.AddDataProtection()\r\n                .PersistKeysToFileSystem(new DirectoryInfo(""etc/keys/""))\r\n                .SetApplicationName(""AppName"")\r\n"
5884,"Should HttpSysDefaults.AuthenticationScheme be a const string?Right now it is a `readonly` field and is disallowed to use in a `const` context. Also this is inconsistency with other authentication packages like `JwtBearer`.\r\n\r\n### Expected result\r\n\r\nThis should compile:\r\n\r\n\r\n\r\n### Actual result\r\n\r\nCS0182 compilation error: _An attribute argument must be a constant expression, typeof expression or array creation expression of an attribute parameter type._",Done|breaking-change|feature-httpsys|area-networking,Tratcher,"Right now it is a `readonly` field and is disallowed to use in a `const` context. Also this is inconsistency with other authentication packages like `JwtBearer`.\r\n\r\n### Expected result\r\n\r\nThis should compile:\r\n\r\n```cs\r\n[Authorize(AuthenticationSchemes = HttpSysDefaults.AuthenticationScheme)]\r\npublic class FooController : Controller\r\n{\r\n    // ...\r\n}\r\n```\r\n\r\n### Actual result\r\n\r\nCS0182 compilation error: _An attribute argument must be a constant expression, typeof expression or array creation expression of an attribute parameter type._",cs\r\n[Authorize(AuthenticationSchemes = HttpSysDefaults.AuthenticationScheme)]\r\npublic class FooController : Controller\r\n{\r\n    // ...\r\n}\r\n
16469,"Rendering raw HTML contentI'm looking for a way to render raw HTML strings as part of a Blazor component. I tried the following, but like regular Razor, this escapes the HTML tags (so the output is literally the text `<p>Some text</p>` in a cyan div):\r\n\r\n\r\n\r\nIs there already something like `@Html.Raw(...)` in Blazor?\r\n\r\nMy use case: I have some markdown that is transformed to HTML by sending it to the GitHub API using an HttpClient. I'd like to display the generated HTML in my Blazor component.",area-blazor,SteveSandersonMS,"I'm looking for a way to render raw HTML strings as part of a Blazor component. I tried the following, but like regular Razor, this escapes the HTML tags (so the output is literally the text `<p>Some text</p>` in a cyan div):\r\n\r\n```HTML\r\n<div style=""background-color: cyan"">@MyHtml</div>\r\n\r\n@functions{\r\n    public string MyHtml { get; set; } = ""<p>Some text</p>"";\r\n}\r\n```\r\n\r\nIs there already something like `@Html.Raw(...)` in Blazor?\r\n\r\nMy use case: I have some markdown that is transformed to HTML by sending it to the GitHub API using an HttpClient. I'd like to display the generated HTML in my Blazor component.","HTML\r\n<div style=""background-color: cyan"">@MyHtml</div>\r\n\r\n@functions{\r\n    public string MyHtml { get; set; } = ""<p>Some text</p>"";\r\n}\r\n"
2884,"Support multiple key decryption certificates without X509StoreWhen using the X509Store, you can decrypt an old key encrypted XML key with multiple certificates. \r\n\r\nIn https://github.com/aspnet/DataProtection/pull/299, we added support for decrypting without using the X509Store for one certificate (the one passed to .ProtectKeysWithCertificate()). This doesn't yet support multiple certs though. It wouldn't be too hard to support this.\r\n\r\nUsage:\r\n",Done|area-dataprotection,natemcmaster,"When using the X509Store, you can decrypt an old key encrypted XML key with multiple certificates. \r\n\r\nIn https://github.com/aspnet/DataProtection/pull/299, we added support for decrypting without using the X509Store for one certificate (the one passed to .ProtectKeysWithCertificate()). This doesn't yet support multiple certs though. It wouldn't be too hard to support this.\r\n\r\nUsage:\r\n```c#\r\n.AddDataProtection()\r\n.ProtectKeysWithCertificate(certificate)\r\n.UseKeyDecryptionCertificates(oldCert1, oldCert2, oldCert3)\r\n```","c#\r\n.AddDataProtection()\r\n.ProtectKeysWithCertificate(certificate)\r\n.UseKeyDecryptionCertificates(oldCert1, oldCert2, oldCert3)\r\n"
2876,"[JsonPatch]: PathHelpers.NormalizePath should allow spaces and \\\\ charactersConsider\r\n```\r\npublic class Person\r\n{\r\n    [JsonProperty(""Person Name"")]\r\n    public string Name { get; set; }\r\n}\r\n```\r\n\r\nA patch can be sucessfully applied to this property as \r\n\r\n\r\nSame deal with back slashes. The invalid char check in that method is kinda unncecessary.",bug|Done|area-mvc,ajaybhargavb,"Consider\r\n```\r\npublic class Person\r\n{\r\n    [JsonProperty(""Person Name"")]\r\n    public string Name { get; set; }\r\n}\r\n```\r\n\r\nA patch can be sucessfully applied to this property as \r\n```C#\r\nvar doc = new JsonPatchDocument\r\n{\r\n    Operations = \r\n    {\r\n        new Operation(""add"", ""/Person Name"", null, ""New Name""),\r\n    },\r\n};\r\n\r\ndoc.ApplyTo(person); // This works correctly.\r\ndoc.Add(""Person Name"", ""New Name"") fails\r\n```\r\n\r\nSame deal with back slashes. The invalid char check in that method is kinda unncecessary.","C#\r\nvar doc = new JsonPatchDocument\r\n{\r\n    Operations = \r\n    {\r\n        new Operation(""add"", ""/Person Name"", null, ""New Name""),\r\n    },\r\n};\r\n\r\ndoc.ApplyTo(person); // This works correctly.\r\ndoc.Add(""Person Name"", ""New Name"") fails\r\n"
2864,307 and 308 redirectsCould there be HttpResponse.Redirect methods with 307 and 308 status codes? e.g.\r\n,Done|help wanted|enhancement|feature-http-abstractions|accepted|area-networking,Tratcher,"Could there be HttpResponse.Redirect methods with 307 and 308 status codes? e.g.\r\n```C#\r\npublic void Redirect(string location, bool permanent, bool preserveMethod);\r\n```","C#\r\npublic void Redirect(string location, bool permanent, bool preserveMethod);\r\n"
5175,"404 when publicPath is set to ""/""The bug appears to be related to this this line:\r\n\r\nhttps://github.com/aspnet/JavaScriptServices/blob/5f6f288056b3263a61a55631257db14314a02795/src/Microsoft.AspNetCore.SpaServices/Webpack/WebpackDevMiddleware.cs#L114\r\n\r\nMy webpack config has the following output:\r\n\r\n```#js\r\n        ""output"": {\r\n            ""filename"": ""js/[name].js"",\r\n            ""path"": OutputPath,\r\n            ""publicPath"": ""/""\r\n        },\r\n```\r\n\r\nIf I set the and the WebpackDevMiddleware like such:\r\n\r\n\r\n\r\nThen the hmrEndpoint defaults to ""/__webpack_hmr"" and the SpaProxy url ends up as ""//__webpack_url"". Every request to `[xxx].hot-update.json` (e.g.: `http://localhost:5000/7d73bb05e2e2c47519ea.hot-update.json`) fails with a 404.\r\n\r\nHowever, if I set up my webpack config like this:\r\n\r\n```#js\r\n        ""output"": {\r\n            ""filename"": ""js/[name].js"",\r\n            ""path"": OutputPath,\r\n            ""publicPath"": ""/dist/""\r\n        },\r\n```\r\n\r\nThen the SpaProxy url is set to ""/dist//__webpack_url"" and any request to find the hot-update config (e.g.: `http://localhost:5000/dist/7d73bb05e2e2c47519ea.hot-update.json`) works.\r\n\r\nFWIW: overriding the HmrEndpoint to ""__webpack_hmr"" does not seem to get around the problem:\r\n\r\n\r\n\r\nAlso, leaving the `publicPath` blank ("""") results in an error.\r\n\r\nEDIT: if this is the expected behavior (that `publicPath` is required to be set to ""/dist/"") then the documentation should reflect this. Otherwise, this is a bug likely due to oversimplification of the logic that builds the proxy server URLs.",investigate|area-mvc|feature-spa,ryanbrandenburg,"The bug appears to be related to this this line:\r\n\r\nhttps://github.com/aspnet/JavaScriptServices/blob/5f6f288056b3263a61a55631257db14314a02795/src/Microsoft.AspNetCore.SpaServices/Webpack/WebpackDevMiddleware.cs#L114\r\n\r\nMy webpack config has the following output:\r\n\r\n```#js\r\n        ""output"": {\r\n            ""filename"": ""js/[name].js"",\r\n            ""path"": OutputPath,\r\n            ""publicPath"": ""/""\r\n        },\r\n```\r\n\r\nIf I set the and the WebpackDevMiddleware like such:\r\n\r\n```C#\r\n                    .UseWebpackDevMiddleware(new WebpackDevMiddlewareOptions\r\n                    {\r\n                        HotModuleReplacement = true\r\n                    });\r\n```\r\n\r\nThen the hmrEndpoint defaults to ""/__webpack_hmr"" and the SpaProxy url ends up as ""//__webpack_url"". Every request to `[xxx].hot-update.json` (e.g.: `http://localhost:5000/7d73bb05e2e2c47519ea.hot-update.json`) fails with a 404.\r\n\r\nHowever, if I set up my webpack config like this:\r\n\r\n```#js\r\n        ""output"": {\r\n            ""filename"": ""js/[name].js"",\r\n            ""path"": OutputPath,\r\n            ""publicPath"": ""/dist/""\r\n        },\r\n```\r\n\r\nThen the SpaProxy url is set to ""/dist//__webpack_url"" and any request to find the hot-update config (e.g.: `http://localhost:5000/dist/7d73bb05e2e2c47519ea.hot-update.json`) works.\r\n\r\nFWIW: overriding the HmrEndpoint to ""__webpack_hmr"" does not seem to get around the problem:\r\n\r\n```C#\r\n                    .UseWebpackDevMiddleware(new WebpackDevMiddlewareOptions\r\n                    {\r\n                        HotModuleReplacement = true,\r\n                        HotModuleReplacementEndpoint = ""__webpack_hmr""\r\n                    });\r\n```\r\n\r\nAlso, leaving the `publicPath` blank ("""") results in an error.\r\n\r\nEDIT: if this is the expected behavior (that `publicPath` is required to be set to ""/dist/"") then the documentation should reflect this. Otherwise, this is a bug likely due to oversimplification of the logic that builds the proxy server URLs.",C#\r\n                    .UseWebpackDevMiddleware(new WebpackDevMiddlewareOptions\r\n                    {\r\n                        HotModuleReplacement = true\r\n                    });\r\n
2783,"Clarity around IAntiforgery and ValidateAntiForgeryTokenHi everyone, I hope you're well.\r\n\r\nI've spent the last two nights messing around with the anti-forgery request functionality. Specifically, I've been trying to figure out why I keep getting a 'Bad Request' response.\r\n\r\nNothing struck me as being overtly incorrect when using Chrome's developer tooling to examine the request and response headers (i.e., cookies were being set correctly, and the X-XSRF-TOKEN header was appended to POST requests).\r\n\r\n# The gotchas\r\n\r\n1. For quite a while I was sending GET requests and wondering why Angular wasn't appending the aforementioned X-XSRF-TOKEN header. This one is my bad. \U0001f604 \r\n\r\n2. When I figured out gotcha number 1, I was still perplexed as to why I got the 'Bad Request' response.\r\n\r\n# The problem code\r\n\r\n1. Send a GET request to a 'login' API route. The code in the method did the following:\r\n    1. Sign out the IdentityConstants.ExternalScheme\r\n    2. Sign in a user\r\n    3. Append the XSRF-TOKEN cookie\r\n    4. Return a 200 OK response.\r\n\r\n\r\n\r\n2. Send a POST request, with X-XSRF-TOKEN header, to a 'logout' API route. This code did the following:\r\n    1. Invoke SignOutAsync\r\n    2. Return a 200 OK response.\r\n\r\n\r\n# Reproducing the issue\r\n\r\n1. Exercise the 'login' endpoint, and review the cookies that get set.\r\n    1. Outcome: Identity cookie set, Antiforgery cookie set, XSRF-TOKEN cookie set.\r\n\r\n2. Exercise the 'logout' endpoint.\r\n    1. Expected outcome: Identity cookie unset, 200 OK response\r\n    2. Actual outcome: 400 Bad Request response.\r\n\r\n# The correct ASP.NET Core code\r\n\r\nThis code should be invoked by a client in the following sequence:\r\n1. Send GET request to /login endpoint\r\n2. Send GET request to /renew-xsrf-token endpoint\r\n3. Send POST request to /logout endpoint.\r\n\r\nThis sequence results in the Antiforgery functionality working as expected when /logout is invoked, rather than the 400 Bad Request response.\r\n\r\n\r\n\r\n# The correct Angular code\r\n\r\nNote the following sequencing in this TypeScript code:\r\n1. Perform the login\r\n2. In a separate GET request, renew the XSRF-TOKEN cookie\r\n3. Perform the logout (now successful).\r\n\r\n\r\n\r\n# Root cause\r\n\r\nSetting an identity by invoking a PasswordSignInAsync method and then immediately setting an XSRF-TOKEN cookie in the same request does not work.\r\n\r\nIt appears that the XSRF-TOKEN, even when set after invoking the PasswordSignInAsync method, does not recognise the newly signed in user immediately.\r\n\r\nDemarcating this process by spanning it across two separate HTTP requests (i.e., the first request sets the user identity using the PasswordSignInAsync method, and a second request sets the XSRF-TOKEN cookie in the context of this newly signed in user) resolves the issue.\r\n\r\nThis issue was the give-away for me: https://github.com/aspnet/Antiforgery/issues/155\r\n\r\nSpecifically this quote:\r\n> After I login using my service the anti-forgery token returned is not valid as it was created based on a null user. I've tried setting ClaimsPrincipal after my PasswordSignInAsync and regenerating the anti-forgery token (see below) but that still does not work. Any ideas?\r\n\r\n# Proposal\r\n\r\nCould you consider updating the documentation such that it makes mention of the importance of:\r\n1. Setting an XSRF-TOKEN cookie in the context of a logged in identity\r\n2. Having a clear demarcation between first logging the user in, and then renewing their XSRF-TOKEN in the context of that newly logged-in user (i.e., demarcation via separate HTTP request, rather than trying to set all cookies in a single request).\r\n\r\nI'd love to hear what you all think.\r\n\r\nKind regards,\r\nDaniel Loth",question|area-mvc,javiercn,"Hi everyone, I hope you're well.\r\n\r\nI've spent the last two nights messing around with the anti-forgery request functionality. Specifically, I've been trying to figure out why I keep getting a 'Bad Request' response.\r\n\r\nNothing struck me as being overtly incorrect when using Chrome's developer tooling to examine the request and response headers (i.e., cookies were being set correctly, and the X-XSRF-TOKEN header was appended to POST requests).\r\n\r\n# The gotchas\r\n\r\n1. For quite a while I was sending GET requests and wondering why Angular wasn't appending the aforementioned X-XSRF-TOKEN header. This one is my bad. \U0001f604 \r\n\r\n2. When I figured out gotcha number 1, I was still perplexed as to why I got the 'Bad Request' response.\r\n\r\n# The problem code\r\n\r\n1. Send a GET request to a 'login' API route. The code in the method did the following:\r\n    1. Sign out the IdentityConstants.ExternalScheme\r\n    2. Sign in a user\r\n    3. Append the XSRF-TOKEN cookie\r\n    4. Return a 200 OK response.\r\n\r\n```C#\r\n[AllowAnonymous]\r\n[Route(""login"")]\r\npublic async Task<IActionResult> Login()\r\n{\r\n    await HttpContext.SignOutAsync(IdentityConstants.ExternalScheme);\r\n\r\n    var result = await signInManager.PasswordSignInAsync(""test@test.com"", ""Password"", false, lockoutOnFailure: false);\r\n\r\n    var tokens = antiforgery.GetAndStoreTokens(HttpContext);\r\n    HttpContext.Response.Cookies.Append(""XSRF-TOKEN"", tokens.RequestToken, xsrfCookieOptions);\r\n\r\n    return Ok(result);\r\n}\r\n```\r\n\r\n2. Send a POST request, with X-XSRF-TOKEN header, to a 'logout' API route. This code did the following:\r\n    1. Invoke SignOutAsync\r\n    2. Return a 200 OK response.\r\n\r\n```C#\r\n[HttpPost]\r\n[ValidateAntiForgeryToken]\r\n[Route(""logout"")]\r\npublic async Task<IActionResult> Logout()\r\n{\r\n    await signInManager.SignOutAsync();\r\n\r\n    return Ok();\r\n}\r\n```\r\n# Reproducing the issue\r\n\r\n1. Exercise the 'login' endpoint, and review the cookies that get set.\r\n    1. Outcome: Identity cookie set, Antiforgery cookie set, XSRF-TOKEN cookie set.\r\n\r\n2. Exercise the 'logout' endpoint.\r\n    1. Expected outcome: Identity cookie unset, 200 OK response\r\n    2. Actual outcome: 400 Bad Request response.\r\n\r\n# The correct ASP.NET Core code\r\n\r\nThis code should be invoked by a client in the following sequence:\r\n1. Send GET request to /login endpoint\r\n2. Send GET request to /renew-xsrf-token endpoint\r\n3. Send POST request to /logout endpoint.\r\n\r\nThis sequence results in the Antiforgery functionality working as expected when /logout is invoked, rather than the 400 Bad Request response.\r\n\r\n```C#\r\n[AllowAnonymous]\r\n[Route(""renew-xsrf-token"")]\r\npublic IActionResult RenewXsrfToken()\r\n{\r\n    var tokens = antiforgery.GetAndStoreTokens(HttpContext);\r\n    HttpContext.Response.Cookies.Append(""XSRF-TOKEN"", tokens.RequestToken, xsrfCookieOptions);\r\n\r\n    return Ok();\r\n}\r\n\r\n[AllowAnonymous]\r\n[Route(""login"")]\r\npublic async Task<IActionResult> Login()\r\n{\r\n    await HttpContext.SignOutAsync(IdentityConstants.ExternalScheme);\r\n\r\n    var result = await signInManager.PasswordSignInAsync(""test@test.com"", ""Password"", false, lockoutOnFailure: false);\r\n\r\n    return Ok(result);\r\n}\r\n\r\n[HttpPost]\r\n[ValidateAntiForgeryToken]\r\n[Route(""logout"")]\r\npublic async Task<IActionResult> Logout()\r\n{\r\n    await signInManager.SignOutAsync();\r\n\r\n    return Ok();\r\n}\r\n```\r\n\r\n# The correct Angular code\r\n\r\nNote the following sequencing in this TypeScript code:\r\n1. Perform the login\r\n2. In a separate GET request, renew the XSRF-TOKEN cookie\r\n3. Perform the logout (now successful).\r\n\r\n```TypeScript\r\npublic login() {\r\n  this.http.get('/login').subscribe(tokenRenewResult => {\r\n    this.http.get('/renew-xsrf-token').subscribe(loginResult => console.log(loginResult));\r\n  });\r\n}\r\n\r\npublic logout() {\r\n  this.http.post('/logout', {}).subscribe(result => console.log(result));\r\n}\r\n```\r\n\r\n# Root cause\r\n\r\nSetting an identity by invoking a PasswordSignInAsync method and then immediately setting an XSRF-TOKEN cookie in the same request does not work.\r\n\r\nIt appears that the XSRF-TOKEN, even when set after invoking the PasswordSignInAsync method, does not recognise the newly signed in user immediately.\r\n\r\nDemarcating this process by spanning it across two separate HTTP requests (i.e., the first request sets the user identity using the PasswordSignInAsync method, and a second request sets the XSRF-TOKEN cookie in the context of this newly signed in user) resolves the issue.\r\n\r\nThis issue was the give-away for me: https://github.com/aspnet/Antiforgery/issues/155\r\n\r\nSpecifically this quote:\r\n> After I login using my service the anti-forgery token returned is not valid as it was created based on a null user. I've tried setting ClaimsPrincipal after my PasswordSignInAsync and regenerating the anti-forgery token (see below) but that still does not work. Any ideas?\r\n\r\n# Proposal\r\n\r\nCould you consider updating the documentation such that it makes mention of the importance of:\r\n1. Setting an XSRF-TOKEN cookie in the context of a logged in identity\r\n2. Having a clear demarcation between first logging the user in, and then renewing their XSRF-TOKEN in the context of that newly logged-in user (i.e., demarcation via separate HTTP request, rather than trying to set all cookies in a single request).\r\n\r\nI'd love to hear what you all think.\r\n\r\nKind regards,\r\nDaniel Loth","C#\r\n[AllowAnonymous]\r\n[Route(""login"")]\r\npublic async Task<IActionResult> Login()\r\n{\r\n    await HttpContext.SignOutAsync(IdentityConstants.ExternalScheme);\r\n\r\n    var result = await signInManager.PasswordSignInAsync(""test@test.com"", ""Password"", false, lockoutOnFailure: false);\r\n\r\n    var tokens = antiforgery.GetAndStoreTokens(HttpContext);\r\n    HttpContext.Response.Cookies.Append(""XSRF-TOKEN"", tokens.RequestToken, xsrfCookieOptions);\r\n\r\n    return Ok(result);\r\n}\r\n"
2759,"Authorization header error using DataProtection PersistKeysToAzureBlobStorageI've been trying to set up ASP.NET Core 2 DataProtection to persist shared keys to Azure Blob Storage. I'm pretty sure my setup is correct. At the moment this is running as localhost, the web apps aren't actually deployed to Azure yet. I know CORS is correct, I have other code in the same web app that uploads files to other containers in the same storage account using SAS generated on the fly. The containers are set to Private access.\r\n\r\nMy config is simple (X509 is a custom utility class that returns a certificate instance).\r\n\r\n\r\n\r\nNot shown is how I obtain and use the storage connection string, but since the resulting URI looks good (and the same connection string works for my upload process), I'm sure that part is ok. In fact, the only major difference between my working uploader and my DataProtection effort is that the uploader requests limited permissions on the fly, whereas the DataProtection URI is created referencing a policy (with all permissions and no start or expiration). The resulting URI looks normal to me. And since the error relates to authorization, I doubt it gets as far as the URI structure anyway, but here it is with sensitive details removed:\r\n\r\n`https://xxxxxxx.blob.core.windows.net/container_name/keys.xml?sv=2017-04-17&sr=b&si=aspnet-dpapi&sig=xxxxxxxxxxx`\r\n\r\nLocally I'm using Kestrel, if that matters. The beginning of the stack trace is as follows:\r\n\r\n```\r\nMicrosoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider[48]\r\n      An error occurred while reading the key ring.\r\nMicrosoft.WindowsAzure.Storage.StorageException: Server failed to authenticate the request. Make sure the value of Authorization header is formed correctly including the signature.\r\n```\r\n\r\nKind of stumped about how to troubleshoot this, there aren't any other auth-relevant options on the DataProtection service, as far as I can tell. Shouldn't the use of a SAS token remove the requirement for an auth header?",area-dataprotection|Needs: Author Feedback,natemcmaster,"I've been trying to set up ASP.NET Core 2 DataProtection to persist shared keys to Azure Blob Storage. I'm pretty sure my setup is correct. At the moment this is running as localhost, the web apps aren't actually deployed to Azure yet. I know CORS is correct, I have other code in the same web app that uploads files to other containers in the same storage account using SAS generated on the fly. The containers are set to Private access.\r\n\r\nMy config is simple (X509 is a custom utility class that returns a certificate instance).\r\n\r\n```csharp\r\nservices.AddDataProtection()\r\n    .SetApplicationName(""xxxxxxxx.com"")\r\n    .ProtectKeysWithCertificate(X509.GetCertificate(xxxxxxx))\r\n    .PersistKeysToAzureBlobStorage(new Uri(xxxxxxx));\r\n\r\nservices.AddMvc( ssl, https, etc );\r\n```\r\n\r\nNot shown is how I obtain and use the storage connection string, but since the resulting URI looks good (and the same connection string works for my upload process), I'm sure that part is ok. In fact, the only major difference between my working uploader and my DataProtection effort is that the uploader requests limited permissions on the fly, whereas the DataProtection URI is created referencing a policy (with all permissions and no start or expiration). The resulting URI looks normal to me. And since the error relates to authorization, I doubt it gets as far as the URI structure anyway, but here it is with sensitive details removed:\r\n\r\n`https://xxxxxxx.blob.core.windows.net/container_name/keys.xml?sv=2017-04-17&sr=b&si=aspnet-dpapi&sig=xxxxxxxxxxx`\r\n\r\nLocally I'm using Kestrel, if that matters. The beginning of the stack trace is as follows:\r\n\r\n```\r\nMicrosoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider[48]\r\n      An error occurred while reading the key ring.\r\nMicrosoft.WindowsAzure.Storage.StorageException: Server failed to authenticate the request. Make sure the value of Authorization header is formed correctly including the signature.\r\n```\r\n\r\nKind of stumped about how to troubleshoot this, there aren't any other auth-relevant options on the DataProtection service, as far as I can tell. Shouldn't the use of a SAS token remove the requirement for an auth header?","csharp\r\nservices.AddDataProtection()\r\n    .SetApplicationName(""xxxxxxxx.com"")\r\n    .ProtectKeysWithCertificate(X509.GetCertificate(xxxxxxx))\r\n    .PersistKeysToAzureBlobStorage(new Uri(xxxxxxx));\r\n\r\nservices.AddMvc( ssl, https, etc );\r\n"
2415,"Using Antiforgery with ASPNET Core API Login Action_From @patricknolan on Wednesday, July 26, 2017 8:38:21 PM_\r\n\r\nI have an ASPNET Core API \\ Angular app. My API needs to support cookies and tokens.\r\n\r\nAfter I login using my service the anti-forgery token returned is not valid as it was created based on a null user. I've tried setting ClaimsPrincipal after my PasswordSignInAsync and regenerating the anti-forgery token (see below) but that still does not work. Any ideas?\r\n\r\n\r\n\r\n\r\n_Copied from original issue: aspnet/Antiforgery#155_",question|area-mvc,javiercn,"_From @patricknolan on Wednesday, July 26, 2017 8:38:21 PM_\r\n\r\nI have an ASPNET Core API \\ Angular app. My API needs to support cookies and tokens.\r\n\r\nAfter I login using my service the anti-forgery token returned is not valid as it was created based on a null user. I've tried setting ClaimsPrincipal after my PasswordSignInAsync and regenerating the anti-forgery token (see below) but that still does not work. Any ideas?\r\n\r\n```c#\r\npublic virtual async Task<IActionResult> Login([FromBody] AccountLoginModel model)\r\n{\r\n        var result = await this.SignInManager.PasswordSignInAsync(model.Email, model.Password, isPersistent: model.RememberMe, lockoutOnFailure: false);\r\n        if (!result.Succeeded)\r\n        {\r\n            return this.BadRequest();\r\n        }\r\n        var user = await this.UserManager.FindByEmailAsync(model.Email);\r\n\r\n        // Must manually set the HttpContext user claims to those of the logged\r\n        // in user. Otherwise MVC will still include a XSRF token for the ""null""\r\n        // user and token validation will fail. (MVC appends the correct token for\r\n        // all subsequent reponses but this isn't good enough for a single page\r\n        // app.)\r\n        var principal = await this.PrincipalFactory.CreateAsync(user);\r\n        this.HttpContext.User = principal;\r\n\r\n        // Update XSRF token\r\n        var tokens = this.Antiforgery.GetAndStoreTokens(this.HttpContext);\r\n\r\n        return this.Ok();\r\n}\r\n```\r\n\r\n\r\n_Copied from original issue: aspnet/Antiforgery#155_","c#\r\npublic virtual async Task<IActionResult> Login([FromBody] AccountLoginModel model)\r\n{\r\n        var result = await this.SignInManager.PasswordSignInAsync(model.Email, model.Password, isPersistent: model.RememberMe, lockoutOnFailure: false);\r\n        if (!result.Succeeded)\r\n        {\r\n            return this.BadRequest();\r\n        }\r\n        var user = await this.UserManager.FindByEmailAsync(model.Email);\r\n\r\n        // Must manually set the HttpContext user claims to those of the logged\r\n        // in user. Otherwise MVC will still include a XSRF token for the ""null""\r\n        // user and token validation will fail. (MVC appends the correct token for\r\n        // all subsequent reponses but this isn't good enough for a single page\r\n        // app.)\r\n        var principal = await this.PrincipalFactory.CreateAsync(user);\r\n        this.HttpContext.User = principal;\r\n\r\n        // Update XSRF token\r\n        var tokens = this.Antiforgery.GetAndStoreTokens(this.HttpContext);\r\n\r\n        return this.Ok();\r\n}\r\n"
4863,"Partial views path is incorectly resolved in ViewComponent_From @PavelBansky on November 19, 2017 23:13_\n\nI have a ViewComponent called PagerViewComponent with corresponding View(s) stored in the `Views/Shared/Components/Pager`\r\n\r\nThe content of the directory is this:\r\n```\r\n/Views\r\n  /Shared\r\n    /Components\r\n      /Pager\r\n        _Pager.cshtml\r\n        Default.cshtml\r\n        Search.cshtml\r\n```\r\n\r\nContent of `Default.cshtml` is this\r\n\r\n\r\nIt all ends with runtime exception:\r\n```\r\nAn unhandled exception occurred while processing the request.\r\nInvalidOperationException: The partial view '_Pager' was not found. The following locations were searched:\r\n/Views/Blog/_Pager.cshtml\r\n/Views/Shared/_Pager.cshtml\r\n\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper+<RenderPartialCoreAsync>d__60.MoveNext()\r\n```\r\n\r\n**Razor would not look to resolve the partial view inside the ViewComponent directory** `Views/Shared/Components/Pager`\r\nWhen I move the `_Pager.cshtml` into `Views/Shared` directory it all works..\r\n\r\n\r\nOS: Windows 10 x64\r\n.Net Core: 2.0\r\nMicrosoft.AspNetCore.All Version=""2.0.0"" \r\nMicrosoft.VisualStudio.Web.CodeGeneration.Tools Version=""2.0.0"" \r\n\n\n_Copied from original issue: aspnet/Razor#1779_",:heavy_check_mark: Resolution: By Design|area-mvc,pranavkm,"_From @PavelBansky on November 19, 2017 23:13_\n\nI have a ViewComponent called PagerViewComponent with corresponding View(s) stored in the `Views/Shared/Components/Pager`\r\n\r\nThe content of the directory is this:\r\n```\r\n/Views\r\n  /Shared\r\n    /Components\r\n      /Pager\r\n        _Pager.cshtml\r\n        Default.cshtml\r\n        Search.cshtml\r\n```\r\n\r\nContent of `Default.cshtml` is this\r\n```csharp\r\n@model MyApp.ViewModel.PagedResultBase\r\n\r\n@Html.Partial(""_Pager"", Model)\r\n```\r\n\r\nIt all ends with runtime exception:\r\n```\r\nAn unhandled exception occurred while processing the request.\r\nInvalidOperationException: The partial view '_Pager' was not found. The following locations were searched:\r\n/Views/Blog/_Pager.cshtml\r\n/Views/Shared/_Pager.cshtml\r\n\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper+<RenderPartialCoreAsync>d__60.MoveNext()\r\n```\r\n\r\n**Razor would not look to resolve the partial view inside the ViewComponent directory** `Views/Shared/Components/Pager`\r\nWhen I move the `_Pager.cshtml` into `Views/Shared` directory it all works..\r\n\r\n\r\nOS: Windows 10 x64\r\n.Net Core: 2.0\r\nMicrosoft.AspNetCore.All Version=""2.0.0"" \r\nMicrosoft.VisualStudio.Web.CodeGeneration.Tools Version=""2.0.0"" \r\n\n\n_Copied from original issue: aspnet/Razor#1779_","csharp\r\n@model MyApp.ViewModel.PagedResultBase\r\n\r\n@Html.Partial(""_Pager"", Model)\r\n"
2308,"Improvements to HTTPS## Introduction \r\n\r\n- HTTPS enforcement is becoming increasingly [strict](https://blog.chromium.org/2017/04/next-steps-toward-more-connection.html) on the web\r\n- GDPR requires use of HTTPS\r\n- Developing with HTTPS can help prevent related issues in production\r\n- Setting up HTTPS with Kestrel today requires substantial code and custom configuration\r\n\r\n### Scenarios\r\n* Kestrel with HTTPS during development\r\n* Kestrel with HTTPS as production edge server\r\n* IIS Express with HTTPS during development\r\n* IIS with HTTPS in production\r\n* IIS with HTTPS in development\r\n* Development with HTTPS inside of Docker\r\n* In production with HTTPS inside of Docker\r\n\r\n### Goals\r\n* Minimal/no configuration for development and production\r\n* Single point for configuring HTTPS related features\r\n* Redirect incomming HTTP requests to HTTPS\r\n* Configure [HTTP Strict Transport Security Protocol (HSTS)](https://tools.ietf.org/html/rfc6797)\r\n\r\n### Technical challenges\r\n* Port and certificate discovery. (development/production) (edge server / behind proxy).\r\n* Port and certificate configuration. (development/production) (edge server / behind proxy).\r\n* Certificate management (mostly development).\r\n* Certificate trust (different across platforms).\r\n\r\n## User experience\r\n\r\n### Kestrel with HTTPS during development\r\n* New project created from command-line or VS setup by default for HTTPS\r\n* Listens on both an HTTP and HTTPS address (as specified in `launchSettings.json`)\r\n* Uses ASP.NET Core HTTPS development certificate by default\r\n  - Certificate setup by .NET Core SDK first run experience or by VS when running the project\r\n  - Command-line tool for manually creating and trusting the ASP.NET Core HTTPS development certificate \r\n* Project setup to redirect to HTTPS (port specified using env var)\r\n* Setup with HSTS support (not used in Development environment)\r\n\r\n### Kestrel wtih HTTPS as a production edge server\r\n* Production environment specific config required to specify listening addresses and production HTTPS certificate\r\n  - Configure Kestrel endpoints and certificates using default config schema (setup by default web host builder, takes precedence over server URLs):\r\n    ```json\r\n    {\r\n      ""Kestrel"": {\r\n        ""Endpoints"": {\r\n          ""HTTP"": { ""Url"": ""http://*:6000"" },\r\n          ""HTTPS"": {\r\n            ""Url"": ""https://*:6443"",\r\n            ""Certificate"": {\r\n              ""Path"": ""testCert.pfx"",\r\n              ""Password"": ""testPassword""\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    ```\r\n* Absent any configuration, by default Kestrel listens on http://localhost:5000 *and* https://localhost:5001 *if* the default HTTPS certificate is available (i.e. on a dev machine with the .NET Core SDK and the ASP.NET Core HTTPS development certificate installed)\r\n  - The default HTTPS certificate is used for any HTTPS addresses configured as server URLs\r\n  - TODO: Consider providing a way to change the default certificate\r\n* HTTPS redirect to first HTTPS server address (typically 443)\r\n* HSTS enabled in production\r\n\r\n### HTTPS redirection\r\n* New HTTPS redirection extension method (`app.UseHttpsRedirection()`) simplifies redirecting to HTTPS by simplifying the configuration of the HTTPS port\r\n  - Specify the port and redirect status code via options\r\n  - Specify the port via ASPNETCORE_HTTPS_PORT environment variable if not specified via options\r\n* By default redirects to HTTPS server address if the server is listening on only one (throw otherwise), otherwise port 443\r\n\r\n### Enabling HSTS\r\n* New HSTS middleware (`app.UseHsts()`)\r\n* Only active on HTTPS requests\r\n* HSTS options for max age, subdomains, and Chrome's [HSTS preload list](https://hstspreload.org/)\r\n* Typically used only in non-dev scenarios\r\n\r\n### Development from the command-line first run experience\r\n* Run ""dotnet new razor"" or ""dotnet new mvc""\r\n* The .NET Core SDK installs the ASP.NET Core HTTPS development certificate as part of the first run experience\r\n  - Installation of the HTTPS development certificate can be disabled by setting the DOTNET_SKIP_HTTPS_DEVELOPMENT_CERTIFICATE environment variable to true\r\n* As part of the first run experience, a message is displayed with instructions for trusting the development certificate:\r\n\r\n  ```\r\n  Installed the ASP.NET Core HTTPS development certificate. To trust the ASP.NET Core HTTPS development certificate run ""dotnet dev-certs https --trust""\r\n  ```\r\n\r\n* Run ""dotnet dev-certs https --trust"" to trust the ASP.NET Core HTTPS development certificate\r\n  - Windows: The certificate is added to the user's trusted root store. Windows displays a UI prompt to confirm the action.\r\n  - Mac: The certificate is added to the user's keychain.\r\n  - Linux: The tool displays an error message: ""The --trust option is not supported on this platform. For details on establishing certificate trust manually see https://go.microsoft.com/fwlink/?linkid=848054.""\r\n* Run ""dotnet run""\r\n\r\n### Project template updates\r\n* `launchSettings.json` is generated by default, including from the command-line:\r\n\r\n  ```json\r\n  {\r\n    ""iisSettings"": {\r\n      ""windowsAuthentication"": false,\r\n      ""anonymousAuthentication"": true,\r\n      ""iisExpress"": {\r\n        ""applicationUrl"": ""http://localhost:11199/"",\r\n        ""sslPort"": 44333\r\n      }\r\n    },\r\n    ""profiles"": {\r\n      ""IIS Express"": {\r\n        ""commandName"": ""IISExpress"",\r\n        ""launchBrowser"": true,\r\n        ""environmentVariables"": {\r\n          ""ASPNETCORE_ENVIRONMENT"": ""Development""\r\n        }\r\n      },\r\n      ""WebApplication38"": {\r\n        ""commandName"": ""Project"",\r\n        ""launchBrowser"": true,\r\n        ""environmentVariables"": {\r\n          ""ASPNETCORE_ENVIRONMENT"": ""Development"",\r\n        },\r\n        ""applicationUrl"": ""https://localhost:44333;http://localhost:11199""\r\n      }\r\n    }\r\n  }\r\n  ```\r\n\r\n  - The applicationUrl and sslPort properties result in the ASPNETCORE_URLS and ASPNETCORE_HTTPS_PORT environment variables being set\r\n  - The HTTP and HTTPS ports for all launch profiles should match\r\n  - IIS Express HTTPS port must be in the range 44300-44399\r\n\r\n* `Startup.cs` updated to enable HSTS and HTTPS redirect:\r\n\r\n  \r\n\r\n### Certificate missing error\r\n* If an HTTPS server URL is configured, but a certificate is not available an exception with the following error message is thrown:\r\n\r\n  ```\r\n  An HTTPS server URL is configured, but no HTTPS certificate is available. To install the ASP.NET Core HTTPS development certificate run ""dotnet dev-certs https"". For details on configuring HTTPS in production see https://go.microsoft.com/fwlink/?linkid=848054.\r\n  ```\r\n\r\n### IIS Express with HTTPS during development\r\n* No change to IIS Express HTTPS setup - same as exists today\r\n* Uses IIS Express Development Certificate\r\n* VS sets up env var to specify HTTPS port for HTTPS redirection middleware\r\n\r\n### IIS with HTTPS in production\r\n* No change to IIS HTTPS setup - same as exists today\r\n\r\n### Development with HTTPS in Docker\r\n- Docker tools export the ASP.NET Core HTTPS development certificate as a PFX file and mounts the path to the exported certificate\r\n- Docker tools stores the certificate password using the user secrets manager and mounts the path to the user secrets file\r\n- Project Docker Compose overrides file includes environment variables for configuring HTTPS using the exported certificate and for the specifying the HTTPS port. Also port mappings for both HTTP and HTTPS that match `launchSettings.json`.\r\n\r\n### In production with HTTPS in Docker\r\n- Production Docker compose file includes environment variables for configuring the production certificate and ports.\r\n\r\n### HTTPS in Docker details\r\n\r\n#### Runtime\r\n* ASP.NET Core on the docker container will be configured through the new Kestrel configuration system.\r\n* The configuration will be passed as environment variables on the docker-compose.override.yml files and as user secrets mapped from the hosting container.\r\n* We will use an HTTPS certificate that will be provided in a PFX file along with its password (via user secrets).\r\n\r\n#### Tooling\r\n* The docker tools will use the 'dev-certs' tool to generate/trust/export the certificate to use\r\nfor HTTPS into a well-known location and with a password of their choosing.\r\n* The docker tools will use the 'user-secrets' tool to place the password for the certificate in the user secrets\r\nfile for the project under the right key.\r\n* On first run, the docker tooling will perform the above actions to ensure that the certificate is provisioned/trusted/exported to\r\n  the right folder location and that the password used to export the certificate is on the user secrets for the application.\r\n\r\n#### Dockerfile changes\r\n* In addition to exposing port 80 we will also export port 443 for HTTPS connections.\r\n\r\n#### Docker compose changes\r\n* We will add environment variables to configure the endpoints kestrel will listen on and to indicated the path where the certificate will\r\n  be made available inside the container.\r\n* We will define the external ports where we want the container to be listening on and those will match the ones in launchSettings.json\r\n* We will map two paths from the host machine into the container.\r\n    * We will map the user secrets folder on the host machine to the user secrets folder on the container.\r\n    * We will map the folder where we've exported the HTTPS certificate into the folder where we expect the certificate to be found in the container.\r\n\r\n#### Sample docker-compose.overrride.yml\r\n```yml\r\nversion: '3.0'\r\n\r\nservices:\r\n  dockerhttps:\r\n    environment:\r\n      - ASPNETCORE_ENVIRONMENT=Development\r\n      # The name of the variable below does not reflect the actual name\r\n      - ASPNETCORE_URLS=https://*:443;http://*:80\r\n      - ASPNETCORE_HTTPS_PORT=44349\r\n    ports:\r\n      # Both of these ports have been taken from launchSettings.json in the application.\r\n      - ""51217:80""\r\n      - ""44349:443""\r\n    volumes:\r\n      - ${APPDATA}/Microsoft/UserSecrets/:/root/.microsoft/usersecrets\r\n      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https/\r\n    \r\nnetworks:\r\n  default:\r\n    external:\r\n      name: nat\r\n```\r\n\r\n[HTTPS project](https://github.com/orgs/aspnet/projects/11)",enhancement,danroth27|javiercn,"## Introduction \r\n\r\n- HTTPS enforcement is becoming increasingly [strict](https://blog.chromium.org/2017/04/next-steps-toward-more-connection.html) on the web\r\n- GDPR requires use of HTTPS\r\n- Developing with HTTPS can help prevent related issues in production\r\n- Setting up HTTPS with Kestrel today requires substantial code and custom configuration\r\n\r\n### Scenarios\r\n* Kestrel with HTTPS during development\r\n* Kestrel with HTTPS as production edge server\r\n* IIS Express with HTTPS during development\r\n* IIS with HTTPS in production\r\n* IIS with HTTPS in development\r\n* Development with HTTPS inside of Docker\r\n* In production with HTTPS inside of Docker\r\n\r\n### Goals\r\n* Minimal/no configuration for development and production\r\n* Single point for configuring HTTPS related features\r\n* Redirect incomming HTTP requests to HTTPS\r\n* Configure [HTTP Strict Transport Security Protocol (HSTS)](https://tools.ietf.org/html/rfc6797)\r\n\r\n### Technical challenges\r\n* Port and certificate discovery. (development/production) (edge server / behind proxy).\r\n* Port and certificate configuration. (development/production) (edge server / behind proxy).\r\n* Certificate management (mostly development).\r\n* Certificate trust (different across platforms).\r\n\r\n## User experience\r\n\r\n### Kestrel with HTTPS during development\r\n* New project created from command-line or VS setup by default for HTTPS\r\n* Listens on both an HTTP and HTTPS address (as specified in `launchSettings.json`)\r\n* Uses ASP.NET Core HTTPS development certificate by default\r\n  - Certificate setup by .NET Core SDK first run experience or by VS when running the project\r\n  - Command-line tool for manually creating and trusting the ASP.NET Core HTTPS development certificate \r\n* Project setup to redirect to HTTPS (port specified using env var)\r\n* Setup with HSTS support (not used in Development environment)\r\n\r\n### Kestrel wtih HTTPS as a production edge server\r\n* Production environment specific config required to specify listening addresses and production HTTPS certificate\r\n  - Configure Kestrel endpoints and certificates using default config schema (setup by default web host builder, takes precedence over server URLs):\r\n    ```json\r\n    {\r\n      ""Kestrel"": {\r\n        ""Endpoints"": {\r\n          ""HTTP"": { ""Url"": ""http://*:6000"" },\r\n          ""HTTPS"": {\r\n            ""Url"": ""https://*:6443"",\r\n            ""Certificate"": {\r\n              ""Path"": ""testCert.pfx"",\r\n              ""Password"": ""testPassword""\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    ```\r\n* Absent any configuration, by default Kestrel listens on http://localhost:5000 *and* https://localhost:5001 *if* the default HTTPS certificate is available (i.e. on a dev machine with the .NET Core SDK and the ASP.NET Core HTTPS development certificate installed)\r\n  - The default HTTPS certificate is used for any HTTPS addresses configured as server URLs\r\n  - TODO: Consider providing a way to change the default certificate\r\n* HTTPS redirect to first HTTPS server address (typically 443)\r\n* HSTS enabled in production\r\n\r\n### HTTPS redirection\r\n* New HTTPS redirection extension method (`app.UseHttpsRedirection()`) simplifies redirecting to HTTPS by simplifying the configuration of the HTTPS port\r\n  - Specify the port and redirect status code via options\r\n  - Specify the port via ASPNETCORE_HTTPS_PORT environment variable if not specified via options\r\n* By default redirects to HTTPS server address if the server is listening on only one (throw otherwise), otherwise port 443\r\n\r\n### Enabling HSTS\r\n* New HSTS middleware (`app.UseHsts()`)\r\n* Only active on HTTPS requests\r\n* HSTS options for max age, subdomains, and Chrome's [HSTS preload list](https://hstspreload.org/)\r\n* Typically used only in non-dev scenarios\r\n\r\n### Development from the command-line first run experience\r\n* Run ""dotnet new razor"" or ""dotnet new mvc""\r\n* The .NET Core SDK installs the ASP.NET Core HTTPS development certificate as part of the first run experience\r\n  - Installation of the HTTPS development certificate can be disabled by setting the DOTNET_SKIP_HTTPS_DEVELOPMENT_CERTIFICATE environment variable to true\r\n* As part of the first run experience, a message is displayed with instructions for trusting the development certificate:\r\n\r\n  ```\r\n  Installed the ASP.NET Core HTTPS development certificate. To trust the ASP.NET Core HTTPS development certificate run ""dotnet dev-certs https --trust""\r\n  ```\r\n\r\n* Run ""dotnet dev-certs https --trust"" to trust the ASP.NET Core HTTPS development certificate\r\n  - Windows: The certificate is added to the user's trusted root store. Windows displays a UI prompt to confirm the action.\r\n  - Mac: The certificate is added to the user's keychain.\r\n  - Linux: The tool displays an error message: ""The --trust option is not supported on this platform. For details on establishing certificate trust manually see https://go.microsoft.com/fwlink/?linkid=848054.""\r\n* Run ""dotnet run""\r\n\r\n### Project template updates\r\n* `launchSettings.json` is generated by default, including from the command-line:\r\n\r\n  ```json\r\n  {\r\n    ""iisSettings"": {\r\n      ""windowsAuthentication"": false,\r\n      ""anonymousAuthentication"": true,\r\n      ""iisExpress"": {\r\n        ""applicationUrl"": ""http://localhost:11199/"",\r\n        ""sslPort"": 44333\r\n      }\r\n    },\r\n    ""profiles"": {\r\n      ""IIS Express"": {\r\n        ""commandName"": ""IISExpress"",\r\n        ""launchBrowser"": true,\r\n        ""environmentVariables"": {\r\n          ""ASPNETCORE_ENVIRONMENT"": ""Development""\r\n        }\r\n      },\r\n      ""WebApplication38"": {\r\n        ""commandName"": ""Project"",\r\n        ""launchBrowser"": true,\r\n        ""environmentVariables"": {\r\n          ""ASPNETCORE_ENVIRONMENT"": ""Development"",\r\n        },\r\n        ""applicationUrl"": ""https://localhost:44333;http://localhost:11199""\r\n      }\r\n    }\r\n  }\r\n  ```\r\n\r\n  - The applicationUrl and sslPort properties result in the ASPNETCORE_URLS and ASPNETCORE_HTTPS_PORT environment variables being set\r\n  - The HTTP and HTTPS ports for all launch profiles should match\r\n  - IIS Express HTTPS port must be in the range 44300-44399\r\n\r\n* `Startup.cs` updated to enable HSTS and HTTPS redirect:\r\n\r\n  ```csharp\r\n  public void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n  {\r\n      if (env.IsDevelopment())\r\n      {\r\n          app.UseDeveloperExceptionPage();\r\n      }\r\n      else\r\n      {\r\n          app.UseExceptionHandler(""/Home/Error"");\r\n          app.UseHsts();\r\n      }\r\n\r\n      app.UseHttpsRedirection();\r\n      app.UseStaticFiles();\r\n\r\n      app.UseMvc(routes =>\r\n      {\r\n          routes.MapRoute(\r\n              name: ""default"",\r\n              template: ""{controller=Home}/{action=Index}/{id?}"");\r\n      });\r\n  }\r\n  ```\r\n\r\n### Certificate missing error\r\n* If an HTTPS server URL is configured, but a certificate is not available an exception with the following error message is thrown:\r\n\r\n  ```\r\n  An HTTPS server URL is configured, but no HTTPS certificate is available. To install the ASP.NET Core HTTPS development certificate run ""dotnet dev-certs https"". For details on configuring HTTPS in production see https://go.microsoft.com/fwlink/?linkid=848054.\r\n  ```\r\n\r\n### IIS Express with HTTPS during development\r\n* No change to IIS Express HTTPS setup - same as exists today\r\n* Uses IIS Express Development Certificate\r\n* VS sets up env var to specify HTTPS port for HTTPS redirection middleware\r\n\r\n### IIS with HTTPS in production\r\n* No change to IIS HTTPS setup - same as exists today\r\n\r\n### Development with HTTPS in Docker\r\n- Docker tools export the ASP.NET Core HTTPS development certificate as a PFX file and mounts the path to the exported certificate\r\n- Docker tools stores the certificate password using the user secrets manager and mounts the path to the user secrets file\r\n- Project Docker Compose overrides file includes environment variables for configuring HTTPS using the exported certificate and for the specifying the HTTPS port. Also port mappings for both HTTP and HTTPS that match `launchSettings.json`.\r\n\r\n### In production with HTTPS in Docker\r\n- Production Docker compose file includes environment variables for configuring the production certificate and ports.\r\n\r\n### HTTPS in Docker details\r\n\r\n#### Runtime\r\n* ASP.NET Core on the docker container will be configured through the new Kestrel configuration system.\r\n* The configuration will be passed as environment variables on the docker-compose.override.yml files and as user secrets mapped from the hosting container.\r\n* We will use an HTTPS certificate that will be provided in a PFX file along with its password (via user secrets).\r\n\r\n#### Tooling\r\n* The docker tools will use the 'dev-certs' tool to generate/trust/export the certificate to use\r\nfor HTTPS into a well-known location and with a password of their choosing.\r\n* The docker tools will use the 'user-secrets' tool to place the password for the certificate in the user secrets\r\nfile for the project under the right key.\r\n* On first run, the docker tooling will perform the above actions to ensure that the certificate is provisioned/trusted/exported to\r\n  the right folder location and that the password used to export the certificate is on the user secrets for the application.\r\n\r\n#### Dockerfile changes\r\n* In addition to exposing port 80 we will also export port 443 for HTTPS connections.\r\n\r\n#### Docker compose changes\r\n* We will add environment variables to configure the endpoints kestrel will listen on and to indicated the path where the certificate will\r\n  be made available inside the container.\r\n* We will define the external ports where we want the container to be listening on and those will match the ones in launchSettings.json\r\n* We will map two paths from the host machine into the container.\r\n    * We will map the user secrets folder on the host machine to the user secrets folder on the container.\r\n    * We will map the folder where we've exported the HTTPS certificate into the folder where we expect the certificate to be found in the container.\r\n\r\n#### Sample docker-compose.overrride.yml\r\n```yml\r\nversion: '3.0'\r\n\r\nservices:\r\n  dockerhttps:\r\n    environment:\r\n      - ASPNETCORE_ENVIRONMENT=Development\r\n      # The name of the variable below does not reflect the actual name\r\n      - ASPNETCORE_URLS=https://*:443;http://*:80\r\n      - ASPNETCORE_HTTPS_PORT=44349\r\n    ports:\r\n      # Both of these ports have been taken from launchSettings.json in the application.\r\n      - ""51217:80""\r\n      - ""44349:443""\r\n    volumes:\r\n      - ${APPDATA}/Microsoft/UserSecrets/:/root/.microsoft/usersecrets\r\n      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https/\r\n    \r\nnetworks:\r\n  default:\r\n    external:\r\n      name: nat\r\n```\r\n\r\n[HTTPS project](https://github.com/orgs/aspnet/projects/11)","csharp\r\n  public void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n  {\r\n      if (env.IsDevelopment())\r\n      {\r\n          app.UseDeveloperExceptionPage();\r\n      }\r\n      else\r\n      {\r\n          app.UseExceptionHandler(""/Home/Error"");\r\n          app.UseHsts();\r\n      }\r\n\r\n      app.UseHttpsRedirection();\r\n      app.UseStaticFiles();\r\n\r\n      app.UseMvc(routes =>\r\n      {\r\n          routes.MapRoute(\r\n              name: ""default"",\r\n              template: ""{controller=Home}/{action=Index}/{id?}"");\r\n      });\r\n  }\r\n  "
4849,"Make-method-async code fix breaks ASP.NET MVC action routing after 'Async' suffix is appended to method name_From @jeremymeng on August 28, 2017 18:31_\n\n**Version Used**: \r\n\r\n**Steps to Reproduce**:\r\n\r\n1. create a ASP.NET Core project\r\n2. select MVC template, create the project, and F5 to make sure the home page is shown\r\n3. open HomeController.cs\r\n4. changing return type of `Index()` to `Task<IActionResult>`\r\n5. Add `await Task.Delay(1);` inside `Index()`\r\n6. Invoke code fix to make the method async\r\n\r\nNow the method looks like \r\n\r\n\r\n\r\n7. F5\r\n**Actual Behavior**:\r\nHTTP 404\r\n\r\nif rename the method back to `Index()` F5 works again.\n\n_Copied from original issue: dotnet/roslyn#21770_",Done|enhancement|breaking-change|area-mvc,pranavkm,"_From @jeremymeng on August 28, 2017 18:31_\n\n**Version Used**: \r\n\r\n**Steps to Reproduce**:\r\n\r\n1. create a ASP.NET Core project\r\n2. select MVC template, create the project, and F5 to make sure the home page is shown\r\n3. open HomeController.cs\r\n4. changing return type of `Index()` to `Task<IActionResult>`\r\n5. Add `await Task.Delay(1);` inside `Index()`\r\n6. Invoke code fix to make the method async\r\n\r\nNow the method looks like \r\n\r\n```csharp\r\n        public async Task<IActionResult> IndexAsync()\r\n        {\r\n            await Task.Delay(300);\r\n            return View();\r\n        }\r\n```\r\n\r\n7. F5\r\n**Actual Behavior**:\r\nHTTP 404\r\n\r\nif rename the method back to `Index()` F5 works again.\n\n_Copied from original issue: dotnet/roslyn#21770_",csharp\r\n        public async Task<IActionResult> IndexAsync()\r\n        {\r\n            await Task.Delay(300);\r\n            return View();\r\n        }\r\n
28379,"[RedisCache] Allow injection of ConnectionMultiplexerCurrently the ```RedisCache``` creates the  and does not allow access to it. This prevents the application from reusing the  for other operations like PubSub.\r\n\r\nGranted, the application could create another , but the recommendation is to have only one per application.\r\n\r\nI was thinking if it would be possible to have a separate constructor for ```RedisCache``` that would receive the . I understand that so far **Microsoft.Extensions.Caching.Redis** did not leak any implementation details about its usage of **StackExchange.Redis**. However, I noticed that **Microsoft.AspNetCore.DataProtection.Redis** leaks **StackExchange.Redis** [types here](https://github.com/aspnet/DataProtection/blob/dev/src/Microsoft.AspNetCore.DataProtection.Redis/RedisXmlRepository.cs#L26). So, I'm unclear about how you feel about keeping **StackExchange.Redis** as an implementation detail.\r\n\r\n## Proposed API\r\n\r\n```diff\r\nnamespace Microsoft.Extensions.Caching.StackExchangeRedis\r\n{\r\n    public class RedisCacheOptions\r\n    {\r\n+       Func<IConnectionMultiplexer> ConnectionMultiplexerFactory { get; set; }     \r\n    }\r\n```\r\n\r\n",help wanted|api-approved|feature-caching|area-middleware,davidfowl|JunTaoLuo,"Currently the ```RedisCache``` creates the ```ConnectionMultiplexer``` and does not allow access to it. This prevents the application from reusing the ```ConnectionMultiplexer``` for other operations like PubSub.\r\n\r\nGranted, the application could create another ```ConnectionMultiplexer```, but the recommendation is to have only one per application.\r\n\r\nI was thinking if it would be possible to have a separate constructor for ```RedisCache``` that would receive the ```ConnectionMultiplexer```. I understand that so far **Microsoft.Extensions.Caching.Redis** did not leak any implementation details about its usage of **StackExchange.Redis**. However, I noticed that **Microsoft.AspNetCore.DataProtection.Redis** leaks **StackExchange.Redis** [types here](https://github.com/aspnet/DataProtection/blob/dev/src/Microsoft.AspNetCore.DataProtection.Redis/RedisXmlRepository.cs#L26). So, I'm unclear about how you feel about keeping **StackExchange.Redis** as an implementation detail.\r\n\r\n## Proposed API\r\n\r\n```diff\r\nnamespace Microsoft.Extensions.Caching.StackExchangeRedis\r\n{\r\n    public class RedisCacheOptions\r\n    {\r\n+       Func<IConnectionMultiplexer> ConnectionMultiplexerFactory { get; set; }     \r\n    }\r\n```\r\n\r\n",ConnectionMultiplexer
5011,"ViewComponentTagHelper: Allow optional parametersSay we have a ViewComponent class\r\n\r\n\r\n\r\nIt would be great to just only write `<vc:my />` in Razor if one don't want to show that something. Currently you have to write `<vc:my show-something=""false"" />`.",Done|enhancement|area-mvc|feature-razor-pages|severity-major|affected-medium|feature-mvc-razor-views,captainsafia,"Say we have a ViewComponent class\r\n\r\n```C#\r\nclass MyViewComponent\r\n{\r\n    IViewComponentResult Invoke( bool showSomething = false ) { ... }\r\n}\r\n```\r\n\r\nIt would be great to just only write `<vc:my />` in Razor if one don't want to show that something. Currently you have to write `<vc:my show-something=""false"" />`.",C#\r\nclass MyViewComponent\r\n{\r\n    IViewComponentResult Invoke( bool showSomething = false ) { ... }\r\n}\r\n
4832,"Consider some convenience changes for MVC optionsIt would be really nice to be able to write:\r\n\r\n\r\n\r\nor \r\n\r\n\r\n\r\nInstead of:\r\n\r\n\r\n\r\nSee https://github.com/aspnet/Mvc/issues/6160#issuecomment-295296083\r\n\r\n\r\n\r\n---- \r\nThe first option would be expose a custom collection type, the second would be to just add more stuff to the `IMvcBuilder`. Either one of these could work for this scenario, but I think the builder approach could be to basically anything we want to make into a one liner.",Needs: Design|enhancement|breaking-change|area-mvc,pranavkm,"It would be really nice to be able to write:\r\n\r\n```c#\r\nservices.AddMvc(options => options.ModelBinderProviders.RemoveByType(typeof(ByteArrayModelBinderProvider));\r\n```\r\n\r\nor \r\n\r\n```c#\r\nservices.AddMvc().RemoveModelBinderProvider(typeof(ByteArrayModelBinder));\r\n```\r\n\r\nInstead of:\r\n\r\n```c#\r\nservices.AddMvc(options => options.ModelBinderProviders.Remove(options.ModelBinderProviders.OfType<ByteArrayModelBinderProvider>().Single()));\r\n```\r\n\r\nSee https://github.com/aspnet/Mvc/issues/6160#issuecomment-295296083\r\n\r\n\r\n\r\n---- \r\nThe first option would be expose a custom collection type, the second would be to just add more stuff to the `IMvcBuilder`. Either one of these could work for this scenario, but I think the builder approach could be to basically anything we want to make into a one liner.",c#\r\nservices.AddMvc(options => options.ModelBinderProviders.RemoveByType(typeof(ByteArrayModelBinderProvider));\r\n
